
coursework.elf:     file format elf32-littlenios2
coursework.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0080023c

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x00010cb0 memsz 0x00010cb0 flags r-x
    LOAD off    0x00011cd0 vaddr 0x00810cd0 paddr 0x008128e4 align 2**12
         filesz 0x00001c14 memsz 0x00001c14 flags rw-
    LOAD off    0x000144f8 vaddr 0x008144f8 paddr 0x008144f8 align 2**12
         filesz 0x00000000 memsz 0x00000168 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   0000021c  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000103d4  0080023c  0080023c  0000123c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000006c0  00810610  00810610  00011610  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c14  00810cd0  008128e4  00011cd0  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000168  008144f8  008144f8  000144f8  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00814660  00814660  000138e4  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  000138e4  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001108  00000000  00000000  00013918  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   000303ee  00000000  00000000  00014a20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000bcdf  00000000  00000000  00044e0e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   00017997  00000000  00000000  00050aed  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  0000263c  00000000  00000000  00068484  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    0000412a  00000000  00000000  0006aac0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0001e590  00000000  00000000  0006ebea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_alt_sim_info 00000060  00000000  00000000  0008d17c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00002490  00000000  00000000  0008d1e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .thread_model 00000003  00000000  00000000  00092cbf  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00092cc2  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00092cc5  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00092cc6  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00092cc7  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  00092ccb  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  00092ccf  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00092cd3  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  00092cdc  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00092ce5  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000d  00000000  00000000  00092cee  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000028  00000000  00000000  00092cfb  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
0080023c l    d  .text	00000000 .text
00810610 l    d  .rodata	00000000 .rodata
00810cd0 l    d  .rwdata	00000000 .rwdata
008144f8 l    d  .bss	00000000 .bss
00814660 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 c:/Users/tjmoo/infoproc/coursework/Board/software/coursework_bsp//obj/HAL/src/crt0.o
00800284 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 fdopen.c
00000000 l    df *ABS*	00000000 findfp.c
00800604 l     F .text	00000008 __fp_lock
00800618 l     F .text	00000008 __fp_unlock
00800620 l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00810cdc l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
008038f0 l     F .text	000000c0 __sbprintf
008106c0 l     O .rodata	00000010 blanks.1
008106b0 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 dtoa.c
00803bd0 l     F .text	00000220 quorem
00000000 l    df *ABS*	00000000 fclose.c
00805538 l     F .text	000000c0 _fclose_r.part.0
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
00810774 l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 vfprintf.c
00808044 l     F .text	000000f4 __sprint_r.part.0
008094b0 l     F .text	000000c0 __sbprintf
008108a8 l     O .rodata	00000010 blanks.1
00810898 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0080d8b4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080d9cc l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080da30 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0080db48 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0080dc34 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080dd9c l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080de88 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
0080e068 l     F .text	0000003c alt_get_errno
0080e0a4 l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 alt_read.c
0080e2e0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
008128d4 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0080e57c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0080e6bc l     F .text	00000034 alt_dev_reg
0081181c l     O .rwdata	00001060 jtag_uart
0081287c l     O .rwdata	0000002c accelerometer_spi
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0080e9b4 l     F .text	00000210 altera_avalon_jtag_uart_irq
0080ebc4 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0080f208 l     F .text	00000080 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_accelerometer_spi.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0080f9a8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0080fdd8 l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00814534 g     O .bss	00000004 alt_instruction_exception_handler
00807930 g     F .text	00000070 _mprec_log10
00807a1c g     F .text	00000060 __any_on
00809964 g     F .text	00000058 _isatty_r
00810780 g     O .rodata	00000028 __mprec_tinytens
0080dfa4 g     F .text	0000007c alt_main
008002e8 g     F .text	00000034 led_write
008014c4 g     F .text	000000cc _puts_r
0080031c g     F .text	00000098 no_overflow
00814560 g     O .bss	00000100 alt_irq
008062e4 g     F .text	00000064 _lseek_r
008128e4 g       *ABS*	00000000 __flash_rwdata_start
008009b0 g     F .text	000000b8 __sflags
0080c394 g     F .text	00000080 .hidden __eqdf2
00814660 g       *ABS*	00000000 __alt_heap_start
0080a350 g     F .text	00000060 _kill_r
00809d1c g     F .text	0000006c _wcrtomb_r
00809ec0 g     F .text	00000098 _signal_r
008016d4 g     F .text	0000005c __sseek
00800968 g     F .text	00000010 __sinit
00809bbc g     F .text	00000148 __swbuf_r
008099bc g     F .text	00000074 _setlocale_r
00800788 g     F .text	00000078 __sfmoreglue
0080e044 g     F .text	00000024 __malloc_unlock
00810cd0 g     O .rwdata	0000000a uintto7seg
008144f8 g     O .bss	00000004 fp
00806760 g     F .text	0000012c memmove
00800954 g     F .text	00000014 _cleanup
0080688c g     F .text	000000a4 _Balloc
0080c414 g     F .text	000000e8 .hidden __gtdf2
00810254 g     F .text	00000024 altera_nios2_gen2_irq_init
00800000 g     F .entry	0000001c __reset
008062c4 g     F .text	00000008 __localeconv_l
0080f454 g     F .text	000000d4 alt_up_accelerometer_spi_read_x_axis
00800020 g       *ABS*	00000000 __flash_exceptions_start
00809904 g     F .text	00000060 _fstat_r
00814514 g     O .bss	00000004 errno
0080164c g     F .text	00000008 __seofread
00814520 g     O .bss	00000004 alt_argv
0081a8a8 g       *ABS*	00000000 _gp
0080e54c g     F .text	00000030 usleep
0080db28 g     F .text	00000020 getpid
0081169c g     O .rwdata	00000180 alt_fd_list
0080fb54 g     F .text	00000090 alt_find_dev
00806660 g     F .text	00000100 memcpy
0080060c g     F .text	0000000c _cleanup_r
0080d718 g     F .text	000000b8 .hidden __floatsidf
0080feac g     F .text	0000007c alt_io_redirect
0080c4fc g     F .text	000000e8 .hidden __ltdf2
008128a8 g     O .rwdata	00000002 x_val
00810610 g       *ABS*	00000000 __DTOR_END__
00801590 g     F .text	00000010 puts
00810308 g     F .text	00000098 alt_exception_cause_generated_bad_addr
0080788c g     F .text	000000a4 __ratio
00809494 g     F .text	0000001c __vfiprintf_internal
0080edc0 g     F .text	00000220 altera_avalon_jtag_uart_read
0080b08c g     F .text	00000064 .hidden __udivsi3
0080db84 g     F .text	000000b0 isatty
00809f58 g     F .text	000000c4 _raise_r
00809570 g     F .text	00000064 __assert_func
008107d0 g     O .rodata	000000c8 __mprec_tens
00810278 g     F .text	00000090 alt_icache_flush
00814510 g     O .bss	00000004 __malloc_top_pad
0080a3b0 g     F .text	00000004 _getpid_r
008062cc g     F .text	0000000c _localeconv_r
00806cfc g     F .text	000000b0 __i2b
00805dfc g     F .text	000004c8 __sfvwrite_r
0080a01c g     F .text	000000bc __sigtramp_r
008015a0 g     F .text	00000058 _sbrk_r
00807a7c g     F .text	00000064 _read_r
008128cc g     O .rwdata	00000004 alt_max_fd
008055f8 g     F .text	00000070 _fclose_r
00805960 g     F .text	00000084 fflush
0081450c g     O .bss	00000004 __malloc_max_sbrked_mem
0080ff28 g     F .text	00000180 alt_irq_register
0080b174 g     F .text	000008f0 .hidden __adddf3
00807620 g     F .text	00000108 __b2d
0080a9d4 g     F .text	000005c4 .hidden __umoddi3
0080dec4 g     F .text	000000e0 lseek
008128ac g     O .rwdata	00000004 _global_impure_ptr
00807ae0 g     F .text	00000564 _realloc_r
00814660 g       *ABS*	00000000 __bss_end
0081014c g     F .text	00000108 alt_tick
0080a3b4 g     F .text	00000620 .hidden __udivdi3
00809868 g     F .text	00000024 _fputwc_r
008107a8 g     O .rodata	00000028 __mprec_bigtens
00806ab0 g     F .text	00000138 __s2b
00809e4c g     F .text	00000018 abort
0080d7d0 g     F .text	00000090 .hidden __floatunsidf
00807340 g     F .text	00000058 __mcmp
00800988 g     F .text	00000014 __fp_lock_all
008100a8 g     F .text	000000a4 alt_alarm_stop
00814528 g     O .bss	00000004 alt_irq_active
008000fc g     F .exceptions	000000cc alt_irq_handler
00811674 g     O .rwdata	00000028 alt_dev_null
0080f95c g     F .text	0000004c alt_dcache_flush_all
00806be8 g     F .text	00000064 __hi0bits
0080d698 g     F .text	00000080 .hidden __fixdfsi
008128e4 g       *ABS*	00000000 __ram_rwdata_end
008128c4 g     O .rwdata	00000008 alt_dev_list
0080e5b8 g     F .text	00000104 write
008144fc g     O .bss	00000004 x_read
00810cd0 g       *ABS*	00000000 __ram_rodata_end
0080da6c g     F .text	000000bc fstat
00800a90 g     F .text	00000024 fprintf
0080dc70 g     F .text	0000012c kill
0080c4fc g     F .text	000000e8 .hidden __ledf2
00807070 g     F .text	00000148 __pow5mult
00808150 g     F .text	00001344 ___vfiprintf_internal_r
0080b0f0 g     F .text	0000005c .hidden __umodsi3
00814660 g       *ABS*	00000000 end
0080e900 g     F .text	000000b4 altera_avalon_jtag_uart_init
008001c8 g     F .exceptions	00000074 alt_instruction_exception_entry
00810610 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
0080f288 g     F .text	0000007c alt_avalon_timer_sc_init
0080d860 g     F .text	00000054 .hidden __clzsi2
0080efe0 g     F .text	00000228 altera_avalon_jtag_uart_write
00800978 g     F .text	00000004 __sfp_lock_acquire
00806590 g     F .text	000000d0 memchr
008017d0 g     F .text	00002104 ___vfprintf_internal_r
00805b00 g     F .text	000002fc _free_r
00810a0c g     O .rodata	00000180 _ctype_b
00809a30 g     F .text	0000000c __locale_mb_cur_max
008104f0 g     F .text	00000120 __call_exitprocs
008128b4 g     O .rwdata	00000004 __malloc_sbrk_base
0080023c g     F .text	0000004c _start
0081452c g     O .bss	00000004 _alt_tick_rate
008071b8 g     F .text	00000188 __lshift
00814530 g     O .bss	00000004 _alt_nticks
0080a194 g     F .text	000000a0 signal
0080e31c g     F .text	00000108 read
0080e72c g     F .text	00000070 alt_sys_init
0080f340 g     F .text	00000044 alt_up_accelerometer_spi_read_address_register
00810460 g     F .text	00000090 __register_exitproc
008003b4 g     F .text	000000a0 update_xval
00806dac g     F .text	000002c4 __multiply
0080ec64 g     F .text	00000068 altera_avalon_jtag_uart_close
0080b14c g     F .text	00000028 .hidden __mulsi3
00810cd0 g       *ABS*	00000000 __ram_rwdata_start
00810610 g       *ABS*	00000000 __ram_rodata_start
00814538 g     O .bss	00000028 __malloc_current_mallinfo
00807728 g     F .text	00000164 __d2b
0080e79c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
008004cc g     F .text	0000009c _fdopen_r
0080fcec g     F .text	000000b8 alt_get_fd
0080f804 g     F .text	00000158 alt_busy_sleep
0080f528 g     F .text	000000d4 alt_up_accelerometer_spi_read_y_axis
00803b78 g     F .text	00000058 _close_r
008103e8 g     F .text	00000078 memcmp
0080e85c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00814660 g       *ABS*	00000000 __alt_stack_base
0080e8ac g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00800568 g     F .text	0000009c fdopen
00803a14 g     F .text	00000164 __swsetup_r
0080ba64 g     F .text	00000930 .hidden __divdf3
00800800 g     F .text	00000154 __sfp
008079a0 g     F .text	0000007c __copybits
00814504 g     O .bss	00000001 send_counter
00811100 g     O .rwdata	00000408 __malloc_av_
00800984 g     F .text	00000004 __sinit_lock_release
0080c5e4 g     F .text	000007ac .hidden __muldf3
008015f8 g     F .text	00000054 __sread
0080fbe4 g     F .text	00000108 alt_find_file
0080f9e4 g     F .text	000000a8 alt_dev_llist_insert
0080e020 g     F .text	00000024 __malloc_lock
00800a68 g     F .text	00000028 _fprintf_r
0080e494 g     F .text	000000b8 sbrk
00805900 g     F .text	00000060 _fflush_r
008095e8 g     F .text	000000c4 _calloc_r
008144f8 g       *ABS*	00000000 __bss_start
008013d4 g     F .text	000000f0 memset
00800454 g     F .text	00000078 main
00814524 g     O .bss	00000004 alt_envp
00814508 g     O .bss	00000004 __malloc_max_total_mem
0080e7fc g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00809d04 g     F .text	00000018 __swbuf
00801730 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
00805668 g     F .text	00000070 fclose
00803df0 g     F .text	00001748 _dtoa_r
00800bf4 g     F .text	000007e0 _malloc_r
00809e1c g     F .text	00000030 __ascii_wctomb
008128d0 g     O .rwdata	00000004 alt_errno
008096ac g     F .text	00000020 _fiprintf_r
0080a234 g     F .text	00000060 _init_signal
00800ab4 g     F .text	00000098 _fwalk
00809ab0 g     F .text	0000000c _mbtowc_r
0080af98 g     F .text	00000080 .hidden __divsi3
008059e4 g     F .text	0000011c _malloc_trim_r
00810610 g       *ABS*	00000000 __CTOR_END__
00809b00 g     F .text	000000b8 strcmp
00810610 g       *ABS*	00000000 __flash_rodata_start
00810610 g       *ABS*	00000000 __DTOR_LIST__
0080c394 g     F .text	00000080 .hidden __nedf2
0080e6f0 g     F .text	0000003c alt_irq_init
0080e424 g     F .text	00000070 alt_release_fd
00810b8c g     O .rodata	00000100 .hidden __clz_tab
00814518 g     O .bss	00000004 _PathLocale
008103a0 g     F .text	00000014 atexit
008039b0 g     F .text	00000064 _write_r
00809a3c g     F .text	00000074 setlocale
008128b0 g     O .rwdata	00000004 _impure_ptr
0081451c g     O .bss	00000004 alt_argc
008056d8 g     F .text	00000228 __sflush_r
0080faf0 g     F .text	00000064 _do_dtors
00800020 g       .exceptions	00000000 alt_irq_entry
00809abc g     F .text	00000044 __ascii_mbtowc
008075c4 g     F .text	0000005c __ulp
0080099c g     F .text	00000014 __fp_unlock_all
008128bc g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
0080f304 g     F .text	0000003c alt_up_accelerometer_spi_open_dev
008062d8 g     F .text	0000000c localeconv
008064f8 g     F .text	00000098 __swhatbuf_r
008128e4 g       *ABS*	00000000 _edata
00814660 g       *ABS*	00000000 _end
00809704 g     F .text	00000164 __fputwc
0080023c g       *ABS*	00000000 __ram_exceptions_end
0080eccc g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
00801654 g     F .text	00000080 __swrite
008128b8 g     O .rwdata	00000004 __malloc_trim_threshold
008103b4 g     F .text	00000034 exit
008096cc g     F .text	00000038 fiprintf
00809bb8 g     F .text	00000004 _vfiprintf_r
00800b4c g     F .text	000000a8 _fwalk_reent
00807398 g     F .text	0000022c __mdiff
0080b018 g     F .text	00000074 .hidden __modsi3
0080f5fc g     F .text	000000d4 alt_up_accelerometer_spi_read_z_axis
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
0080097c g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
00810908 g     O .rodata	00000101 _ctype_
0080d644 g     F .text	00000054 .hidden __unorddf2
0080d9f8 g     F .text	00000038 _exit
0080f6d0 g     F .text	00000134 alt_alarm_start
0080f384 g     F .text	00000068 alt_up_accelerometer_spi_read
0080f3ec g     F .text	00000068 alt_up_accelerometer_spi_write
00806348 g     F .text	000001b0 __smakebuf_r
00801738 g     F .text	00000098 strlen
00809e64 g     F .text	0000005c _init_signal_r
0080e180 g     F .text	00000160 open
00800288 g     F .text	00000060 update_hex0
0080c414 g     F .text	000000e8 .hidden __gedf2
008095d4 g     F .text	00000014 __assert
00808138 g     F .text	00000018 __sprint_r
0080fda4 g     F .text	00000034 alt_icache_flush_all
008128d8 g     O .rwdata	00000004 alt_priority_mask
008038d4 g     F .text	0000001c __vfprintf_internal
00809e10 g     F .text	0000000c _wctomb_r
0080cd90 g     F .text	000008b4 .hidden __subdf3
00814500 g     O .bss	00000004 acc_dev
00806c4c g     F .text	000000b0 __lo0bits
008128dc g     O .rwdata	00000008 alt_alarm_list
0080fa8c g     F .text	00000064 _do_ctors
0080a294 g     F .text	000000bc __sigtramp
00809d88 g     F .text	00000088 wcrtomb
0080d8f0 g     F .text	000000dc close
00811508 g     O .rwdata	0000016c __global_locale
0080de04 g     F .text	00000084 alt_load
0080988c g     F .text	00000078 fputwc
0080a0d8 g     F .text	000000bc raise
00800980 g     F .text	00000004 __sinit_lock_acquire
00806954 g     F .text	0000015c __multadd
00806930 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08408f14 	ori	at,at,572
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__alt_mem_sdram-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000fc0 	call	8000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000706 	br	8000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  80008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  800094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  800098:	08001c80 	call	8001c8 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  80009c:	1000021e 	bne	r2,zero,8000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000f8:	ef80083a 	eret

008000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000fc:	defff904 	addi	sp,sp,-28
  800100:	dfc00615 	stw	ra,24(sp)
  800104:	df000515 	stw	fp,20(sp)
  800108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  80010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800110:	0005313a 	rdctl	r2,ipending
  800114:	e0bffc15 	stw	r2,-16(fp)

  return active;
  800118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
  800120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800124:	00800044 	movi	r2,1
  800128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80012c:	e0ffff17 	ldw	r3,-4(fp)
  800130:	e0bffe17 	ldw	r2,-8(fp)
  800134:	1884703a 	and	r2,r3,r2
  800138:	10001226 	beq	r2,zero,800184 <alt_irq_handler+0x88>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
  80013c:	e0bffd17 	ldw	r2,-12(fp)
  800140:	100690fa 	slli	r3,r2,3
  800144:	00802074 	movhi	r2,129
  800148:	1885883a 	add	r2,r3,r2
  80014c:	10d15817 	ldw	r3,17760(r2)
  800150:	e0bffd17 	ldw	r2,-12(fp)
  800154:	100890fa 	slli	r4,r2,3
  800158:	00802074 	movhi	r2,129
  80015c:	2085883a 	add	r2,r4,r2
  800160:	10915917 	ldw	r2,17764(r2)
  800164:	e17ffd17 	ldw	r5,-12(fp)
  800168:	1009883a 	mov	r4,r2
  80016c:	183ee83a 	callr	r3
#endif
        break;
  800170:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
  800174:	0005313a 	rdctl	r2,ipending
  800178:	e0bffb15 	stw	r2,-20(fp)
  return active;
  80017c:	e0bffb17 	ldw	r2,-20(fp)
  800180:	00000706 	br	8001a0 <alt_irq_handler+0xa4>
      }
      mask <<= 1;
  800184:	e0bffe17 	ldw	r2,-8(fp)
  800188:	1085883a 	add	r2,r2,r2
  80018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
  800190:	e0bffd17 	ldw	r2,-12(fp)
  800194:	10800044 	addi	r2,r2,1
  800198:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
  80019c:	003fe306 	br	80012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
  8001a0:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
  8001a4:	e0bfff17 	ldw	r2,-4(fp)
  8001a8:	103fdd1e 	bne	r2,zero,800120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001ac:	0001883a 	nop
}
  8001b0:	0001883a 	nop
  8001b4:	e037883a 	mov	sp,fp
  8001b8:	dfc00117 	ldw	ra,4(sp)
  8001bc:	df000017 	ldw	fp,0(sp)
  8001c0:	dec00204 	addi	sp,sp,8
  8001c4:	f800283a 	ret

008001c8 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8001c8:	defffb04 	addi	sp,sp,-20
  8001cc:	dfc00415 	stw	ra,16(sp)
  8001d0:	df000315 	stw	fp,12(sp)
  8001d4:	df000304 	addi	fp,sp,12
  8001d8:	e13ffd15 	stw	r4,-12(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  8001dc:	000531fa 	rdctl	r2,exception
  8001e0:	e0bfff15 	stw	r2,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  8001e4:	e0bfff17 	ldw	r2,-4(fp)
  8001e8:	1004d0ba 	srli	r2,r2,2
  8001ec:	108007cc 	andi	r2,r2,31
  8001f0:	e0bfff15 	stw	r2,-4(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  8001f4:	0005333a 	rdctl	r2,badaddr
  8001f8:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  8001fc:	d0a72317 	ldw	r2,-25460(gp)
  800200:	10000726 	beq	r2,zero,800220 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  800204:	d0a72317 	ldw	r2,-25460(gp)
  800208:	e0ffff17 	ldw	r3,-4(fp)
  80020c:	e1bffe17 	ldw	r6,-8(fp)
  800210:	e17ffd17 	ldw	r5,-12(fp)
  800214:	1809883a 	mov	r4,r3
  800218:	103ee83a 	callr	r2
  80021c:	00000206 	br	800228 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  800220:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  800224:	0005883a 	mov	r2,zero
}
  800228:	e037883a 	mov	sp,fp
  80022c:	dfc00117 	ldw	ra,4(sp)
  800230:	df000017 	ldw	fp,0(sp)
  800234:	dec00204 	addi	sp,sp,8
  800238:	f800283a 	ret

Disassembly of section .text:

0080023c <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  80023c:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
  800240:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  800244:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  800248:	00bffd16 	blt	zero,r2,800240 <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  80024c:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  800250:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  800254:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  800258:	d6aa2a14 	ori	gp,gp,43176
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  80025c:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  800260:	10913e14 	ori	r2,r2,17656

    movhi r3, %hi(__bss_end)
  800264:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  800268:	18d19814 	ori	r3,r3,18016

    beq r2, r3, 1f
  80026c:	10c00326 	beq	r2,r3,80027c <_start+0x40>

0:
    stw zero, (r2)
  800270:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  800274:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  800278:	10fffd36 	bltu	r2,r3,800270 <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  80027c:	080de040 	call	80de04 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  800280:	080dfa40 	call	80dfa4 <alt_main>

00800284 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  800284:	003fff06 	br	800284 <alt_after_alt_main>

00800288 <update_hex0>:
alt_u8 uintto7seg[10] = {0b00000010,0b11110011,0b00100101,0b00001101,0b10011001,0b01001001,0b01000010,0b00011111,0b000000001,0b00001001};




void update_hex0(alt_8 number){
  800288:	defffe04 	addi	sp,sp,-8
  80028c:	df000115 	stw	fp,4(sp)
  800290:	df000104 	addi	fp,sp,4
  800294:	2005883a 	mov	r2,r4
  800298:	e0bfff05 	stb	r2,-4(fp)
IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, uintto7seg[number]);
  80029c:	e0ffff07 	ldb	r3,-4(fp)
  8002a0:	00802074 	movhi	r2,129
  8002a4:	1885883a 	add	r2,r3,r2
  8002a8:	10833403 	ldbu	r2,3280(r2)
  8002ac:	10c03fcc 	andi	r3,r2,255
  8002b0:	00804034 	movhi	r2,256
  8002b4:	10c42835 	stwio	r3,4256(r2)
IOWR(HEX1_BASE,0, uintto7seg[number]);
  8002b8:	e0ffff07 	ldb	r3,-4(fp)
  8002bc:	00802074 	movhi	r2,129
  8002c0:	1885883a 	add	r2,r3,r2
  8002c4:	10833403 	ldbu	r2,3280(r2)
  8002c8:	10c03fcc 	andi	r3,r2,255
  8002cc:	00804034 	movhi	r2,256
  8002d0:	10c42435 	stwio	r3,4240(r2)
}
  8002d4:	0001883a 	nop
  8002d8:	e037883a 	mov	sp,fp
  8002dc:	df000017 	ldw	fp,0(sp)
  8002e0:	dec00104 	addi	sp,sp,4
  8002e4:	f800283a 	ret

008002e8 <led_write>:



void led_write(alt_u8 led_pattern) {
  8002e8:	defffe04 	addi	sp,sp,-8
  8002ec:	df000115 	stw	fp,4(sp)
  8002f0:	df000104 	addi	fp,sp,4
  8002f4:	2005883a 	mov	r2,r4
  8002f8:	e0bfff05 	stb	r2,-4(fp)
    IOWR(LED_BASE, 0, led_pattern);
  8002fc:	e0ffff03 	ldbu	r3,-4(fp)
  800300:	00804034 	movhi	r2,256
  800304:	10c42c35 	stwio	r3,4272(r2)
}
  800308:	0001883a 	nop
  80030c:	e037883a 	mov	sp,fp
  800310:	df000017 	ldw	fp,0(sp)
  800314:	dec00104 	addi	sp,sp,4
  800318:	f800283a 	ret

0080031c <no_overflow>:

alt_16 no_overflow(alt_u16 last, alt_32 change) {
  80031c:	defffd04 	addi	sp,sp,-12
  800320:	df000215 	stw	fp,8(sp)
  800324:	df000204 	addi	fp,sp,8
  800328:	2005883a 	mov	r2,r4
  80032c:	e17ffe15 	stw	r5,-8(fp)
  800330:	e0bfff0d 	sth	r2,-4(fp)
	if (change>0) return 0xFFFF-change<last?0xFFFF:last+change;
  800334:	e0bffe17 	ldw	r2,-8(fp)
  800338:	00800c0e 	bge	zero,r2,80036c <no_overflow+0x50>
  80033c:	00ffffd4 	movui	r3,65535
  800340:	e0bffe17 	ldw	r2,-8(fp)
  800344:	1887c83a 	sub	r3,r3,r2
  800348:	e0bfff0b 	ldhu	r2,-4(fp)
  80034c:	18800516 	blt	r3,r2,800364 <no_overflow+0x48>
  800350:	e0bffe17 	ldw	r2,-8(fp)
  800354:	1007883a 	mov	r3,r2
  800358:	e0bfff0b 	ldhu	r2,-4(fp)
  80035c:	10c5883a 	add	r2,r2,r3
  800360:	00001006 	br	8003a4 <no_overflow+0x88>
  800364:	00bfffc4 	movi	r2,-1
  800368:	00000e06 	br	8003a4 <no_overflow+0x88>
	if (change<0) return 0-change>last?0:last+change;
  80036c:	e0bffe17 	ldw	r2,-8(fp)
  800370:	10000b0e 	bge	r2,zero,8003a0 <no_overflow+0x84>
  800374:	e0bffe17 	ldw	r2,-8(fp)
  800378:	0085c83a 	sub	r2,zero,r2
  80037c:	e0ffff0b 	ldhu	r3,-4(fp)
  800380:	18800516 	blt	r3,r2,800398 <no_overflow+0x7c>
  800384:	e0bffe17 	ldw	r2,-8(fp)
  800388:	1007883a 	mov	r3,r2
  80038c:	e0bfff0b 	ldhu	r2,-4(fp)
  800390:	10c5883a 	add	r2,r2,r3
  800394:	00000306 	br	8003a4 <no_overflow+0x88>
  800398:	0005883a 	mov	r2,zero
  80039c:	00000106 	br	8003a4 <no_overflow+0x88>
	return last;
  8003a0:	e0bfff0b 	ldhu	r2,-4(fp)
}
  8003a4:	e037883a 	mov	sp,fp
  8003a8:	df000017 	ldw	fp,0(sp)
  8003ac:	dec00104 	addi	sp,sp,4
  8003b0:	f800283a 	ret

008003b4 <update_xval>:

void update_xval(){
  8003b4:	defffe04 	addi	sp,sp,-8
  8003b8:	dfc00115 	stw	ra,4(sp)
  8003bc:	df000015 	stw	fp,0(sp)
  8003c0:	d839883a 	mov	fp,sp
    alt_up_accelerometer_spi_read_x_axis(acc_dev, & x_read);
  8003c4:	d0a71617 	ldw	r2,-25512(gp)
  8003c8:	d1671504 	addi	r5,gp,-25516
  8003cc:	1009883a 	mov	r4,r2
  8003d0:	080f4540 	call	80f454 <alt_up_accelerometer_spi_read_x_axis>
    x_val = no_overflow(x_val,4*x_read);
  8003d4:	d0a0000b 	ldhu	r2,-32768(gp)
  8003d8:	10ffffcc 	andi	r3,r2,65535
  8003dc:	d0a71517 	ldw	r2,-25516(gp)
  8003e0:	100490ba 	slli	r2,r2,2
  8003e4:	100b883a 	mov	r5,r2
  8003e8:	1809883a 	mov	r4,r3
  8003ec:	080031c0 	call	80031c <no_overflow>
  8003f0:	d0a0000d 	sth	r2,-32768(gp)
    led_write(x_val>>8);
  8003f4:	d0a0000b 	ldhu	r2,-32768(gp)
  8003f8:	10bfffcc 	andi	r2,r2,65535
  8003fc:	1004d23a 	srli	r2,r2,8
  800400:	10803fcc 	andi	r2,r2,255
  800404:	1009883a 	mov	r4,r2
  800408:	08002e80 	call	8002e8 <led_write>
    //printf("xvalue = %d, x_read %d\n",x_val,x_read);
    fprintf(fp,"%c\n",x_val>>8);
  80040c:	d0e71417 	ldw	r3,-25520(gp)
  800410:	d0a0000b 	ldhu	r2,-32768(gp)
  800414:	10bfffcc 	andi	r2,r2,65535
  800418:	1004d23a 	srli	r2,r2,8
  80041c:	10bfffcc 	andi	r2,r2,65535
  800420:	100d883a 	mov	r6,r2
  800424:	01402074 	movhi	r5,129
  800428:	29418404 	addi	r5,r5,1552
  80042c:	1809883a 	mov	r4,r3
  800430:	0800a900 	call	800a90 <fprintf>
    usleep(SLEEP_TIME);
  800434:	01271014 	movui	r4,40000
  800438:	080e54c0 	call	80e54c <usleep>
}
  80043c:	0001883a 	nop
  800440:	e037883a 	mov	sp,fp
  800444:	dfc00117 	ldw	ra,4(sp)
  800448:	df000017 	ldw	fp,0(sp)
  80044c:	dec00204 	addi	sp,sp,8
  800450:	f800283a 	ret

00800454 <main>:



int main(){
  800454:	defffd04 	addi	sp,sp,-12
  800458:	dfc00215 	stw	ra,8(sp)
  80045c:	df000115 	stw	fp,4(sp)
  800460:	df000104 	addi	fp,sp,4

  printf("Running..\n");
  800464:	01002074 	movhi	r4,129
  800468:	21018504 	addi	r4,r4,1556
  80046c:	08015900 	call	801590 <puts>

  int fd = open("/dev/jtag_uart",O_RDWR|O_NONBLOCK);
  800470:	01500084 	movi	r5,16386
  800474:	01002074 	movhi	r4,129
  800478:	21018804 	addi	r4,r4,1568
  80047c:	080e1800 	call	80e180 <open>
  800480:	e0bfff15 	stw	r2,-4(fp)
  printf("Opened File\n");
  800484:	01002074 	movhi	r4,129
  800488:	21018c04 	addi	r4,r4,1584
  80048c:	08015900 	call	801590 <puts>

  fp = fdopen(fd, "r+");
  800490:	01402074 	movhi	r5,129
  800494:	29418f04 	addi	r5,r5,1596
  800498:	e13fff17 	ldw	r4,-4(fp)
  80049c:	08005680 	call	800568 <fdopen>
  8004a0:	d0a71415 	stw	r2,-25520(gp)
  printf("Opened Stream\n");
  8004a4:	01002074 	movhi	r4,129
  8004a8:	21019004 	addi	r4,r4,1600
  8004ac:	08015900 	call	801590 <puts>
  alt_u8 prompt;


  acc_dev = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
  8004b0:	01002074 	movhi	r4,129
  8004b4:	21019404 	addi	r4,r4,1616
  8004b8:	080f3040 	call	80f304 <alt_up_accelerometer_spi_open_dev>
  8004bc:	d0a71615 	stw	r2,-25512(gp)

  x_val = 0;
  8004c0:	d020000d 	sth	zero,-32768(gp)
  while(1) {
	  update_xval();
  8004c4:	08003b40 	call	8003b4 <update_xval>
  8004c8:	003ffe06 	br	8004c4 <main+0x70>

008004cc <_fdopen_r>:
  8004cc:	defffb04 	addi	sp,sp,-20
  8004d0:	3005883a 	mov	r2,r6
  8004d4:	dc800315 	stw	r18,12(sp)
  8004d8:	d80d883a 	mov	r6,sp
  8004dc:	2825883a 	mov	r18,r5
  8004e0:	100b883a 	mov	r5,r2
  8004e4:	dc400215 	stw	r17,8(sp)
  8004e8:	dfc00415 	stw	ra,16(sp)
  8004ec:	dc000115 	stw	r16,4(sp)
  8004f0:	2023883a 	mov	r17,r4
  8004f4:	08009b00 	call	8009b0 <__sflags>
  8004f8:	10001926 	beq	r2,zero,800560 <_fdopen_r+0x94>
  8004fc:	8809883a 	mov	r4,r17
  800500:	1021883a 	mov	r16,r2
  800504:	08008000 	call	800800 <__sfp>
  800508:	10000f26 	beq	r2,zero,800548 <_fdopen_r+0x7c>
  80050c:	01802034 	movhi	r6,128
  800510:	01402034 	movhi	r5,128
  800514:	01002034 	movhi	r4,128
  800518:	00c02034 	movhi	r3,128
  80051c:	31857e04 	addi	r6,r6,5624
  800520:	29459504 	addi	r5,r5,5716
  800524:	2105b504 	addi	r4,r4,5844
  800528:	18c5cc04 	addi	r3,r3,5936
  80052c:	1400030d 	sth	r16,12(r2)
  800530:	1480038d 	sth	r18,14(r2)
  800534:	10800715 	stw	r2,28(r2)
  800538:	11800815 	stw	r6,32(r2)
  80053c:	11400915 	stw	r5,36(r2)
  800540:	11000a15 	stw	r4,40(r2)
  800544:	10c00b15 	stw	r3,44(r2)
  800548:	dfc00417 	ldw	ra,16(sp)
  80054c:	dc800317 	ldw	r18,12(sp)
  800550:	dc400217 	ldw	r17,8(sp)
  800554:	dc000117 	ldw	r16,4(sp)
  800558:	dec00504 	addi	sp,sp,20
  80055c:	f800283a 	ret
  800560:	0005883a 	mov	r2,zero
  800564:	003ff806 	br	800548 <_fdopen_r+0x7c>

00800568 <fdopen>:
  800568:	defffb04 	addi	sp,sp,-20
  80056c:	00802074 	movhi	r2,129
  800570:	dc800315 	stw	r18,12(sp)
  800574:	148a2c17 	ldw	r18,10416(r2)
  800578:	dc400215 	stw	r17,8(sp)
  80057c:	d80d883a 	mov	r6,sp
  800580:	2023883a 	mov	r17,r4
  800584:	9009883a 	mov	r4,r18
  800588:	dfc00415 	stw	ra,16(sp)
  80058c:	dc000115 	stw	r16,4(sp)
  800590:	08009b00 	call	8009b0 <__sflags>
  800594:	10001926 	beq	r2,zero,8005fc <fdopen+0x94>
  800598:	9009883a 	mov	r4,r18
  80059c:	1021883a 	mov	r16,r2
  8005a0:	08008000 	call	800800 <__sfp>
  8005a4:	10000f26 	beq	r2,zero,8005e4 <fdopen+0x7c>
  8005a8:	01802034 	movhi	r6,128
  8005ac:	01402034 	movhi	r5,128
  8005b0:	01002034 	movhi	r4,128
  8005b4:	00c02034 	movhi	r3,128
  8005b8:	31857e04 	addi	r6,r6,5624
  8005bc:	29459504 	addi	r5,r5,5716
  8005c0:	2105b504 	addi	r4,r4,5844
  8005c4:	18c5cc04 	addi	r3,r3,5936
  8005c8:	1400030d 	sth	r16,12(r2)
  8005cc:	1440038d 	sth	r17,14(r2)
  8005d0:	10800715 	stw	r2,28(r2)
  8005d4:	11800815 	stw	r6,32(r2)
  8005d8:	11400915 	stw	r5,36(r2)
  8005dc:	11000a15 	stw	r4,40(r2)
  8005e0:	10c00b15 	stw	r3,44(r2)
  8005e4:	dfc00417 	ldw	ra,16(sp)
  8005e8:	dc800317 	ldw	r18,12(sp)
  8005ec:	dc400217 	ldw	r17,8(sp)
  8005f0:	dc000117 	ldw	r16,4(sp)
  8005f4:	dec00504 	addi	sp,sp,20
  8005f8:	f800283a 	ret
  8005fc:	0005883a 	mov	r2,zero
  800600:	003ff806 	br	8005e4 <fdopen+0x7c>

00800604 <__fp_lock>:
  800604:	0005883a 	mov	r2,zero
  800608:	f800283a 	ret

0080060c <_cleanup_r>:
  80060c:	01402034 	movhi	r5,128
  800610:	29557e04 	addi	r5,r5,22008
  800614:	0800b4c1 	jmpi	800b4c <_fwalk_reent>

00800618 <__fp_unlock>:
  800618:	0005883a 	mov	r2,zero
  80061c:	f800283a 	ret

00800620 <__sinit.part.0>:
  800620:	00c02034 	movhi	r3,128
  800624:	20800117 	ldw	r2,4(r4)
  800628:	18c18304 	addi	r3,r3,1548
  80062c:	20c00f15 	stw	r3,60(r4)
  800630:	2140bb04 	addi	r5,r4,748
  800634:	00c000c4 	movi	r3,3
  800638:	20c0b915 	stw	r3,740(r4)
  80063c:	2140ba15 	stw	r5,744(r4)
  800640:	2000b815 	stw	zero,736(r4)
  800644:	10001705 	stb	zero,92(r2)
  800648:	10001745 	stb	zero,93(r2)
  80064c:	10001785 	stb	zero,94(r2)
  800650:	100017c5 	stb	zero,95(r2)
  800654:	10001805 	stb	zero,96(r2)
  800658:	10001845 	stb	zero,97(r2)
  80065c:	10001885 	stb	zero,98(r2)
  800660:	100018c5 	stb	zero,99(r2)
  800664:	00c00104 	movi	r3,4
  800668:	10c00315 	stw	r3,12(r2)
  80066c:	02002034 	movhi	r8,128
  800670:	20c00217 	ldw	r3,8(r4)
  800674:	01c02034 	movhi	r7,128
  800678:	01802034 	movhi	r6,128
  80067c:	01402034 	movhi	r5,128
  800680:	42057e04 	addi	r8,r8,5624
  800684:	39c59504 	addi	r7,r7,5716
  800688:	3185b504 	addi	r6,r6,5844
  80068c:	2945cc04 	addi	r5,r5,5936
  800690:	02400074 	movhi	r9,1
  800694:	10001915 	stw	zero,100(r2)
  800698:	10000015 	stw	zero,0(r2)
  80069c:	10000115 	stw	zero,4(r2)
  8006a0:	10000215 	stw	zero,8(r2)
  8006a4:	10000415 	stw	zero,16(r2)
  8006a8:	10000515 	stw	zero,20(r2)
  8006ac:	10000615 	stw	zero,24(r2)
  8006b0:	10800715 	stw	r2,28(r2)
  8006b4:	12000815 	stw	r8,32(r2)
  8006b8:	11c00915 	stw	r7,36(r2)
  8006bc:	11800a15 	stw	r6,40(r2)
  8006c0:	11400b15 	stw	r5,44(r2)
  8006c4:	4a400284 	addi	r9,r9,10
  8006c8:	1a400315 	stw	r9,12(r3)
  8006cc:	18001915 	stw	zero,100(r3)
  8006d0:	18000015 	stw	zero,0(r3)
  8006d4:	18000115 	stw	zero,4(r3)
  8006d8:	18000215 	stw	zero,8(r3)
  8006dc:	18000415 	stw	zero,16(r3)
  8006e0:	18001705 	stb	zero,92(r3)
  8006e4:	18001745 	stb	zero,93(r3)
  8006e8:	18001785 	stb	zero,94(r3)
  8006ec:	180017c5 	stb	zero,95(r3)
  8006f0:	18001805 	stb	zero,96(r3)
  8006f4:	18001845 	stb	zero,97(r3)
  8006f8:	18001885 	stb	zero,98(r3)
  8006fc:	180018c5 	stb	zero,99(r3)
  800700:	20800317 	ldw	r2,12(r4)
  800704:	024000b4 	movhi	r9,2
  800708:	18000515 	stw	zero,20(r3)
  80070c:	18000615 	stw	zero,24(r3)
  800710:	18c00715 	stw	r3,28(r3)
  800714:	1a000815 	stw	r8,32(r3)
  800718:	19c00915 	stw	r7,36(r3)
  80071c:	19800a15 	stw	r6,40(r3)
  800720:	19400b15 	stw	r5,44(r3)
  800724:	4a400484 	addi	r9,r9,18
  800728:	10001915 	stw	zero,100(r2)
  80072c:	10000015 	stw	zero,0(r2)
  800730:	10000115 	stw	zero,4(r2)
  800734:	10000215 	stw	zero,8(r2)
  800738:	12400315 	stw	r9,12(r2)
  80073c:	10000415 	stw	zero,16(r2)
  800740:	10000515 	stw	zero,20(r2)
  800744:	10000615 	stw	zero,24(r2)
  800748:	10001705 	stb	zero,92(r2)
  80074c:	10001745 	stb	zero,93(r2)
  800750:	10001785 	stb	zero,94(r2)
  800754:	100017c5 	stb	zero,95(r2)
  800758:	10001805 	stb	zero,96(r2)
  80075c:	10001845 	stb	zero,97(r2)
  800760:	10001885 	stb	zero,98(r2)
  800764:	100018c5 	stb	zero,99(r2)
  800768:	10800715 	stw	r2,28(r2)
  80076c:	12000815 	stw	r8,32(r2)
  800770:	11c00915 	stw	r7,36(r2)
  800774:	11800a15 	stw	r6,40(r2)
  800778:	11400b15 	stw	r5,44(r2)
  80077c:	00800044 	movi	r2,1
  800780:	20800e15 	stw	r2,56(r4)
  800784:	f800283a 	ret

00800788 <__sfmoreglue>:
  800788:	defffc04 	addi	sp,sp,-16
  80078c:	dc800215 	stw	r18,8(sp)
  800790:	2825883a 	mov	r18,r5
  800794:	dc000015 	stw	r16,0(sp)
  800798:	01401a04 	movi	r5,104
  80079c:	2021883a 	mov	r16,r4
  8007a0:	913fffc4 	addi	r4,r18,-1
  8007a4:	dfc00315 	stw	ra,12(sp)
  8007a8:	dc400115 	stw	r17,4(sp)
  8007ac:	080b14c0 	call	80b14c <__mulsi3>
  8007b0:	8009883a 	mov	r4,r16
  8007b4:	11401d04 	addi	r5,r2,116
  8007b8:	1023883a 	mov	r17,r2
  8007bc:	0800bf40 	call	800bf4 <_malloc_r>
  8007c0:	1021883a 	mov	r16,r2
  8007c4:	10000726 	beq	r2,zero,8007e4 <__sfmoreglue+0x5c>
  8007c8:	11000304 	addi	r4,r2,12
  8007cc:	10000015 	stw	zero,0(r2)
  8007d0:	14800115 	stw	r18,4(r2)
  8007d4:	11000215 	stw	r4,8(r2)
  8007d8:	89801a04 	addi	r6,r17,104
  8007dc:	000b883a 	mov	r5,zero
  8007e0:	08013d40 	call	8013d4 <memset>
  8007e4:	8005883a 	mov	r2,r16
  8007e8:	dfc00317 	ldw	ra,12(sp)
  8007ec:	dc800217 	ldw	r18,8(sp)
  8007f0:	dc400117 	ldw	r17,4(sp)
  8007f4:	dc000017 	ldw	r16,0(sp)
  8007f8:	dec00404 	addi	sp,sp,16
  8007fc:	f800283a 	ret

00800800 <__sfp>:
  800800:	defffb04 	addi	sp,sp,-20
  800804:	00802074 	movhi	r2,129
  800808:	dc000015 	stw	r16,0(sp)
  80080c:	140a2b17 	ldw	r16,10412(r2)
  800810:	dc400115 	stw	r17,4(sp)
  800814:	dfc00415 	stw	ra,16(sp)
  800818:	80800e17 	ldw	r2,56(r16)
  80081c:	dcc00315 	stw	r19,12(sp)
  800820:	dc800215 	stw	r18,8(sp)
  800824:	2023883a 	mov	r17,r4
  800828:	10003126 	beq	r2,zero,8008f0 <__sfp+0xf0>
  80082c:	8100ba17 	ldw	r4,744(r16)
  800830:	8140b917 	ldw	r5,740(r16)
  800834:	04c00104 	movi	r19,4
  800838:	8400b804 	addi	r16,r16,736
  80083c:	297fffc4 	addi	r5,r5,-1
  800840:	2800050e 	bge	r5,zero,800858 <__sfp+0x58>
  800844:	00002406 	br	8008d8 <__sfp+0xd8>
  800848:	297fffc4 	addi	r5,r5,-1
  80084c:	28bfffd8 	cmpnei	r2,r5,-1
  800850:	21001a04 	addi	r4,r4,104
  800854:	10002026 	beq	r2,zero,8008d8 <__sfp+0xd8>
  800858:	2080030f 	ldh	r2,12(r4)
  80085c:	103ffa1e 	bne	r2,zero,800848 <__sfp+0x48>
  800860:	00bffff4 	movhi	r2,65535
  800864:	10800044 	addi	r2,r2,1
  800868:	20001915 	stw	zero,100(r4)
  80086c:	20000015 	stw	zero,0(r4)
  800870:	20000115 	stw	zero,4(r4)
  800874:	20000215 	stw	zero,8(r4)
  800878:	20800315 	stw	r2,12(r4)
  80087c:	20000415 	stw	zero,16(r4)
  800880:	20000515 	stw	zero,20(r4)
  800884:	20000615 	stw	zero,24(r4)
  800888:	20001705 	stb	zero,92(r4)
  80088c:	20001745 	stb	zero,93(r4)
  800890:	20001785 	stb	zero,94(r4)
  800894:	200017c5 	stb	zero,95(r4)
  800898:	20001805 	stb	zero,96(r4)
  80089c:	20001845 	stb	zero,97(r4)
  8008a0:	20001885 	stb	zero,98(r4)
  8008a4:	200018c5 	stb	zero,99(r4)
  8008a8:	20000c15 	stw	zero,48(r4)
  8008ac:	20000d15 	stw	zero,52(r4)
  8008b0:	20001115 	stw	zero,68(r4)
  8008b4:	20001215 	stw	zero,72(r4)
  8008b8:	2005883a 	mov	r2,r4
  8008bc:	dfc00417 	ldw	ra,16(sp)
  8008c0:	dcc00317 	ldw	r19,12(sp)
  8008c4:	dc800217 	ldw	r18,8(sp)
  8008c8:	dc400117 	ldw	r17,4(sp)
  8008cc:	dc000017 	ldw	r16,0(sp)
  8008d0:	dec00504 	addi	sp,sp,20
  8008d4:	f800283a 	ret
  8008d8:	80800017 	ldw	r2,0(r16)
  8008dc:	10000726 	beq	r2,zero,8008fc <__sfp+0xfc>
  8008e0:	11000217 	ldw	r4,8(r2)
  8008e4:	11400117 	ldw	r5,4(r2)
  8008e8:	1021883a 	mov	r16,r2
  8008ec:	003fd306 	br	80083c <__sfp+0x3c>
  8008f0:	8009883a 	mov	r4,r16
  8008f4:	08006200 	call	800620 <__sinit.part.0>
  8008f8:	003fcc06 	br	80082c <__sfp+0x2c>
  8008fc:	01406b04 	movi	r5,428
  800900:	8809883a 	mov	r4,r17
  800904:	0800bf40 	call	800bf4 <_malloc_r>
  800908:	1025883a 	mov	r18,r2
  80090c:	10000c26 	beq	r2,zero,800940 <__sfp+0x140>
  800910:	11000304 	addi	r4,r2,12
  800914:	11000215 	stw	r4,8(r2)
  800918:	000b883a 	mov	r5,zero
  80091c:	10000015 	stw	zero,0(r2)
  800920:	14c00115 	stw	r19,4(r2)
  800924:	01806804 	movi	r6,416
  800928:	08013d40 	call	8013d4 <memset>
  80092c:	1009883a 	mov	r4,r2
  800930:	84800015 	stw	r18,0(r16)
  800934:	014000c4 	movi	r5,3
  800938:	9021883a 	mov	r16,r18
  80093c:	003fc606 	br	800858 <__sfp+0x58>
  800940:	80000015 	stw	zero,0(r16)
  800944:	00800304 	movi	r2,12
  800948:	88800015 	stw	r2,0(r17)
  80094c:	0009883a 	mov	r4,zero
  800950:	003fd906 	br	8008b8 <__sfp+0xb8>

00800954 <_cleanup>:
  800954:	00802074 	movhi	r2,129
  800958:	110a2b17 	ldw	r4,10412(r2)
  80095c:	01402034 	movhi	r5,128
  800960:	29557e04 	addi	r5,r5,22008
  800964:	0800b4c1 	jmpi	800b4c <_fwalk_reent>

00800968 <__sinit>:
  800968:	20800e17 	ldw	r2,56(r4)
  80096c:	10000126 	beq	r2,zero,800974 <__sinit+0xc>
  800970:	f800283a 	ret
  800974:	08006201 	jmpi	800620 <__sinit.part.0>

00800978 <__sfp_lock_acquire>:
  800978:	f800283a 	ret

0080097c <__sfp_lock_release>:
  80097c:	f800283a 	ret

00800980 <__sinit_lock_acquire>:
  800980:	f800283a 	ret

00800984 <__sinit_lock_release>:
  800984:	f800283a 	ret

00800988 <__fp_lock_all>:
  800988:	00802074 	movhi	r2,129
  80098c:	110a2c17 	ldw	r4,10416(r2)
  800990:	01402034 	movhi	r5,128
  800994:	29418104 	addi	r5,r5,1540
  800998:	0800ab41 	jmpi	800ab4 <_fwalk>

0080099c <__fp_unlock_all>:
  80099c:	00802074 	movhi	r2,129
  8009a0:	110a2c17 	ldw	r4,10416(r2)
  8009a4:	01402034 	movhi	r5,128
  8009a8:	29418604 	addi	r5,r5,1560
  8009ac:	0800ab41 	jmpi	800ab4 <_fwalk>

008009b0 <__sflags>:
  8009b0:	28800007 	ldb	r2,0(r5)
  8009b4:	10c01ca0 	cmpeqi	r3,r2,114
  8009b8:	1800271e 	bne	r3,zero,800a58 <__sflags+0xa8>
  8009bc:	10c01de0 	cmpeqi	r3,r2,119
  8009c0:	1800061e 	bne	r3,zero,8009dc <__sflags+0x2c>
  8009c4:	10801860 	cmpeqi	r2,r2,97
  8009c8:	10001f1e 	bne	r2,zero,800a48 <__sflags+0x98>
  8009cc:	00800584 	movi	r2,22
  8009d0:	20800015 	stw	r2,0(r4)
  8009d4:	0005883a 	mov	r2,zero
  8009d8:	f800283a 	ret
  8009dc:	02018004 	movi	r8,1536
  8009e0:	01000044 	movi	r4,1
  8009e4:	00800204 	movi	r2,8
  8009e8:	28c00047 	ldb	r3,1(r5)
  8009ec:	29400044 	addi	r5,r5,1
  8009f0:	18001226 	beq	r3,zero,800a3c <__sflags+0x8c>
  8009f4:	02bff8c4 	movi	r10,-29
  8009f8:	027fff04 	movi	r9,-4
  8009fc:	00000506 	br	800a14 <__sflags+0x64>
  800a00:	18000126 	beq	r3,zero,800a08 <__sflags+0x58>
  800a04:	21020014 	ori	r4,r4,2048
  800a08:	28c00047 	ldb	r3,1(r5)
  800a0c:	29400044 	addi	r5,r5,1
  800a10:	18000a26 	beq	r3,zero,800a3c <__sflags+0x8c>
  800a14:	19c00ae0 	cmpeqi	r7,r3,43
  800a18:	18c01e20 	cmpeqi	r3,r3,120
  800a1c:	383ff826 	beq	r7,zero,800a00 <__sflags+0x50>
  800a20:	28c00047 	ldb	r3,1(r5)
  800a24:	1284703a 	and	r2,r2,r10
  800a28:	2248703a 	and	r4,r4,r9
  800a2c:	10800414 	ori	r2,r2,16
  800a30:	21000094 	ori	r4,r4,2
  800a34:	29400044 	addi	r5,r5,1
  800a38:	183ff61e 	bne	r3,zero,800a14 <__sflags+0x64>
  800a3c:	4108b03a 	or	r4,r8,r4
  800a40:	31000015 	stw	r4,0(r6)
  800a44:	f800283a 	ret
  800a48:	02008204 	movi	r8,520
  800a4c:	01000044 	movi	r4,1
  800a50:	00804204 	movi	r2,264
  800a54:	003fe406 	br	8009e8 <__sflags+0x38>
  800a58:	0011883a 	mov	r8,zero
  800a5c:	0009883a 	mov	r4,zero
  800a60:	00800104 	movi	r2,4
  800a64:	003fe006 	br	8009e8 <__sflags+0x38>

00800a68 <_fprintf_r>:
  800a68:	defffe04 	addi	sp,sp,-8
  800a6c:	2809883a 	mov	r4,r5
  800a70:	300b883a 	mov	r5,r6
  800a74:	dfc00015 	stw	ra,0(sp)
  800a78:	d9c00115 	stw	r7,4(sp)
  800a7c:	d9800104 	addi	r6,sp,4
  800a80:	08038d40 	call	8038d4 <__vfprintf_internal>
  800a84:	dfc00017 	ldw	ra,0(sp)
  800a88:	dec00204 	addi	sp,sp,8
  800a8c:	f800283a 	ret

00800a90 <fprintf>:
  800a90:	defffd04 	addi	sp,sp,-12
  800a94:	dfc00015 	stw	ra,0(sp)
  800a98:	d9800115 	stw	r6,4(sp)
  800a9c:	d9c00215 	stw	r7,8(sp)
  800aa0:	d9800104 	addi	r6,sp,4
  800aa4:	08038d40 	call	8038d4 <__vfprintf_internal>
  800aa8:	dfc00017 	ldw	ra,0(sp)
  800aac:	dec00304 	addi	sp,sp,12
  800ab0:	f800283a 	ret

00800ab4 <_fwalk>:
  800ab4:	defffa04 	addi	sp,sp,-24
  800ab8:	dd000415 	stw	r20,16(sp)
  800abc:	dcc00315 	stw	r19,12(sp)
  800ac0:	dc800215 	stw	r18,8(sp)
  800ac4:	dfc00515 	stw	ra,20(sp)
  800ac8:	dc400115 	stw	r17,4(sp)
  800acc:	dc000015 	stw	r16,0(sp)
  800ad0:	2827883a 	mov	r19,r5
  800ad4:	2480b804 	addi	r18,r4,736
  800ad8:	0029883a 	mov	r20,zero
  800adc:	94400117 	ldw	r17,4(r18)
  800ae0:	94000217 	ldw	r16,8(r18)
  800ae4:	8c7fffc4 	addi	r17,r17,-1
  800ae8:	88000d16 	blt	r17,zero,800b20 <_fwalk+0x6c>
  800aec:	8080030b 	ldhu	r2,12(r16)
  800af0:	8c7fffc4 	addi	r17,r17,-1
  800af4:	108000b0 	cmpltui	r2,r2,2
  800af8:	1000061e 	bne	r2,zero,800b14 <_fwalk+0x60>
  800afc:	8080038f 	ldh	r2,14(r16)
  800b00:	8009883a 	mov	r4,r16
  800b04:	10bfffe0 	cmpeqi	r2,r2,-1
  800b08:	1000021e 	bne	r2,zero,800b14 <_fwalk+0x60>
  800b0c:	983ee83a 	callr	r19
  800b10:	a0a8b03a 	or	r20,r20,r2
  800b14:	88bfffd8 	cmpnei	r2,r17,-1
  800b18:	84001a04 	addi	r16,r16,104
  800b1c:	103ff31e 	bne	r2,zero,800aec <_fwalk+0x38>
  800b20:	94800017 	ldw	r18,0(r18)
  800b24:	903fed1e 	bne	r18,zero,800adc <_fwalk+0x28>
  800b28:	a005883a 	mov	r2,r20
  800b2c:	dfc00517 	ldw	ra,20(sp)
  800b30:	dd000417 	ldw	r20,16(sp)
  800b34:	dcc00317 	ldw	r19,12(sp)
  800b38:	dc800217 	ldw	r18,8(sp)
  800b3c:	dc400117 	ldw	r17,4(sp)
  800b40:	dc000017 	ldw	r16,0(sp)
  800b44:	dec00604 	addi	sp,sp,24
  800b48:	f800283a 	ret

00800b4c <_fwalk_reent>:
  800b4c:	defff904 	addi	sp,sp,-28
  800b50:	dd400515 	stw	r21,20(sp)
  800b54:	dd000415 	stw	r20,16(sp)
  800b58:	dcc00315 	stw	r19,12(sp)
  800b5c:	dc800215 	stw	r18,8(sp)
  800b60:	dfc00615 	stw	ra,24(sp)
  800b64:	dc400115 	stw	r17,4(sp)
  800b68:	dc000015 	stw	r16,0(sp)
  800b6c:	202b883a 	mov	r21,r4
  800b70:	2827883a 	mov	r19,r5
  800b74:	2480b804 	addi	r18,r4,736
  800b78:	0029883a 	mov	r20,zero
  800b7c:	94400117 	ldw	r17,4(r18)
  800b80:	94000217 	ldw	r16,8(r18)
  800b84:	8c7fffc4 	addi	r17,r17,-1
  800b88:	88000e16 	blt	r17,zero,800bc4 <_fwalk_reent+0x78>
  800b8c:	8080030b 	ldhu	r2,12(r16)
  800b90:	8c7fffc4 	addi	r17,r17,-1
  800b94:	108000b0 	cmpltui	r2,r2,2
  800b98:	1000071e 	bne	r2,zero,800bb8 <_fwalk_reent+0x6c>
  800b9c:	8080038f 	ldh	r2,14(r16)
  800ba0:	800b883a 	mov	r5,r16
  800ba4:	a809883a 	mov	r4,r21
  800ba8:	10bfffe0 	cmpeqi	r2,r2,-1
  800bac:	1000021e 	bne	r2,zero,800bb8 <_fwalk_reent+0x6c>
  800bb0:	983ee83a 	callr	r19
  800bb4:	a0a8b03a 	or	r20,r20,r2
  800bb8:	88bfffd8 	cmpnei	r2,r17,-1
  800bbc:	84001a04 	addi	r16,r16,104
  800bc0:	103ff21e 	bne	r2,zero,800b8c <_fwalk_reent+0x40>
  800bc4:	94800017 	ldw	r18,0(r18)
  800bc8:	903fec1e 	bne	r18,zero,800b7c <_fwalk_reent+0x30>
  800bcc:	a005883a 	mov	r2,r20
  800bd0:	dfc00617 	ldw	ra,24(sp)
  800bd4:	dd400517 	ldw	r21,20(sp)
  800bd8:	dd000417 	ldw	r20,16(sp)
  800bdc:	dcc00317 	ldw	r19,12(sp)
  800be0:	dc800217 	ldw	r18,8(sp)
  800be4:	dc400117 	ldw	r17,4(sp)
  800be8:	dc000017 	ldw	r16,0(sp)
  800bec:	dec00704 	addi	sp,sp,28
  800bf0:	f800283a 	ret

00800bf4 <_malloc_r>:
  800bf4:	defff604 	addi	sp,sp,-40
  800bf8:	dc400115 	stw	r17,4(sp)
  800bfc:	2c4002c4 	addi	r17,r5,11
  800c00:	dc800215 	stw	r18,8(sp)
  800c04:	dfc00915 	stw	ra,36(sp)
  800c08:	df000815 	stw	fp,32(sp)
  800c0c:	ddc00715 	stw	r23,28(sp)
  800c10:	dd800615 	stw	r22,24(sp)
  800c14:	dd400515 	stw	r21,20(sp)
  800c18:	dd000415 	stw	r20,16(sp)
  800c1c:	dcc00315 	stw	r19,12(sp)
  800c20:	dc000015 	stw	r16,0(sp)
  800c24:	888005e8 	cmpgeui	r2,r17,23
  800c28:	2025883a 	mov	r18,r4
  800c2c:	10001b1e 	bne	r2,zero,800c9c <_malloc_r+0xa8>
  800c30:	29400468 	cmpgeui	r5,r5,17
  800c34:	2800821e 	bne	r5,zero,800e40 <_malloc_r+0x24c>
  800c38:	080e0200 	call	80e020 <__malloc_lock>
  800c3c:	04400404 	movi	r17,16
  800c40:	00800604 	movi	r2,24
  800c44:	01c00084 	movi	r7,2
  800c48:	04c02074 	movhi	r19,129
  800c4c:	9cc44004 	addi	r19,r19,4352
  800c50:	9885883a 	add	r2,r19,r2
  800c54:	14000117 	ldw	r16,4(r2)
  800c58:	10fffe04 	addi	r3,r2,-8
  800c5c:	80c08b26 	beq	r16,r3,800e8c <_malloc_r+0x298>
  800c60:	80800117 	ldw	r2,4(r16)
  800c64:	81000317 	ldw	r4,12(r16)
  800c68:	00ffff04 	movi	r3,-4
  800c6c:	10c4703a 	and	r2,r2,r3
  800c70:	81400217 	ldw	r5,8(r16)
  800c74:	8085883a 	add	r2,r16,r2
  800c78:	10c00117 	ldw	r3,4(r2)
  800c7c:	29000315 	stw	r4,12(r5)
  800c80:	21400215 	stw	r5,8(r4)
  800c84:	18c00054 	ori	r3,r3,1
  800c88:	10c00115 	stw	r3,4(r2)
  800c8c:	9009883a 	mov	r4,r18
  800c90:	080e0440 	call	80e044 <__malloc_unlock>
  800c94:	80800204 	addi	r2,r16,8
  800c98:	00006c06 	br	800e4c <_malloc_r+0x258>
  800c9c:	00bffe04 	movi	r2,-8
  800ca0:	88a2703a 	and	r17,r17,r2
  800ca4:	88006616 	blt	r17,zero,800e40 <_malloc_r+0x24c>
  800ca8:	89406536 	bltu	r17,r5,800e40 <_malloc_r+0x24c>
  800cac:	080e0200 	call	80e020 <__malloc_lock>
  800cb0:	88807e28 	cmpgeui	r2,r17,504
  800cb4:	10012226 	beq	r2,zero,801140 <_malloc_r+0x54c>
  800cb8:	8804d27a 	srli	r2,r17,9
  800cbc:	10006f26 	beq	r2,zero,800e7c <_malloc_r+0x288>
  800cc0:	10c00168 	cmpgeui	r3,r2,5
  800cc4:	1800fe1e 	bne	r3,zero,8010c0 <_malloc_r+0x4cc>
  800cc8:	8804d1ba 	srli	r2,r17,6
  800ccc:	11c00e44 	addi	r7,r2,57
  800cd0:	380890fa 	slli	r4,r7,3
  800cd4:	12000e04 	addi	r8,r2,56
  800cd8:	04c02074 	movhi	r19,129
  800cdc:	9cc44004 	addi	r19,r19,4352
  800ce0:	9909883a 	add	r4,r19,r4
  800ce4:	24000117 	ldw	r16,4(r4)
  800ce8:	213ffe04 	addi	r4,r4,-8
  800cec:	24000b26 	beq	r4,r16,800d1c <_malloc_r+0x128>
  800cf0:	01bfff04 	movi	r6,-4
  800cf4:	00000306 	br	800d04 <_malloc_r+0x110>
  800cf8:	1800d60e 	bge	r3,zero,801054 <_malloc_r+0x460>
  800cfc:	84000317 	ldw	r16,12(r16)
  800d00:	24000626 	beq	r4,r16,800d1c <_malloc_r+0x128>
  800d04:	80800117 	ldw	r2,4(r16)
  800d08:	1184703a 	and	r2,r2,r6
  800d0c:	1447c83a 	sub	r3,r2,r17
  800d10:	19400408 	cmpgei	r5,r3,16
  800d14:	283ff826 	beq	r5,zero,800cf8 <_malloc_r+0x104>
  800d18:	400f883a 	mov	r7,r8
  800d1c:	9c000417 	ldw	r16,16(r19)
  800d20:	02402074 	movhi	r9,129
  800d24:	4a444204 	addi	r9,r9,4360
  800d28:	82405f26 	beq	r16,r9,800ea8 <_malloc_r+0x2b4>
  800d2c:	80c00117 	ldw	r3,4(r16)
  800d30:	00bfff04 	movi	r2,-4
  800d34:	1884703a 	and	r2,r3,r2
  800d38:	1447c83a 	sub	r3,r2,r17
  800d3c:	19000410 	cmplti	r4,r3,16
  800d40:	20010a26 	beq	r4,zero,80116c <_malloc_r+0x578>
  800d44:	9a400515 	stw	r9,20(r19)
  800d48:	9a400415 	stw	r9,16(r19)
  800d4c:	1800ff0e 	bge	r3,zero,80114c <_malloc_r+0x558>
  800d50:	10c08028 	cmpgeui	r3,r2,512
  800d54:	1800c11e 	bne	r3,zero,80105c <_malloc_r+0x468>
  800d58:	1006d0fa 	srli	r3,r2,3
  800d5c:	1008d17a 	srli	r4,r2,5
  800d60:	00800044 	movi	r2,1
  800d64:	18c00044 	addi	r3,r3,1
  800d68:	180690fa 	slli	r3,r3,3
  800d6c:	99400117 	ldw	r5,4(r19)
  800d70:	1104983a 	sll	r2,r2,r4
  800d74:	98c7883a 	add	r3,r19,r3
  800d78:	19000017 	ldw	r4,0(r3)
  800d7c:	1144b03a 	or	r2,r2,r5
  800d80:	197ffe04 	addi	r5,r3,-8
  800d84:	81400315 	stw	r5,12(r16)
  800d88:	81000215 	stw	r4,8(r16)
  800d8c:	98800115 	stw	r2,4(r19)
  800d90:	1c000015 	stw	r16,0(r3)
  800d94:	24000315 	stw	r16,12(r4)
  800d98:	3807d0ba 	srai	r3,r7,2
  800d9c:	01000044 	movi	r4,1
  800da0:	20c8983a 	sll	r4,r4,r3
  800da4:	11004536 	bltu	r2,r4,800ebc <_malloc_r+0x2c8>
  800da8:	2086703a 	and	r3,r4,r2
  800dac:	18000a1e 	bne	r3,zero,800dd8 <_malloc_r+0x1e4>
  800db0:	00ffff04 	movi	r3,-4
  800db4:	2109883a 	add	r4,r4,r4
  800db8:	38ce703a 	and	r7,r7,r3
  800dbc:	2086703a 	and	r3,r4,r2
  800dc0:	39c00104 	addi	r7,r7,4
  800dc4:	1800041e 	bne	r3,zero,800dd8 <_malloc_r+0x1e4>
  800dc8:	2109883a 	add	r4,r4,r4
  800dcc:	2086703a 	and	r3,r4,r2
  800dd0:	39c00104 	addi	r7,r7,4
  800dd4:	183ffc26 	beq	r3,zero,800dc8 <_malloc_r+0x1d4>
  800dd8:	02bfff04 	movi	r10,-4
  800ddc:	381690fa 	slli	r11,r7,3
  800de0:	3819883a 	mov	r12,r7
  800de4:	9ad7883a 	add	r11,r19,r11
  800de8:	5811883a 	mov	r8,r11
  800dec:	40800317 	ldw	r2,12(r8)
  800df0:	4080bc26 	beq	r8,r2,8010e4 <_malloc_r+0x4f0>
  800df4:	10c00117 	ldw	r3,4(r2)
  800df8:	1021883a 	mov	r16,r2
  800dfc:	10800317 	ldw	r2,12(r2)
  800e00:	1a86703a 	and	r3,r3,r10
  800e04:	1c4bc83a 	sub	r5,r3,r17
  800e08:	29800410 	cmplti	r6,r5,16
  800e0c:	3000ba26 	beq	r6,zero,8010f8 <_malloc_r+0x504>
  800e10:	283ff716 	blt	r5,zero,800df0 <_malloc_r+0x1fc>
  800e14:	80c7883a 	add	r3,r16,r3
  800e18:	19400117 	ldw	r5,4(r3)
  800e1c:	81800217 	ldw	r6,8(r16)
  800e20:	9009883a 	mov	r4,r18
  800e24:	29400054 	ori	r5,r5,1
  800e28:	19400115 	stw	r5,4(r3)
  800e2c:	30800315 	stw	r2,12(r6)
  800e30:	11800215 	stw	r6,8(r2)
  800e34:	080e0440 	call	80e044 <__malloc_unlock>
  800e38:	80800204 	addi	r2,r16,8
  800e3c:	00000306 	br	800e4c <_malloc_r+0x258>
  800e40:	00800304 	movi	r2,12
  800e44:	90800015 	stw	r2,0(r18)
  800e48:	0005883a 	mov	r2,zero
  800e4c:	dfc00917 	ldw	ra,36(sp)
  800e50:	df000817 	ldw	fp,32(sp)
  800e54:	ddc00717 	ldw	r23,28(sp)
  800e58:	dd800617 	ldw	r22,24(sp)
  800e5c:	dd400517 	ldw	r21,20(sp)
  800e60:	dd000417 	ldw	r20,16(sp)
  800e64:	dcc00317 	ldw	r19,12(sp)
  800e68:	dc800217 	ldw	r18,8(sp)
  800e6c:	dc400117 	ldw	r17,4(sp)
  800e70:	dc000017 	ldw	r16,0(sp)
  800e74:	dec00a04 	addi	sp,sp,40
  800e78:	f800283a 	ret
  800e7c:	01008004 	movi	r4,512
  800e80:	01c01004 	movi	r7,64
  800e84:	02000fc4 	movi	r8,63
  800e88:	003f9306 	br	800cd8 <_malloc_r+0xe4>
  800e8c:	14000317 	ldw	r16,12(r2)
  800e90:	39c00084 	addi	r7,r7,2
  800e94:	143f721e 	bne	r2,r16,800c60 <_malloc_r+0x6c>
  800e98:	9c000417 	ldw	r16,16(r19)
  800e9c:	02402074 	movhi	r9,129
  800ea0:	4a444204 	addi	r9,r9,4360
  800ea4:	827fa11e 	bne	r16,r9,800d2c <_malloc_r+0x138>
  800ea8:	3807d0ba 	srai	r3,r7,2
  800eac:	01000044 	movi	r4,1
  800eb0:	98800117 	ldw	r2,4(r19)
  800eb4:	20c8983a 	sll	r4,r4,r3
  800eb8:	113fbb2e 	bgeu	r2,r4,800da8 <_malloc_r+0x1b4>
  800ebc:	9c000217 	ldw	r16,8(r19)
  800ec0:	00bfff04 	movi	r2,-4
  800ec4:	85400117 	ldw	r21,4(r16)
  800ec8:	a8ac703a 	and	r22,r21,r2
  800ecc:	b4400336 	bltu	r22,r17,800edc <_malloc_r+0x2e8>
  800ed0:	b445c83a 	sub	r2,r22,r17
  800ed4:	10c00408 	cmpgei	r3,r2,16
  800ed8:	1800541e 	bne	r3,zero,80102c <_malloc_r+0x438>
  800edc:	00802074 	movhi	r2,129
  800ee0:	108a2d17 	ldw	r2,10420(r2)
  800ee4:	00c02074 	movhi	r3,129
  800ee8:	1d514417 	ldw	r21,17680(r3)
  800eec:	10bfffd8 	cmpnei	r2,r2,-1
  800ef0:	85b9883a 	add	fp,r16,r22
  800ef4:	8d6b883a 	add	r21,r17,r21
  800ef8:	1000d626 	beq	r2,zero,801254 <_malloc_r+0x660>
  800efc:	ad4403c4 	addi	r21,r21,4111
  800f00:	00bc0004 	movi	r2,-4096
  800f04:	a8aa703a 	and	r21,r21,r2
  800f08:	a80b883a 	mov	r5,r21
  800f0c:	9009883a 	mov	r4,r18
  800f10:	08015a00 	call	8015a0 <_sbrk_r>
  800f14:	102f883a 	mov	r23,r2
  800f18:	10bfffd8 	cmpnei	r2,r2,-1
  800f1c:	1000a826 	beq	r2,zero,8011c0 <_malloc_r+0x5cc>
  800f20:	bf00a636 	bltu	r23,fp,8011bc <_malloc_r+0x5c8>
  800f24:	00802074 	movhi	r2,129
  800f28:	15114e17 	ldw	r20,17720(r2)
  800f2c:	ad29883a 	add	r20,r21,r20
  800f30:	15114e15 	stw	r20,17720(r2)
  800f34:	a007883a 	mov	r3,r20
  800f38:	e5c0ec26 	beq	fp,r23,8012ec <_malloc_r+0x6f8>
  800f3c:	00802074 	movhi	r2,129
  800f40:	108a2d17 	ldw	r2,10420(r2)
  800f44:	10bfffd8 	cmpnei	r2,r2,-1
  800f48:	1000ef26 	beq	r2,zero,801308 <_malloc_r+0x714>
  800f4c:	bf39c83a 	sub	fp,r23,fp
  800f50:	e0c7883a 	add	r3,fp,r3
  800f54:	00802074 	movhi	r2,129
  800f58:	10d14e15 	stw	r3,17720(r2)
  800f5c:	bf0001cc 	andi	fp,r23,7
  800f60:	e000c526 	beq	fp,zero,801278 <_malloc_r+0x684>
  800f64:	bf2fc83a 	sub	r23,r23,fp
  800f68:	bdc00204 	addi	r23,r23,8
  800f6c:	05040204 	movi	r20,4104
  800f70:	a729c83a 	sub	r20,r20,fp
  800f74:	bd6b883a 	add	r21,r23,r21
  800f78:	a569c83a 	sub	r20,r20,r21
  800f7c:	a503ffcc 	andi	r20,r20,4095
  800f80:	a00b883a 	mov	r5,r20
  800f84:	9009883a 	mov	r4,r18
  800f88:	08015a00 	call	8015a0 <_sbrk_r>
  800f8c:	10ffffe0 	cmpeqi	r3,r2,-1
  800f90:	1800f31e 	bne	r3,zero,801360 <_malloc_r+0x76c>
  800f94:	15c5c83a 	sub	r2,r2,r23
  800f98:	152b883a 	add	r21,r2,r20
  800f9c:	00802074 	movhi	r2,129
  800fa0:	11514e17 	ldw	r5,17720(r2)
  800fa4:	9dc00215 	stw	r23,8(r19)
  800fa8:	ad400054 	ori	r21,r21,1
  800fac:	a169883a 	add	r20,r20,r5
  800fb0:	15114e15 	stw	r20,17720(r2)
  800fb4:	bd400115 	stw	r21,4(r23)
  800fb8:	84c0d626 	beq	r16,r19,801314 <_malloc_r+0x720>
  800fbc:	b0800428 	cmpgeui	r2,r22,16
  800fc0:	1000d626 	beq	r2,zero,80131c <_malloc_r+0x728>
  800fc4:	80c00117 	ldw	r3,4(r16)
  800fc8:	013ffe04 	movi	r4,-8
  800fcc:	b0bffd04 	addi	r2,r22,-12
  800fd0:	1104703a 	and	r2,r2,r4
  800fd4:	18c0004c 	andi	r3,r3,1
  800fd8:	1886b03a 	or	r3,r3,r2
  800fdc:	80c00115 	stw	r3,4(r16)
  800fe0:	01000144 	movi	r4,5
  800fe4:	8087883a 	add	r3,r16,r2
  800fe8:	19000115 	stw	r4,4(r3)
  800fec:	19000215 	stw	r4,8(r3)
  800ff0:	10800428 	cmpgeui	r2,r2,16
  800ff4:	1000df1e 	bne	r2,zero,801374 <_malloc_r+0x780>
  800ff8:	bd400117 	ldw	r21,4(r23)
  800ffc:	b821883a 	mov	r16,r23
  801000:	00802074 	movhi	r2,129
  801004:	10914317 	ldw	r2,17676(r2)
  801008:	1500022e 	bgeu	r2,r20,801014 <_malloc_r+0x420>
  80100c:	00802074 	movhi	r2,129
  801010:	15114315 	stw	r20,17676(r2)
  801014:	00802074 	movhi	r2,129
  801018:	10914217 	ldw	r2,17672(r2)
  80101c:	15006a2e 	bgeu	r2,r20,8011c8 <_malloc_r+0x5d4>
  801020:	00802074 	movhi	r2,129
  801024:	15114215 	stw	r20,17672(r2)
  801028:	00006706 	br	8011c8 <_malloc_r+0x5d4>
  80102c:	88c00054 	ori	r3,r17,1
  801030:	80c00115 	stw	r3,4(r16)
  801034:	8463883a 	add	r17,r16,r17
  801038:	10800054 	ori	r2,r2,1
  80103c:	9c400215 	stw	r17,8(r19)
  801040:	88800115 	stw	r2,4(r17)
  801044:	9009883a 	mov	r4,r18
  801048:	080e0440 	call	80e044 <__malloc_unlock>
  80104c:	80800204 	addi	r2,r16,8
  801050:	003f7e06 	br	800e4c <_malloc_r+0x258>
  801054:	81000317 	ldw	r4,12(r16)
  801058:	003f0506 	br	800c70 <_malloc_r+0x7c>
  80105c:	1006d27a 	srli	r3,r2,9
  801060:	19000168 	cmpgeui	r4,r3,5
  801064:	20005026 	beq	r4,zero,8011a8 <_malloc_r+0x5b4>
  801068:	19000568 	cmpgeui	r4,r3,21
  80106c:	20008c1e 	bne	r4,zero,8012a0 <_malloc_r+0x6ac>
  801070:	19401704 	addi	r5,r3,92
  801074:	280a90fa 	slli	r5,r5,3
  801078:	190016c4 	addi	r4,r3,91
  80107c:	994b883a 	add	r5,r19,r5
  801080:	28c00017 	ldw	r3,0(r5)
  801084:	297ffe04 	addi	r5,r5,-8
  801088:	28c07426 	beq	r5,r3,80125c <_malloc_r+0x668>
  80108c:	01bfff04 	movi	r6,-4
  801090:	19000117 	ldw	r4,4(r3)
  801094:	2188703a 	and	r4,r4,r6
  801098:	1100022e 	bgeu	r2,r4,8010a4 <_malloc_r+0x4b0>
  80109c:	18c00217 	ldw	r3,8(r3)
  8010a0:	28fffb1e 	bne	r5,r3,801090 <_malloc_r+0x49c>
  8010a4:	19400317 	ldw	r5,12(r3)
  8010a8:	98800117 	ldw	r2,4(r19)
  8010ac:	81400315 	stw	r5,12(r16)
  8010b0:	80c00215 	stw	r3,8(r16)
  8010b4:	2c000215 	stw	r16,8(r5)
  8010b8:	1c000315 	stw	r16,12(r3)
  8010bc:	003f3606 	br	800d98 <_malloc_r+0x1a4>
  8010c0:	10c00568 	cmpgeui	r3,r2,21
  8010c4:	18004a26 	beq	r3,zero,8011f0 <_malloc_r+0x5fc>
  8010c8:	10c01568 	cmpgeui	r3,r2,85
  8010cc:	18007b1e 	bne	r3,zero,8012bc <_malloc_r+0x6c8>
  8010d0:	8804d33a 	srli	r2,r17,12
  8010d4:	11c01bc4 	addi	r7,r2,111
  8010d8:	380890fa 	slli	r4,r7,3
  8010dc:	12001b84 	addi	r8,r2,110
  8010e0:	003efd06 	br	800cd8 <_malloc_r+0xe4>
  8010e4:	63000044 	addi	r12,r12,1
  8010e8:	608000cc 	andi	r2,r12,3
  8010ec:	42000204 	addi	r8,r8,8
  8010f0:	103f3e1e 	bne	r2,zero,800dec <_malloc_r+0x1f8>
  8010f4:	00004506 	br	80120c <_malloc_r+0x618>
  8010f8:	81000217 	ldw	r4,8(r16)
  8010fc:	89800054 	ori	r6,r17,1
  801100:	81800115 	stw	r6,4(r16)
  801104:	20800315 	stw	r2,12(r4)
  801108:	11000215 	stw	r4,8(r2)
  80110c:	8463883a 	add	r17,r16,r17
  801110:	9c400515 	stw	r17,20(r19)
  801114:	9c400415 	stw	r17,16(r19)
  801118:	28800054 	ori	r2,r5,1
  80111c:	88800115 	stw	r2,4(r17)
  801120:	8a400315 	stw	r9,12(r17)
  801124:	8a400215 	stw	r9,8(r17)
  801128:	80c7883a 	add	r3,r16,r3
  80112c:	19400015 	stw	r5,0(r3)
  801130:	9009883a 	mov	r4,r18
  801134:	080e0440 	call	80e044 <__malloc_unlock>
  801138:	80800204 	addi	r2,r16,8
  80113c:	003f4306 	br	800e4c <_malloc_r+0x258>
  801140:	880ed0fa 	srli	r7,r17,3
  801144:	88800204 	addi	r2,r17,8
  801148:	003ebf06 	br	800c48 <_malloc_r+0x54>
  80114c:	8085883a 	add	r2,r16,r2
  801150:	10c00117 	ldw	r3,4(r2)
  801154:	9009883a 	mov	r4,r18
  801158:	18c00054 	ori	r3,r3,1
  80115c:	10c00115 	stw	r3,4(r2)
  801160:	080e0440 	call	80e044 <__malloc_unlock>
  801164:	80800204 	addi	r2,r16,8
  801168:	003f3806 	br	800e4c <_malloc_r+0x258>
  80116c:	89000054 	ori	r4,r17,1
  801170:	81000115 	stw	r4,4(r16)
  801174:	8463883a 	add	r17,r16,r17
  801178:	9c400515 	stw	r17,20(r19)
  80117c:	9c400415 	stw	r17,16(r19)
  801180:	19000054 	ori	r4,r3,1
  801184:	89000115 	stw	r4,4(r17)
  801188:	8085883a 	add	r2,r16,r2
  80118c:	8a400315 	stw	r9,12(r17)
  801190:	8a400215 	stw	r9,8(r17)
  801194:	10c00015 	stw	r3,0(r2)
  801198:	9009883a 	mov	r4,r18
  80119c:	080e0440 	call	80e044 <__malloc_unlock>
  8011a0:	80800204 	addi	r2,r16,8
  8011a4:	003f2906 	br	800e4c <_malloc_r+0x258>
  8011a8:	1006d1ba 	srli	r3,r2,6
  8011ac:	19400e44 	addi	r5,r3,57
  8011b0:	280a90fa 	slli	r5,r5,3
  8011b4:	19000e04 	addi	r4,r3,56
  8011b8:	003fb006 	br	80107c <_malloc_r+0x488>
  8011bc:	84c04626 	beq	r16,r19,8012d8 <_malloc_r+0x6e4>
  8011c0:	9c000217 	ldw	r16,8(r19)
  8011c4:	85400117 	ldw	r21,4(r16)
  8011c8:	00bfff04 	movi	r2,-4
  8011cc:	a8aa703a 	and	r21,r21,r2
  8011d0:	ac45c83a 	sub	r2,r21,r17
  8011d4:	ac400236 	bltu	r21,r17,8011e0 <_malloc_r+0x5ec>
  8011d8:	10c00408 	cmpgei	r3,r2,16
  8011dc:	183f931e 	bne	r3,zero,80102c <_malloc_r+0x438>
  8011e0:	9009883a 	mov	r4,r18
  8011e4:	080e0440 	call	80e044 <__malloc_unlock>
  8011e8:	0005883a 	mov	r2,zero
  8011ec:	003f1706 	br	800e4c <_malloc_r+0x258>
  8011f0:	11c01704 	addi	r7,r2,92
  8011f4:	380890fa 	slli	r4,r7,3
  8011f8:	120016c4 	addi	r8,r2,91
  8011fc:	003eb606 	br	800cd8 <_malloc_r+0xe4>
  801200:	58800217 	ldw	r2,8(r11)
  801204:	39ffffc4 	addi	r7,r7,-1
  801208:	12c0701e 	bne	r2,r11,8013cc <_malloc_r+0x7d8>
  80120c:	388000cc 	andi	r2,r7,3
  801210:	5afffe04 	addi	r11,r11,-8
  801214:	103ffa1e 	bne	r2,zero,801200 <_malloc_r+0x60c>
  801218:	98c00117 	ldw	r3,4(r19)
  80121c:	0104303a 	nor	r2,zero,r4
  801220:	10c4703a 	and	r2,r2,r3
  801224:	98800115 	stw	r2,4(r19)
  801228:	2109883a 	add	r4,r4,r4
  80122c:	113f2336 	bltu	r2,r4,800ebc <_malloc_r+0x2c8>
  801230:	203f2226 	beq	r4,zero,800ebc <_malloc_r+0x2c8>
  801234:	2086703a 	and	r3,r4,r2
  801238:	1800041e 	bne	r3,zero,80124c <_malloc_r+0x658>
  80123c:	2109883a 	add	r4,r4,r4
  801240:	2086703a 	and	r3,r4,r2
  801244:	63000104 	addi	r12,r12,4
  801248:	183ffc26 	beq	r3,zero,80123c <_malloc_r+0x648>
  80124c:	600f883a 	mov	r7,r12
  801250:	003ee206 	br	800ddc <_malloc_r+0x1e8>
  801254:	ad400404 	addi	r21,r21,16
  801258:	003f2b06 	br	800f08 <_malloc_r+0x314>
  80125c:	2009d0ba 	srai	r4,r4,2
  801260:	00800044 	movi	r2,1
  801264:	99800117 	ldw	r6,4(r19)
  801268:	1104983a 	sll	r2,r2,r4
  80126c:	1184b03a 	or	r2,r2,r6
  801270:	98800115 	stw	r2,4(r19)
  801274:	003f8d06 	br	8010ac <_malloc_r+0x4b8>
  801278:	bd69883a 	add	r20,r23,r21
  80127c:	0529c83a 	sub	r20,zero,r20
  801280:	a503ffcc 	andi	r20,r20,4095
  801284:	a00b883a 	mov	r5,r20
  801288:	9009883a 	mov	r4,r18
  80128c:	08015a00 	call	8015a0 <_sbrk_r>
  801290:	10ffffe0 	cmpeqi	r3,r2,-1
  801294:	183f3f26 	beq	r3,zero,800f94 <_malloc_r+0x3a0>
  801298:	0029883a 	mov	r20,zero
  80129c:	003f3f06 	br	800f9c <_malloc_r+0x3a8>
  8012a0:	19001568 	cmpgeui	r4,r3,85
  8012a4:	2000201e 	bne	r4,zero,801328 <_malloc_r+0x734>
  8012a8:	1006d33a 	srli	r3,r2,12
  8012ac:	19401bc4 	addi	r5,r3,111
  8012b0:	280a90fa 	slli	r5,r5,3
  8012b4:	19001b84 	addi	r4,r3,110
  8012b8:	003f7006 	br	80107c <_malloc_r+0x488>
  8012bc:	10c05568 	cmpgeui	r3,r2,341
  8012c0:	1800201e 	bne	r3,zero,801344 <_malloc_r+0x750>
  8012c4:	8804d3fa 	srli	r2,r17,15
  8012c8:	11c01e04 	addi	r7,r2,120
  8012cc:	380890fa 	slli	r4,r7,3
  8012d0:	12001dc4 	addi	r8,r2,119
  8012d4:	003e8006 	br	800cd8 <_malloc_r+0xe4>
  8012d8:	00802074 	movhi	r2,129
  8012dc:	10d14e17 	ldw	r3,17720(r2)
  8012e0:	a8c7883a 	add	r3,r21,r3
  8012e4:	10d14e15 	stw	r3,17720(r2)
  8012e8:	003f1406 	br	800f3c <_malloc_r+0x348>
  8012ec:	e083ffcc 	andi	r2,fp,4095
  8012f0:	103f121e 	bne	r2,zero,800f3c <_malloc_r+0x348>
  8012f4:	9c000217 	ldw	r16,8(r19)
  8012f8:	b56b883a 	add	r21,r22,r21
  8012fc:	ad400054 	ori	r21,r21,1
  801300:	85400115 	stw	r21,4(r16)
  801304:	003f3e06 	br	801000 <_malloc_r+0x40c>
  801308:	00802074 	movhi	r2,129
  80130c:	15ca2d15 	stw	r23,10420(r2)
  801310:	003f1206 	br	800f5c <_malloc_r+0x368>
  801314:	b821883a 	mov	r16,r23
  801318:	003f3906 	br	801000 <_malloc_r+0x40c>
  80131c:	00800044 	movi	r2,1
  801320:	b8800115 	stw	r2,4(r23)
  801324:	003fae06 	br	8011e0 <_malloc_r+0x5ec>
  801328:	19005568 	cmpgeui	r4,r3,341
  80132c:	2000191e 	bne	r4,zero,801394 <_malloc_r+0x7a0>
  801330:	1006d3fa 	srli	r3,r2,15
  801334:	19401e04 	addi	r5,r3,120
  801338:	280a90fa 	slli	r5,r5,3
  80133c:	19001dc4 	addi	r4,r3,119
  801340:	003f4e06 	br	80107c <_malloc_r+0x488>
  801344:	10815568 	cmpgeui	r2,r2,1365
  801348:	1000191e 	bne	r2,zero,8013b0 <_malloc_r+0x7bc>
  80134c:	8804d4ba 	srli	r2,r17,18
  801350:	11c01f44 	addi	r7,r2,125
  801354:	380890fa 	slli	r4,r7,3
  801358:	12001f04 	addi	r8,r2,124
  80135c:	003e5e06 	br	800cd8 <_malloc_r+0xe4>
  801360:	e73ffe04 	addi	fp,fp,-8
  801364:	af2b883a 	add	r21,r21,fp
  801368:	adebc83a 	sub	r21,r21,r23
  80136c:	0029883a 	mov	r20,zero
  801370:	003f0a06 	br	800f9c <_malloc_r+0x3a8>
  801374:	81400204 	addi	r5,r16,8
  801378:	9009883a 	mov	r4,r18
  80137c:	0805b000 	call	805b00 <_free_r>
  801380:	9c000217 	ldw	r16,8(r19)
  801384:	00802074 	movhi	r2,129
  801388:	15114e17 	ldw	r20,17720(r2)
  80138c:	85400117 	ldw	r21,4(r16)
  801390:	003f1b06 	br	801000 <_malloc_r+0x40c>
  801394:	18c15568 	cmpgeui	r3,r3,1365
  801398:	1800091e 	bne	r3,zero,8013c0 <_malloc_r+0x7cc>
  80139c:	1006d4ba 	srli	r3,r2,18
  8013a0:	19401f44 	addi	r5,r3,125
  8013a4:	280a90fa 	slli	r5,r5,3
  8013a8:	19001f04 	addi	r4,r3,124
  8013ac:	003f3306 	br	80107c <_malloc_r+0x488>
  8013b0:	0100fe04 	movi	r4,1016
  8013b4:	01c01fc4 	movi	r7,127
  8013b8:	02001f84 	movi	r8,126
  8013bc:	003e4606 	br	800cd8 <_malloc_r+0xe4>
  8013c0:	0140fe04 	movi	r5,1016
  8013c4:	01001f84 	movi	r4,126
  8013c8:	003f2c06 	br	80107c <_malloc_r+0x488>
  8013cc:	98800117 	ldw	r2,4(r19)
  8013d0:	003f9506 	br	801228 <_malloc_r+0x634>

008013d4 <memset>:
  8013d4:	20c000cc 	andi	r3,r4,3
  8013d8:	2005883a 	mov	r2,r4
  8013dc:	18003626 	beq	r3,zero,8014b8 <memset+0xe4>
  8013e0:	31ffffc4 	addi	r7,r6,-1
  8013e4:	30003326 	beq	r6,zero,8014b4 <memset+0xe0>
  8013e8:	2811883a 	mov	r8,r5
  8013ec:	2007883a 	mov	r3,r4
  8013f0:	00000306 	br	801400 <memset+0x2c>
  8013f4:	39ffffc4 	addi	r7,r7,-1
  8013f8:	39bfffe0 	cmpeqi	r6,r7,-1
  8013fc:	30002d1e 	bne	r6,zero,8014b4 <memset+0xe0>
  801400:	18c00044 	addi	r3,r3,1
  801404:	198000cc 	andi	r6,r3,3
  801408:	1a3fffc5 	stb	r8,-1(r3)
  80140c:	303ff91e 	bne	r6,zero,8013f4 <memset+0x20>
  801410:	39000130 	cmpltui	r4,r7,4
  801414:	2000221e 	bne	r4,zero,8014a0 <memset+0xcc>
  801418:	29003fcc 	andi	r4,r5,255
  80141c:	200c923a 	slli	r6,r4,8
  801420:	3a000430 	cmpltui	r8,r7,16
  801424:	3108b03a 	or	r4,r6,r4
  801428:	200c943a 	slli	r6,r4,16
  80142c:	310cb03a 	or	r6,r6,r4
  801430:	40000e1e 	bne	r8,zero,80146c <memset+0x98>
  801434:	393ffc04 	addi	r4,r7,-16
  801438:	2008d13a 	srli	r4,r4,4
  80143c:	21000044 	addi	r4,r4,1
  801440:	2008913a 	slli	r4,r4,4
  801444:	1909883a 	add	r4,r3,r4
  801448:	19800015 	stw	r6,0(r3)
  80144c:	19800115 	stw	r6,4(r3)
  801450:	19800215 	stw	r6,8(r3)
  801454:	19800315 	stw	r6,12(r3)
  801458:	18c00404 	addi	r3,r3,16
  80145c:	20fffa1e 	bne	r4,r3,801448 <memset+0x74>
  801460:	3900030c 	andi	r4,r7,12
  801464:	39c003cc 	andi	r7,r7,15
  801468:	20000d26 	beq	r4,zero,8014a0 <memset+0xcc>
  80146c:	1811883a 	mov	r8,r3
  801470:	42000104 	addi	r8,r8,4
  801474:	3a09c83a 	sub	r4,r7,r8
  801478:	1909883a 	add	r4,r3,r4
  80147c:	21000128 	cmpgeui	r4,r4,4
  801480:	41bfff15 	stw	r6,-4(r8)
  801484:	203ffa1e 	bne	r4,zero,801470 <memset+0x9c>
  801488:	393fff04 	addi	r4,r7,-4
  80148c:	2008d0ba 	srli	r4,r4,2
  801490:	39c000cc 	andi	r7,r7,3
  801494:	21000044 	addi	r4,r4,1
  801498:	200890ba 	slli	r4,r4,2
  80149c:	1907883a 	add	r3,r3,r4
  8014a0:	38000426 	beq	r7,zero,8014b4 <memset+0xe0>
  8014a4:	19cf883a 	add	r7,r3,r7
  8014a8:	18c00044 	addi	r3,r3,1
  8014ac:	197fffc5 	stb	r5,-1(r3)
  8014b0:	38fffd1e 	bne	r7,r3,8014a8 <memset+0xd4>
  8014b4:	f800283a 	ret
  8014b8:	2007883a 	mov	r3,r4
  8014bc:	300f883a 	mov	r7,r6
  8014c0:	003fd306 	br	801410 <memset+0x3c>

008014c4 <_puts_r>:
  8014c4:	defff504 	addi	sp,sp,-44
  8014c8:	dc000815 	stw	r16,32(sp)
  8014cc:	2021883a 	mov	r16,r4
  8014d0:	2809883a 	mov	r4,r5
  8014d4:	dc400915 	stw	r17,36(sp)
  8014d8:	dfc00a15 	stw	ra,40(sp)
  8014dc:	2823883a 	mov	r17,r5
  8014e0:	08017380 	call	801738 <strlen>
  8014e4:	11000044 	addi	r4,r2,1
  8014e8:	d8800515 	stw	r2,20(sp)
  8014ec:	00800044 	movi	r2,1
  8014f0:	00c02074 	movhi	r3,129
  8014f4:	d8800715 	stw	r2,28(sp)
  8014f8:	d8800404 	addi	r2,sp,16
  8014fc:	18c19a04 	addi	r3,r3,1640
  801500:	d8800115 	stw	r2,4(sp)
  801504:	00800084 	movi	r2,2
  801508:	dc400415 	stw	r17,16(sp)
  80150c:	d8c00615 	stw	r3,24(sp)
  801510:	d9000315 	stw	r4,12(sp)
  801514:	d8800215 	stw	r2,8(sp)
  801518:	81400217 	ldw	r5,8(r16)
  80151c:	80000226 	beq	r16,zero,801528 <_puts_r+0x64>
  801520:	80800e17 	ldw	r2,56(r16)
  801524:	10001326 	beq	r2,zero,801574 <_puts_r+0xb0>
  801528:	2880030b 	ldhu	r2,12(r5)
  80152c:	10c8000c 	andi	r3,r2,8192
  801530:	1800061e 	bne	r3,zero,80154c <_puts_r+0x88>
  801534:	28c01917 	ldw	r3,100(r5)
  801538:	0137ffc4 	movi	r4,-8193
  80153c:	10880014 	ori	r2,r2,8192
  801540:	1906703a 	and	r3,r3,r4
  801544:	2880030d 	sth	r2,12(r5)
  801548:	28c01915 	stw	r3,100(r5)
  80154c:	d9800104 	addi	r6,sp,4
  801550:	8009883a 	mov	r4,r16
  801554:	0805dfc0 	call	805dfc <__sfvwrite_r>
  801558:	10000b1e 	bne	r2,zero,801588 <_puts_r+0xc4>
  80155c:	00800284 	movi	r2,10
  801560:	dfc00a17 	ldw	ra,40(sp)
  801564:	dc400917 	ldw	r17,36(sp)
  801568:	dc000817 	ldw	r16,32(sp)
  80156c:	dec00b04 	addi	sp,sp,44
  801570:	f800283a 	ret
  801574:	8009883a 	mov	r4,r16
  801578:	d9400015 	stw	r5,0(sp)
  80157c:	08009680 	call	800968 <__sinit>
  801580:	d9400017 	ldw	r5,0(sp)
  801584:	003fe806 	br	801528 <_puts_r+0x64>
  801588:	00bfffc4 	movi	r2,-1
  80158c:	003ff406 	br	801560 <_puts_r+0x9c>

00801590 <puts>:
  801590:	00802074 	movhi	r2,129
  801594:	200b883a 	mov	r5,r4
  801598:	110a2c17 	ldw	r4,10416(r2)
  80159c:	08014c41 	jmpi	8014c4 <_puts_r>

008015a0 <_sbrk_r>:
  8015a0:	defffe04 	addi	sp,sp,-8
  8015a4:	dc000015 	stw	r16,0(sp)
  8015a8:	00802074 	movhi	r2,129
  8015ac:	2021883a 	mov	r16,r4
  8015b0:	2809883a 	mov	r4,r5
  8015b4:	dfc00115 	stw	ra,4(sp)
  8015b8:	10114515 	stw	zero,17684(r2)
  8015bc:	080e4940 	call	80e494 <sbrk>
  8015c0:	10ffffd8 	cmpnei	r3,r2,-1
  8015c4:	18000426 	beq	r3,zero,8015d8 <_sbrk_r+0x38>
  8015c8:	dfc00117 	ldw	ra,4(sp)
  8015cc:	dc000017 	ldw	r16,0(sp)
  8015d0:	dec00204 	addi	sp,sp,8
  8015d4:	f800283a 	ret
  8015d8:	00c02074 	movhi	r3,129
  8015dc:	18d14517 	ldw	r3,17684(r3)
  8015e0:	183ff926 	beq	r3,zero,8015c8 <_sbrk_r+0x28>
  8015e4:	80c00015 	stw	r3,0(r16)
  8015e8:	dfc00117 	ldw	ra,4(sp)
  8015ec:	dc000017 	ldw	r16,0(sp)
  8015f0:	dec00204 	addi	sp,sp,8
  8015f4:	f800283a 	ret

008015f8 <__sread>:
  8015f8:	defffe04 	addi	sp,sp,-8
  8015fc:	dc000015 	stw	r16,0(sp)
  801600:	2821883a 	mov	r16,r5
  801604:	2940038f 	ldh	r5,14(r5)
  801608:	dfc00115 	stw	ra,4(sp)
  80160c:	0807a7c0 	call	807a7c <_read_r>
  801610:	10000716 	blt	r2,zero,801630 <__sread+0x38>
  801614:	80c01417 	ldw	r3,80(r16)
  801618:	1887883a 	add	r3,r3,r2
  80161c:	80c01415 	stw	r3,80(r16)
  801620:	dfc00117 	ldw	ra,4(sp)
  801624:	dc000017 	ldw	r16,0(sp)
  801628:	dec00204 	addi	sp,sp,8
  80162c:	f800283a 	ret
  801630:	80c0030b 	ldhu	r3,12(r16)
  801634:	18fbffcc 	andi	r3,r3,61439
  801638:	80c0030d 	sth	r3,12(r16)
  80163c:	dfc00117 	ldw	ra,4(sp)
  801640:	dc000017 	ldw	r16,0(sp)
  801644:	dec00204 	addi	sp,sp,8
  801648:	f800283a 	ret

0080164c <__seofread>:
  80164c:	0005883a 	mov	r2,zero
  801650:	f800283a 	ret

00801654 <__swrite>:
  801654:	2880030b 	ldhu	r2,12(r5)
  801658:	defffb04 	addi	sp,sp,-20
  80165c:	dcc00315 	stw	r19,12(sp)
  801660:	dc800215 	stw	r18,8(sp)
  801664:	dc400115 	stw	r17,4(sp)
  801668:	dc000015 	stw	r16,0(sp)
  80166c:	dfc00415 	stw	ra,16(sp)
  801670:	10c0400c 	andi	r3,r2,256
  801674:	2821883a 	mov	r16,r5
  801678:	2023883a 	mov	r17,r4
  80167c:	2940038f 	ldh	r5,14(r5)
  801680:	3025883a 	mov	r18,r6
  801684:	3827883a 	mov	r19,r7
  801688:	18000c1e 	bne	r3,zero,8016bc <__swrite+0x68>
  80168c:	10bbffcc 	andi	r2,r2,61439
  801690:	980f883a 	mov	r7,r19
  801694:	900d883a 	mov	r6,r18
  801698:	8809883a 	mov	r4,r17
  80169c:	8080030d 	sth	r2,12(r16)
  8016a0:	dfc00417 	ldw	ra,16(sp)
  8016a4:	dcc00317 	ldw	r19,12(sp)
  8016a8:	dc800217 	ldw	r18,8(sp)
  8016ac:	dc400117 	ldw	r17,4(sp)
  8016b0:	dc000017 	ldw	r16,0(sp)
  8016b4:	dec00504 	addi	sp,sp,20
  8016b8:	08039b01 	jmpi	8039b0 <_write_r>
  8016bc:	01c00084 	movi	r7,2
  8016c0:	000d883a 	mov	r6,zero
  8016c4:	08062e40 	call	8062e4 <_lseek_r>
  8016c8:	8080030b 	ldhu	r2,12(r16)
  8016cc:	8140038f 	ldh	r5,14(r16)
  8016d0:	003fee06 	br	80168c <__swrite+0x38>

008016d4 <__sseek>:
  8016d4:	defffe04 	addi	sp,sp,-8
  8016d8:	dc000015 	stw	r16,0(sp)
  8016dc:	2821883a 	mov	r16,r5
  8016e0:	2940038f 	ldh	r5,14(r5)
  8016e4:	dfc00115 	stw	ra,4(sp)
  8016e8:	08062e40 	call	8062e4 <_lseek_r>
  8016ec:	10ffffd8 	cmpnei	r3,r2,-1
  8016f0:	18000826 	beq	r3,zero,801714 <__sseek+0x40>
  8016f4:	80c0030b 	ldhu	r3,12(r16)
  8016f8:	80801415 	stw	r2,80(r16)
  8016fc:	18c40014 	ori	r3,r3,4096
  801700:	80c0030d 	sth	r3,12(r16)
  801704:	dfc00117 	ldw	ra,4(sp)
  801708:	dc000017 	ldw	r16,0(sp)
  80170c:	dec00204 	addi	sp,sp,8
  801710:	f800283a 	ret
  801714:	80c0030b 	ldhu	r3,12(r16)
  801718:	18fbffcc 	andi	r3,r3,61439
  80171c:	80c0030d 	sth	r3,12(r16)
  801720:	dfc00117 	ldw	ra,4(sp)
  801724:	dc000017 	ldw	r16,0(sp)
  801728:	dec00204 	addi	sp,sp,8
  80172c:	f800283a 	ret

00801730 <__sclose>:
  801730:	2940038f 	ldh	r5,14(r5)
  801734:	0803b781 	jmpi	803b78 <_close_r>

00801738 <strlen>:
  801738:	208000cc 	andi	r2,r4,3
  80173c:	10000926 	beq	r2,zero,801764 <strlen+0x2c>
  801740:	2005883a 	mov	r2,r4
  801744:	00000306 	br	801754 <strlen+0x1c>
  801748:	10800044 	addi	r2,r2,1
  80174c:	10c000cc 	andi	r3,r2,3
  801750:	18000526 	beq	r3,zero,801768 <strlen+0x30>
  801754:	10c00007 	ldb	r3,0(r2)
  801758:	183ffb1e 	bne	r3,zero,801748 <strlen+0x10>
  80175c:	1105c83a 	sub	r2,r2,r4
  801760:	f800283a 	ret
  801764:	2005883a 	mov	r2,r4
  801768:	11400017 	ldw	r5,0(r2)
  80176c:	01ffbff4 	movhi	r7,65279
  801770:	39ffbfc4 	addi	r7,r7,-257
  801774:	29c7883a 	add	r3,r5,r7
  801778:	01a02074 	movhi	r6,32897
  80177c:	014a303a 	nor	r5,zero,r5
  801780:	1946703a 	and	r3,r3,r5
  801784:	31a02004 	addi	r6,r6,-32640
  801788:	1986703a 	and	r3,r3,r6
  80178c:	1800071e 	bne	r3,zero,8017ac <strlen+0x74>
  801790:	11400117 	ldw	r5,4(r2)
  801794:	10800104 	addi	r2,r2,4
  801798:	29c7883a 	add	r3,r5,r7
  80179c:	014a303a 	nor	r5,zero,r5
  8017a0:	1946703a 	and	r3,r3,r5
  8017a4:	1986703a 	and	r3,r3,r6
  8017a8:	183ff926 	beq	r3,zero,801790 <strlen+0x58>
  8017ac:	10c00007 	ldb	r3,0(r2)
  8017b0:	183fea26 	beq	r3,zero,80175c <strlen+0x24>
  8017b4:	10c00047 	ldb	r3,1(r2)
  8017b8:	10800044 	addi	r2,r2,1
  8017bc:	183fe726 	beq	r3,zero,80175c <strlen+0x24>
  8017c0:	10c00047 	ldb	r3,1(r2)
  8017c4:	10800044 	addi	r2,r2,1
  8017c8:	183ffa1e 	bne	r3,zero,8017b4 <strlen+0x7c>
  8017cc:	003fe306 	br	80175c <strlen+0x24>

008017d0 <___vfprintf_internal_r>:
  8017d0:	deffbf04 	addi	sp,sp,-260
  8017d4:	dfc04015 	stw	ra,256(sp)
  8017d8:	dd803d15 	stw	r22,244(sp)
  8017dc:	dcc03a15 	stw	r19,232(sp)
  8017e0:	dc803915 	stw	r18,228(sp)
  8017e4:	2027883a 	mov	r19,r4
  8017e8:	2825883a 	mov	r18,r5
  8017ec:	302d883a 	mov	r22,r6
  8017f0:	d9c00615 	stw	r7,24(sp)
  8017f4:	df003f15 	stw	fp,252(sp)
  8017f8:	ddc03e15 	stw	r23,248(sp)
  8017fc:	dd403c15 	stw	r21,240(sp)
  801800:	dd003b15 	stw	r20,236(sp)
  801804:	dc403815 	stw	r17,224(sp)
  801808:	dc003715 	stw	r16,220(sp)
  80180c:	08062cc0 	call	8062cc <_localeconv_r>
  801810:	10800017 	ldw	r2,0(r2)
  801814:	1009883a 	mov	r4,r2
  801818:	d8800d15 	stw	r2,52(sp)
  80181c:	08017380 	call	801738 <strlen>
  801820:	d8800b15 	stw	r2,44(sp)
  801824:	98000226 	beq	r19,zero,801830 <___vfprintf_internal_r+0x60>
  801828:	98800e17 	ldw	r2,56(r19)
  80182c:	1001e026 	beq	r2,zero,801fb0 <___vfprintf_internal_r+0x7e0>
  801830:	9080030b 	ldhu	r2,12(r18)
  801834:	10c8000c 	andi	r3,r2,8192
  801838:	1800061e 	bne	r3,zero,801854 <___vfprintf_internal_r+0x84>
  80183c:	90c01917 	ldw	r3,100(r18)
  801840:	0137ffc4 	movi	r4,-8193
  801844:	10880014 	ori	r2,r2,8192
  801848:	1906703a 	and	r3,r3,r4
  80184c:	9080030d 	sth	r2,12(r18)
  801850:	90c01915 	stw	r3,100(r18)
  801854:	10c0020c 	andi	r3,r2,8
  801858:	1800fc26 	beq	r3,zero,801c4c <___vfprintf_internal_r+0x47c>
  80185c:	90c00417 	ldw	r3,16(r18)
  801860:	1800fa26 	beq	r3,zero,801c4c <___vfprintf_internal_r+0x47c>
  801864:	1080068c 	andi	r2,r2,26
  801868:	10800298 	cmpnei	r2,r2,10
  80186c:	1000ff26 	beq	r2,zero,801c6c <___vfprintf_internal_r+0x49c>
  801870:	d8802704 	addi	r2,sp,156
  801874:	b02f883a 	mov	r23,r22
  801878:	d8801a15 	stw	r2,104(sp)
  80187c:	d8001c15 	stw	zero,112(sp)
  801880:	d8001b15 	stw	zero,108(sp)
  801884:	d8000815 	stw	zero,32(sp)
  801888:	d8000915 	stw	zero,36(sp)
  80188c:	d8000a15 	stw	zero,40(sp)
  801890:	d8000c15 	stw	zero,48(sp)
  801894:	d8001015 	stw	zero,64(sp)
  801898:	d8000515 	stw	zero,20(sp)
  80189c:	102d883a 	mov	r22,r2
  8018a0:	b8800007 	ldb	r2,0(r23)
  8018a4:	1000d726 	beq	r2,zero,801c04 <___vfprintf_internal_r+0x434>
  8018a8:	b821883a 	mov	r16,r23
  8018ac:	00000306 	br	8018bc <___vfprintf_internal_r+0xec>
  8018b0:	80800047 	ldb	r2,1(r16)
  8018b4:	84000044 	addi	r16,r16,1
  8018b8:	10012226 	beq	r2,zero,801d44 <___vfprintf_internal_r+0x574>
  8018bc:	10800958 	cmpnei	r2,r2,37
  8018c0:	103ffb1e 	bne	r2,zero,8018b0 <___vfprintf_internal_r+0xe0>
  8018c4:	85e3c83a 	sub	r17,r16,r23
  8018c8:	85c1201e 	bne	r16,r23,801d4c <___vfprintf_internal_r+0x57c>
  8018cc:	80800003 	ldbu	r2,0(r16)
  8018d0:	10803fcc 	andi	r2,r2,255
  8018d4:	1080201c 	xori	r2,r2,128
  8018d8:	10bfe004 	addi	r2,r2,-128
  8018dc:	1000c926 	beq	r2,zero,801c04 <___vfprintf_internal_r+0x434>
  8018e0:	82c00047 	ldb	r11,1(r16)
  8018e4:	85c00044 	addi	r23,r16,1
  8018e8:	d8001345 	stb	zero,77(sp)
  8018ec:	0009883a 	mov	r4,zero
  8018f0:	000b883a 	mov	r5,zero
  8018f4:	023fffc4 	movi	r8,-1
  8018f8:	0021883a 	mov	r16,zero
  8018fc:	0019883a 	mov	r12,zero
  801900:	bdc00044 	addi	r23,r23,1
  801904:	5839883a 	mov	fp,r11
  801908:	e0bff804 	addi	r2,fp,-32
  80190c:	10c01668 	cmpgeui	r3,r2,89
  801910:	18006c1e 	bne	r3,zero,801ac4 <___vfprintf_internal_r+0x2f4>
  801914:	100490ba 	slli	r2,r2,2
  801918:	00c02034 	movhi	r3,128
  80191c:	10c7883a 	add	r3,r2,r3
  801920:	18864a17 	ldw	r2,6440(r3)
  801924:	1000683a 	jmp	r2
  801928:	00802278 	rdprs	r2,zero,137
  80192c:	00801ac4 	movi	r2,107
  801930:	00801ac4 	movi	r2,107
  801934:	0080226c 	andhi	r2,zero,137
  801938:	00801ac4 	movi	r2,107
  80193c:	00801ac4 	movi	r2,107
  801940:	00801ac4 	movi	r2,107
  801944:	00801ac4 	movi	r2,107
  801948:	00801ac4 	movi	r2,107
  80194c:	00801ac4 	movi	r2,107
  801950:	00802244 	movi	r2,137
  801954:	00802234 	movhi	r2,136
  801958:	00801ac4 	movi	r2,107
  80195c:	0080221c 	xori	r2,zero,136
  801960:	008021d0 	cmplti	r2,zero,135
  801964:	00801ac4 	movi	r2,107
  801968:	008021c4 	movi	r2,135
  80196c:	00801a8c 	andi	r2,zero,106
  801970:	00801a8c 	andi	r2,zero,106
  801974:	00801a8c 	andi	r2,zero,106
  801978:	00801a8c 	andi	r2,zero,106
  80197c:	00801a8c 	andi	r2,zero,106
  801980:	00801a8c 	andi	r2,zero,106
  801984:	00801a8c 	andi	r2,zero,106
  801988:	00801a8c 	andi	r2,zero,106
  80198c:	00801a8c 	andi	r2,zero,106
  801990:	00801ac4 	movi	r2,107
  801994:	00801ac4 	movi	r2,107
  801998:	00801ac4 	movi	r2,107
  80199c:	00801ac4 	movi	r2,107
  8019a0:	00801ac4 	movi	r2,107
  8019a4:	00801ac4 	movi	r2,107
  8019a8:	00801ac4 	movi	r2,107
  8019ac:	00801ac4 	movi	r2,107
  8019b0:	00801ac4 	movi	r2,107
  8019b4:	00801ac4 	movi	r2,107
  8019b8:	008020dc 	xori	r2,zero,131
  8019bc:	00801da8 	cmpgeui	r2,zero,118
  8019c0:	00801ac4 	movi	r2,107
  8019c4:	00801da8 	cmpgeui	r2,zero,118
  8019c8:	00801ac4 	movi	r2,107
  8019cc:	00801ac4 	movi	r2,107
  8019d0:	00801ac4 	movi	r2,107
  8019d4:	00801ac4 	movi	r2,107
  8019d8:	008020d0 	cmplti	r2,zero,131
  8019dc:	00801ac4 	movi	r2,107
  8019e0:	00801ac4 	movi	r2,107
  8019e4:	00801cdc 	xori	r2,zero,115
  8019e8:	00801ac4 	movi	r2,107
  8019ec:	00801ac4 	movi	r2,107
  8019f0:	00801ac4 	movi	r2,107
  8019f4:	00801ac4 	movi	r2,107
  8019f8:	00801ac4 	movi	r2,107
  8019fc:	00801cb4 	movhi	r2,114
  801a00:	00801ac4 	movi	r2,107
  801a04:	00801ac4 	movi	r2,107
  801a08:	00802088 	cmpgei	r2,zero,130
  801a0c:	00801ac4 	movi	r2,107
  801a10:	00801ac4 	movi	r2,107
  801a14:	00801ac4 	movi	r2,107
  801a18:	00801ac4 	movi	r2,107
  801a1c:	00801ac4 	movi	r2,107
  801a20:	00801ac4 	movi	r2,107
  801a24:	00801ac4 	movi	r2,107
  801a28:	00801ac4 	movi	r2,107
  801a2c:	00801ac4 	movi	r2,107
  801a30:	00801ac4 	movi	r2,107
  801a34:	00802060 	cmpeqi	r2,zero,129
  801a38:	00801fbc 	xorhi	r2,zero,126
  801a3c:	00801da8 	cmpgeui	r2,zero,118
  801a40:	00801da8 	cmpgeui	r2,zero,118
  801a44:	00801da8 	cmpgeui	r2,zero,118
  801a48:	00802054 	movui	r2,129
  801a4c:	00801fbc 	xorhi	r2,zero,126
  801a50:	00801ac4 	movi	r2,107
  801a54:	00801ac4 	movi	r2,107
  801a58:	008023cc 	andi	r2,zero,143
  801a5c:	00801ac4 	movi	r2,107
  801a60:	00802390 	cmplti	r2,zero,142
  801a64:	00801ce0 	cmpeqi	r2,zero,115
  801a68:	00802350 	cmplti	r2,zero,141
  801a6c:	00802344 	movi	r2,141
  801a70:	00801ac4 	movi	r2,107
  801a74:	008022ec 	andhi	r2,zero,139
  801a78:	00801ac4 	movi	r2,107
  801a7c:	00801cb8 	rdprs	r2,zero,114
  801a80:	00801ac4 	movi	r2,107
  801a84:	00801ac4 	movi	r2,107
  801a88:	008022a4 	muli	r2,zero,138
  801a8c:	0021883a 	mov	r16,zero
  801a90:	e0fff404 	addi	r3,fp,-48
  801a94:	800490ba 	slli	r2,r16,2
  801a98:	bf000007 	ldb	fp,0(r23)
  801a9c:	bdc00044 	addi	r23,r23,1
  801aa0:	1421883a 	add	r16,r2,r16
  801aa4:	8421883a 	add	r16,r16,r16
  801aa8:	1c21883a 	add	r16,r3,r16
  801aac:	e0fff404 	addi	r3,fp,-48
  801ab0:	188002b0 	cmpltui	r2,r3,10
  801ab4:	103ff71e 	bne	r2,zero,801a94 <___vfprintf_internal_r+0x2c4>
  801ab8:	e0bff804 	addi	r2,fp,-32
  801abc:	10c01668 	cmpgeui	r3,r2,89
  801ac0:	183f9426 	beq	r3,zero,801914 <___vfprintf_internal_r+0x144>
  801ac4:	21003fcc 	andi	r4,r4,255
  801ac8:	2006871e 	bne	r4,zero,8034e8 <___vfprintf_internal_r+0x1d18>
  801acc:	e0004d26 	beq	fp,zero,801c04 <___vfprintf_internal_r+0x434>
  801ad0:	df001d05 	stb	fp,116(sp)
  801ad4:	d8001345 	stb	zero,77(sp)
  801ad8:	05000044 	movi	r20,1
  801adc:	05400044 	movi	r21,1
  801ae0:	dc401d04 	addi	r17,sp,116
  801ae4:	db000415 	stw	r12,16(sp)
  801ae8:	0011883a 	mov	r8,zero
  801aec:	d8000715 	stw	zero,28(sp)
  801af0:	d8800417 	ldw	r2,16(sp)
  801af4:	1380008c 	andi	r14,r2,2
  801af8:	70000126 	beq	r14,zero,801b00 <___vfprintf_internal_r+0x330>
  801afc:	a5000084 	addi	r20,r20,2
  801b00:	d8800417 	ldw	r2,16(sp)
  801b04:	d8c01c17 	ldw	r3,112(sp)
  801b08:	1340210c 	andi	r13,r2,132
  801b0c:	6800021e 	bne	r13,zero,801b18 <___vfprintf_internal_r+0x348>
  801b10:	850fc83a 	sub	r7,r16,r20
  801b14:	01c34516 	blt	zero,r7,80282c <___vfprintf_internal_r+0x105c>
  801b18:	d8801347 	ldb	r2,77(sp)
  801b1c:	10000c26 	beq	r2,zero,801b50 <___vfprintf_internal_r+0x380>
  801b20:	d8801b17 	ldw	r2,108(sp)
  801b24:	d9001344 	addi	r4,sp,77
  801b28:	18c00044 	addi	r3,r3,1
  801b2c:	10800044 	addi	r2,r2,1
  801b30:	b1000015 	stw	r4,0(r22)
  801b34:	01000044 	movi	r4,1
  801b38:	d8801b15 	stw	r2,108(sp)
  801b3c:	b1000115 	stw	r4,4(r22)
  801b40:	d8c01c15 	stw	r3,112(sp)
  801b44:	10800208 	cmpgei	r2,r2,8
  801b48:	1003791e 	bne	r2,zero,802930 <___vfprintf_internal_r+0x1160>
  801b4c:	b5800204 	addi	r22,r22,8
  801b50:	70000c26 	beq	r14,zero,801b84 <___vfprintf_internal_r+0x3b4>
  801b54:	d8801b17 	ldw	r2,108(sp)
  801b58:	d9001384 	addi	r4,sp,78
  801b5c:	18c00084 	addi	r3,r3,2
  801b60:	10800044 	addi	r2,r2,1
  801b64:	b1000015 	stw	r4,0(r22)
  801b68:	01000084 	movi	r4,2
  801b6c:	d8801b15 	stw	r2,108(sp)
  801b70:	b1000115 	stw	r4,4(r22)
  801b74:	d8c01c15 	stw	r3,112(sp)
  801b78:	10800208 	cmpgei	r2,r2,8
  801b7c:	10037a1e 	bne	r2,zero,802968 <___vfprintf_internal_r+0x1198>
  801b80:	b5800204 	addi	r22,r22,8
  801b84:	6b402018 	cmpnei	r13,r13,128
  801b88:	68025b26 	beq	r13,zero,8024f8 <___vfprintf_internal_r+0xd28>
  801b8c:	4551c83a 	sub	r8,r8,r21
  801b90:	02029316 	blt	zero,r8,8025e0 <___vfprintf_internal_r+0xe10>
  801b94:	d8800417 	ldw	r2,16(sp)
  801b98:	1080400c 	andi	r2,r2,256
  801b9c:	1002101e 	bne	r2,zero,8023e0 <___vfprintf_internal_r+0xc10>
  801ba0:	d8801b17 	ldw	r2,108(sp)
  801ba4:	1d47883a 	add	r3,r3,r21
  801ba8:	b4400015 	stw	r17,0(r22)
  801bac:	10800044 	addi	r2,r2,1
  801bb0:	b5400115 	stw	r21,4(r22)
  801bb4:	d8801b15 	stw	r2,108(sp)
  801bb8:	d8c01c15 	stw	r3,112(sp)
  801bbc:	10800208 	cmpgei	r2,r2,8
  801bc0:	1003101e 	bne	r2,zero,802804 <___vfprintf_internal_r+0x1034>
  801bc4:	b5800204 	addi	r22,r22,8
  801bc8:	d8800417 	ldw	r2,16(sp)
  801bcc:	1440010c 	andi	r17,r2,4
  801bd0:	88000226 	beq	r17,zero,801bdc <___vfprintf_internal_r+0x40c>
  801bd4:	8523c83a 	sub	r17,r16,r20
  801bd8:	0440c616 	blt	zero,r17,801ef4 <___vfprintf_internal_r+0x724>
  801bdc:	8500010e 	bge	r16,r20,801be4 <___vfprintf_internal_r+0x414>
  801be0:	a021883a 	mov	r16,r20
  801be4:	d8800517 	ldw	r2,20(sp)
  801be8:	1405883a 	add	r2,r2,r16
  801bec:	d8800515 	stw	r2,20(sp)
  801bf0:	1802c21e 	bne	r3,zero,8026fc <___vfprintf_internal_r+0xf2c>
  801bf4:	b8800007 	ldb	r2,0(r23)
  801bf8:	d8001b15 	stw	zero,108(sp)
  801bfc:	dd802704 	addi	r22,sp,156
  801c00:	103f291e 	bne	r2,zero,8018a8 <___vfprintf_internal_r+0xd8>
  801c04:	d8801c17 	ldw	r2,112(sp)
  801c08:	1006391e 	bne	r2,zero,8034f0 <___vfprintf_internal_r+0x1d20>
  801c0c:	9080030b 	ldhu	r2,12(r18)
  801c10:	1080100c 	andi	r2,r2,64
  801c14:	1006cf1e 	bne	r2,zero,803754 <___vfprintf_internal_r+0x1f84>
  801c18:	d8800517 	ldw	r2,20(sp)
  801c1c:	dfc04017 	ldw	ra,256(sp)
  801c20:	df003f17 	ldw	fp,252(sp)
  801c24:	ddc03e17 	ldw	r23,248(sp)
  801c28:	dd803d17 	ldw	r22,244(sp)
  801c2c:	dd403c17 	ldw	r21,240(sp)
  801c30:	dd003b17 	ldw	r20,236(sp)
  801c34:	dcc03a17 	ldw	r19,232(sp)
  801c38:	dc803917 	ldw	r18,228(sp)
  801c3c:	dc403817 	ldw	r17,224(sp)
  801c40:	dc003717 	ldw	r16,220(sp)
  801c44:	dec04104 	addi	sp,sp,260
  801c48:	f800283a 	ret
  801c4c:	900b883a 	mov	r5,r18
  801c50:	9809883a 	mov	r4,r19
  801c54:	0803a140 	call	803a14 <__swsetup_r>
  801c58:	1006be1e 	bne	r2,zero,803754 <___vfprintf_internal_r+0x1f84>
  801c5c:	9080030b 	ldhu	r2,12(r18)
  801c60:	1080068c 	andi	r2,r2,26
  801c64:	10800298 	cmpnei	r2,r2,10
  801c68:	103f011e 	bne	r2,zero,801870 <___vfprintf_internal_r+0xa0>
  801c6c:	9080038f 	ldh	r2,14(r18)
  801c70:	103eff16 	blt	r2,zero,801870 <___vfprintf_internal_r+0xa0>
  801c74:	d9c00617 	ldw	r7,24(sp)
  801c78:	b00d883a 	mov	r6,r22
  801c7c:	900b883a 	mov	r5,r18
  801c80:	9809883a 	mov	r4,r19
  801c84:	dfc04017 	ldw	ra,256(sp)
  801c88:	df003f17 	ldw	fp,252(sp)
  801c8c:	ddc03e17 	ldw	r23,248(sp)
  801c90:	dd803d17 	ldw	r22,244(sp)
  801c94:	dd403c17 	ldw	r21,240(sp)
  801c98:	dd003b17 	ldw	r20,236(sp)
  801c9c:	dcc03a17 	ldw	r19,232(sp)
  801ca0:	dc803917 	ldw	r18,228(sp)
  801ca4:	dc403817 	ldw	r17,224(sp)
  801ca8:	dc003717 	ldw	r16,220(sp)
  801cac:	dec04104 	addi	sp,sp,260
  801cb0:	08038f01 	jmpi	8038f0 <__sbprintf>
  801cb4:	63000414 	ori	r12,r12,16
  801cb8:	6080080c 	andi	r2,r12,32
  801cbc:	10008126 	beq	r2,zero,801ec4 <___vfprintf_internal_r+0x6f4>
  801cc0:	d8c00617 	ldw	r3,24(sp)
  801cc4:	00800044 	movi	r2,1
  801cc8:	1d000017 	ldw	r20,0(r3)
  801ccc:	1d400117 	ldw	r21,4(r3)
  801cd0:	18c00204 	addi	r3,r3,8
  801cd4:	d8c00615 	stw	r3,24(sp)
  801cd8:	00000906 	br	801d00 <___vfprintf_internal_r+0x530>
  801cdc:	63000414 	ori	r12,r12,16
  801ce0:	6080080c 	andi	r2,r12,32
  801ce4:	10006b26 	beq	r2,zero,801e94 <___vfprintf_internal_r+0x6c4>
  801ce8:	d8c00617 	ldw	r3,24(sp)
  801cec:	0005883a 	mov	r2,zero
  801cf0:	1d000017 	ldw	r20,0(r3)
  801cf4:	1d400117 	ldw	r21,4(r3)
  801cf8:	18c00204 	addi	r3,r3,8
  801cfc:	d8c00615 	stw	r3,24(sp)
  801d00:	d8001345 	stb	zero,77(sp)
  801d04:	40ffffe0 	cmpeqi	r3,r8,-1
  801d08:	001b883a 	mov	r13,zero
  801d0c:	18010e1e 	bne	r3,zero,802148 <___vfprintf_internal_r+0x978>
  801d10:	047fdfc4 	movi	r17,-129
  801d14:	6448703a 	and	r4,r12,r17
  801d18:	a546b03a 	or	r3,r20,r21
  801d1c:	d9000415 	stw	r4,16(sp)
  801d20:	1802c01e 	bne	r3,zero,802824 <___vfprintf_internal_r+0x1054>
  801d24:	40025f1e 	bne	r8,zero,8026a4 <___vfprintf_internal_r+0xed4>
  801d28:	1003751e 	bne	r2,zero,802b00 <___vfprintf_internal_r+0x1330>
  801d2c:	6540004c 	andi	r21,r12,1
  801d30:	a803b026 	beq	r21,zero,802bf4 <___vfprintf_internal_r+0x1424>
  801d34:	00800c04 	movi	r2,48
  801d38:	d88026c5 	stb	r2,155(sp)
  801d3c:	dc4026c4 	addi	r17,sp,155
  801d40:	0000ba06 	br	80202c <___vfprintf_internal_r+0x85c>
  801d44:	85e3c83a 	sub	r17,r16,r23
  801d48:	85ffae26 	beq	r16,r23,801c04 <___vfprintf_internal_r+0x434>
  801d4c:	d8c01c17 	ldw	r3,112(sp)
  801d50:	d8801b17 	ldw	r2,108(sp)
  801d54:	b5c00015 	stw	r23,0(r22)
  801d58:	1c47883a 	add	r3,r3,r17
  801d5c:	10800044 	addi	r2,r2,1
  801d60:	d8801b15 	stw	r2,108(sp)
  801d64:	b4400115 	stw	r17,4(r22)
  801d68:	d8c01c15 	stw	r3,112(sp)
  801d6c:	10800208 	cmpgei	r2,r2,8
  801d70:	1000061e 	bne	r2,zero,801d8c <___vfprintf_internal_r+0x5bc>
  801d74:	b5800204 	addi	r22,r22,8
  801d78:	d8c00517 	ldw	r3,20(sp)
  801d7c:	80800003 	ldbu	r2,0(r16)
  801d80:	1c47883a 	add	r3,r3,r17
  801d84:	d8c00515 	stw	r3,20(sp)
  801d88:	003ed106 	br	8018d0 <___vfprintf_internal_r+0x100>
  801d8c:	d9801a04 	addi	r6,sp,104
  801d90:	900b883a 	mov	r5,r18
  801d94:	9809883a 	mov	r4,r19
  801d98:	08081380 	call	808138 <__sprint_r>
  801d9c:	103f9b1e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  801da0:	dd802704 	addi	r22,sp,156
  801da4:	003ff406 	br	801d78 <___vfprintf_internal_r+0x5a8>
  801da8:	21003fcc 	andi	r4,r4,255
  801dac:	2006671e 	bne	r4,zero,80374c <___vfprintf_internal_r+0x1f7c>
  801db0:	d8c00617 	ldw	r3,24(sp)
  801db4:	6080020c 	andi	r2,r12,8
  801db8:	19000204 	addi	r4,r3,8
  801dbc:	d9000e15 	stw	r4,56(sp)
  801dc0:	1003a71e 	bne	r2,zero,802c60 <___vfprintf_internal_r+0x1490>
  801dc4:	d8800617 	ldw	r2,24(sp)
  801dc8:	10c00017 	ldw	r3,0(r2)
  801dcc:	10800117 	ldw	r2,4(r2)
  801dd0:	d8c00915 	stw	r3,36(sp)
  801dd4:	d8800a15 	stw	r2,40(sp)
  801dd8:	dd400a17 	ldw	r21,40(sp)
  801ddc:	dd000917 	ldw	r20,36(sp)
  801de0:	00a00034 	movhi	r2,32768
  801de4:	10bfffc4 	addi	r2,r2,-1
  801de8:	a8a2703a 	and	r17,r21,r2
  801dec:	01dffc34 	movhi	r7,32752
  801df0:	01bfffc4 	movi	r6,-1
  801df4:	39ffffc4 	addi	r7,r7,-1
  801df8:	a009883a 	mov	r4,r20
  801dfc:	880b883a 	mov	r5,r17
  801e00:	da000615 	stw	r8,24(sp)
  801e04:	db000415 	stw	r12,16(sp)
  801e08:	080d6440 	call	80d644 <__unorddf2>
  801e0c:	db000417 	ldw	r12,16(sp)
  801e10:	da000617 	ldw	r8,24(sp)
  801e14:	1004641e 	bne	r2,zero,802fa8 <___vfprintf_internal_r+0x17d8>
  801e18:	01dffc34 	movhi	r7,32752
  801e1c:	01bfffc4 	movi	r6,-1
  801e20:	39ffffc4 	addi	r7,r7,-1
  801e24:	a009883a 	mov	r4,r20
  801e28:	880b883a 	mov	r5,r17
  801e2c:	080c4fc0 	call	80c4fc <__ledf2>
  801e30:	db000417 	ldw	r12,16(sp)
  801e34:	da000617 	ldw	r8,24(sp)
  801e38:	00845b0e 	bge	zero,r2,802fa8 <___vfprintf_internal_r+0x17d8>
  801e3c:	000d883a 	mov	r6,zero
  801e40:	000f883a 	mov	r7,zero
  801e44:	a009883a 	mov	r4,r20
  801e48:	a80b883a 	mov	r5,r21
  801e4c:	080c4fc0 	call	80c4fc <__ledf2>
  801e50:	db000417 	ldw	r12,16(sp)
  801e54:	10059116 	blt	r2,zero,80349c <___vfprintf_internal_r+0x1ccc>
  801e58:	db401343 	ldbu	r13,77(sp)
  801e5c:	e0801210 	cmplti	r2,fp,72
  801e60:	1005391e 	bne	r2,zero,803348 <___vfprintf_internal_r+0x1b78>
  801e64:	04402074 	movhi	r17,129
  801e68:	8c419c04 	addi	r17,r17,1648
  801e6c:	00bfdfc4 	movi	r2,-129
  801e70:	6084703a 	and	r2,r12,r2
  801e74:	d8800415 	stw	r2,16(sp)
  801e78:	d8800e17 	ldw	r2,56(sp)
  801e7c:	050000c4 	movi	r20,3
  801e80:	054000c4 	movi	r21,3
  801e84:	d8800615 	stw	r2,24(sp)
  801e88:	0011883a 	mov	r8,zero
  801e8c:	d8000715 	stw	zero,28(sp)
  801e90:	00006a06 	br	80203c <___vfprintf_internal_r+0x86c>
  801e94:	d9000617 	ldw	r4,24(sp)
  801e98:	6080040c 	andi	r2,r12,16
  801e9c:	20c00104 	addi	r3,r4,4
  801ea0:	10036a1e 	bne	r2,zero,802c4c <___vfprintf_internal_r+0x147c>
  801ea4:	6080100c 	andi	r2,r12,64
  801ea8:	10052126 	beq	r2,zero,803330 <___vfprintf_internal_r+0x1b60>
  801eac:	d8800617 	ldw	r2,24(sp)
  801eb0:	002b883a 	mov	r21,zero
  801eb4:	d8c00615 	stw	r3,24(sp)
  801eb8:	1500000b 	ldhu	r20,0(r2)
  801ebc:	0005883a 	mov	r2,zero
  801ec0:	003f8f06 	br	801d00 <___vfprintf_internal_r+0x530>
  801ec4:	d9000617 	ldw	r4,24(sp)
  801ec8:	6080040c 	andi	r2,r12,16
  801ecc:	20c00104 	addi	r3,r4,4
  801ed0:	1003501e 	bne	r2,zero,802c14 <___vfprintf_internal_r+0x1444>
  801ed4:	6080100c 	andi	r2,r12,64
  801ed8:	10055926 	beq	r2,zero,803440 <___vfprintf_internal_r+0x1c70>
  801edc:	d8800617 	ldw	r2,24(sp)
  801ee0:	002b883a 	mov	r21,zero
  801ee4:	d8c00615 	stw	r3,24(sp)
  801ee8:	1500000b 	ldhu	r20,0(r2)
  801eec:	00800044 	movi	r2,1
  801ef0:	003f8306 	br	801d00 <___vfprintf_internal_r+0x530>
  801ef4:	03002074 	movhi	r12,129
  801ef8:	89000450 	cmplti	r4,r17,17
  801efc:	d8801b17 	ldw	r2,108(sp)
  801f00:	6301b004 	addi	r12,r12,1728
  801f04:	20001b1e 	bne	r4,zero,801f74 <___vfprintf_internal_r+0x7a4>
  801f08:	05400404 	movi	r21,16
  801f0c:	6039883a 	mov	fp,r12
  801f10:	00000406 	br	801f24 <___vfprintf_internal_r+0x754>
  801f14:	8c7ffc04 	addi	r17,r17,-16
  801f18:	89000448 	cmpgei	r4,r17,17
  801f1c:	b5800204 	addi	r22,r22,8
  801f20:	20001326 	beq	r4,zero,801f70 <___vfprintf_internal_r+0x7a0>
  801f24:	10800044 	addi	r2,r2,1
  801f28:	18c00404 	addi	r3,r3,16
  801f2c:	b7000015 	stw	fp,0(r22)
  801f30:	b5400115 	stw	r21,4(r22)
  801f34:	d8c01c15 	stw	r3,112(sp)
  801f38:	d8801b15 	stw	r2,108(sp)
  801f3c:	11000208 	cmpgei	r4,r2,8
  801f40:	203ff426 	beq	r4,zero,801f14 <___vfprintf_internal_r+0x744>
  801f44:	d9801a04 	addi	r6,sp,104
  801f48:	900b883a 	mov	r5,r18
  801f4c:	9809883a 	mov	r4,r19
  801f50:	08081380 	call	808138 <__sprint_r>
  801f54:	103f2d1e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  801f58:	8c7ffc04 	addi	r17,r17,-16
  801f5c:	89000448 	cmpgei	r4,r17,17
  801f60:	d8c01c17 	ldw	r3,112(sp)
  801f64:	d8801b17 	ldw	r2,108(sp)
  801f68:	dd802704 	addi	r22,sp,156
  801f6c:	203fed1e 	bne	r4,zero,801f24 <___vfprintf_internal_r+0x754>
  801f70:	e019883a 	mov	r12,fp
  801f74:	10800044 	addi	r2,r2,1
  801f78:	1c47883a 	add	r3,r3,r17
  801f7c:	d8801b15 	stw	r2,108(sp)
  801f80:	b3000015 	stw	r12,0(r22)
  801f84:	b4400115 	stw	r17,4(r22)
  801f88:	d8c01c15 	stw	r3,112(sp)
  801f8c:	10800210 	cmplti	r2,r2,8
  801f90:	103f121e 	bne	r2,zero,801bdc <___vfprintf_internal_r+0x40c>
  801f94:	d9801a04 	addi	r6,sp,104
  801f98:	900b883a 	mov	r5,r18
  801f9c:	9809883a 	mov	r4,r19
  801fa0:	08081380 	call	808138 <__sprint_r>
  801fa4:	103f191e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  801fa8:	d8c01c17 	ldw	r3,112(sp)
  801fac:	003f0b06 	br	801bdc <___vfprintf_internal_r+0x40c>
  801fb0:	9809883a 	mov	r4,r19
  801fb4:	08009680 	call	800968 <__sinit>
  801fb8:	003e1d06 	br	801830 <___vfprintf_internal_r+0x60>
  801fbc:	21003fcc 	andi	r4,r4,255
  801fc0:	2005de1e 	bne	r4,zero,80373c <___vfprintf_internal_r+0x1f6c>
  801fc4:	6080080c 	andi	r2,r12,32
  801fc8:	10004926 	beq	r2,zero,8020f0 <___vfprintf_internal_r+0x920>
  801fcc:	d8c00617 	ldw	r3,24(sp)
  801fd0:	18800117 	ldw	r2,4(r3)
  801fd4:	1d000017 	ldw	r20,0(r3)
  801fd8:	18c00204 	addi	r3,r3,8
  801fdc:	d8c00615 	stw	r3,24(sp)
  801fe0:	102b883a 	mov	r21,r2
  801fe4:	10004e16 	blt	r2,zero,802120 <___vfprintf_internal_r+0x950>
  801fe8:	40bfffd8 	cmpnei	r2,r8,-1
  801fec:	db401343 	ldbu	r13,77(sp)
  801ff0:	10000626 	beq	r2,zero,80200c <___vfprintf_internal_r+0x83c>
  801ff4:	047fdfc4 	movi	r17,-129
  801ff8:	6446703a 	and	r3,r12,r17
  801ffc:	a544b03a 	or	r2,r20,r21
  802000:	d8c00415 	stw	r3,16(sp)
  802004:	1002bd26 	beq	r2,zero,802afc <___vfprintf_internal_r+0x132c>
  802008:	db000417 	ldw	r12,16(sp)
  80200c:	a803701e 	bne	r21,zero,802dd0 <___vfprintf_internal_r+0x1600>
  802010:	a08002a8 	cmpgeui	r2,r20,10
  802014:	10036e1e 	bne	r2,zero,802dd0 <___vfprintf_internal_r+0x1600>
  802018:	a5000c04 	addi	r20,r20,48
  80201c:	dd0026c5 	stb	r20,155(sp)
  802020:	db000415 	stw	r12,16(sp)
  802024:	05400044 	movi	r21,1
  802028:	dc4026c4 	addi	r17,sp,155
  80202c:	4029883a 	mov	r20,r8
  802030:	4540010e 	bge	r8,r21,802038 <___vfprintf_internal_r+0x868>
  802034:	a829883a 	mov	r20,r21
  802038:	d8000715 	stw	zero,28(sp)
  80203c:	6b403fcc 	andi	r13,r13,255
  802040:	6b40201c 	xori	r13,r13,128
  802044:	6b7fe004 	addi	r13,r13,-128
  802048:	683ea926 	beq	r13,zero,801af0 <___vfprintf_internal_r+0x320>
  80204c:	a5000044 	addi	r20,r20,1
  802050:	003ea706 	br	801af0 <___vfprintf_internal_r+0x320>
  802054:	bac00007 	ldb	r11,0(r23)
  802058:	63001014 	ori	r12,r12,64
  80205c:	003e2806 	br	801900 <___vfprintf_internal_r+0x130>
  802060:	d8c00617 	ldw	r3,24(sp)
  802064:	d8001345 	stb	zero,77(sp)
  802068:	05000044 	movi	r20,1
  80206c:	18800017 	ldw	r2,0(r3)
  802070:	18c00104 	addi	r3,r3,4
  802074:	d8c00615 	stw	r3,24(sp)
  802078:	d8801d05 	stb	r2,116(sp)
  80207c:	05400044 	movi	r21,1
  802080:	dc401d04 	addi	r17,sp,116
  802084:	003e9706 	br	801ae4 <___vfprintf_internal_r+0x314>
  802088:	21003fcc 	andi	r4,r4,255
  80208c:	2005a71e 	bne	r4,zero,80372c <___vfprintf_internal_r+0x1f5c>
  802090:	00802074 	movhi	r2,129
  802094:	1081a404 	addi	r2,r2,1680
  802098:	d8800c15 	stw	r2,48(sp)
  80209c:	6080080c 	andi	r2,r12,32
  8020a0:	10008726 	beq	r2,zero,8022c0 <___vfprintf_internal_r+0xaf0>
  8020a4:	d8800617 	ldw	r2,24(sp)
  8020a8:	15000017 	ldw	r20,0(r2)
  8020ac:	15400117 	ldw	r21,4(r2)
  8020b0:	10800204 	addi	r2,r2,8
  8020b4:	d8800615 	stw	r2,24(sp)
  8020b8:	6080004c 	andi	r2,r12,1
  8020bc:	10000226 	beq	r2,zero,8020c8 <___vfprintf_internal_r+0x8f8>
  8020c0:	a544b03a 	or	r2,r20,r21
  8020c4:	1002cd1e 	bne	r2,zero,802bfc <___vfprintf_internal_r+0x142c>
  8020c8:	00800084 	movi	r2,2
  8020cc:	003f0c06 	br	801d00 <___vfprintf_internal_r+0x530>
  8020d0:	bac00007 	ldb	r11,0(r23)
  8020d4:	63000214 	ori	r12,r12,8
  8020d8:	003e0906 	br	801900 <___vfprintf_internal_r+0x130>
  8020dc:	21003fcc 	andi	r4,r4,255
  8020e0:	2005981e 	bne	r4,zero,803744 <___vfprintf_internal_r+0x1f74>
  8020e4:	63000414 	ori	r12,r12,16
  8020e8:	6080080c 	andi	r2,r12,32
  8020ec:	103fb71e 	bne	r2,zero,801fcc <___vfprintf_internal_r+0x7fc>
  8020f0:	d9000617 	ldw	r4,24(sp)
  8020f4:	6080040c 	andi	r2,r12,16
  8020f8:	20c00104 	addi	r3,r4,4
  8020fc:	1002dd1e 	bne	r2,zero,802c74 <___vfprintf_internal_r+0x14a4>
  802100:	6080100c 	andi	r2,r12,64
  802104:	10048426 	beq	r2,zero,803318 <___vfprintf_internal_r+0x1b48>
  802108:	d8800617 	ldw	r2,24(sp)
  80210c:	d8c00615 	stw	r3,24(sp)
  802110:	1500000f 	ldh	r20,0(r2)
  802114:	a02bd7fa 	srai	r21,r20,31
  802118:	a805883a 	mov	r2,r21
  80211c:	103fb20e 	bge	r2,zero,801fe8 <___vfprintf_internal_r+0x818>
  802120:	a004c03a 	cmpne	r2,r20,zero
  802124:	056bc83a 	sub	r21,zero,r21
  802128:	a8abc83a 	sub	r21,r21,r2
  80212c:	00800b44 	movi	r2,45
  802130:	d8801345 	stb	r2,77(sp)
  802134:	40ffffe0 	cmpeqi	r3,r8,-1
  802138:	0529c83a 	sub	r20,zero,r20
  80213c:	03400b44 	movi	r13,45
  802140:	00800044 	movi	r2,1
  802144:	183ef226 	beq	r3,zero,801d10 <___vfprintf_internal_r+0x540>
  802148:	10c00060 	cmpeqi	r3,r2,1
  80214c:	183faf1e 	bne	r3,zero,80200c <___vfprintf_internal_r+0x83c>
  802150:	108000a0 	cmpeqi	r2,r2,2
  802154:	1001581e 	bne	r2,zero,8026b8 <___vfprintf_internal_r+0xee8>
  802158:	dc402704 	addi	r17,sp,156
  80215c:	a006d0fa 	srli	r3,r20,3
  802160:	a808977a 	slli	r4,r21,29
  802164:	a82ad0fa 	srli	r21,r21,3
  802168:	a50001cc 	andi	r20,r20,7
  80216c:	a0800c04 	addi	r2,r20,48
  802170:	20e8b03a 	or	r20,r4,r3
  802174:	88bfffc5 	stb	r2,-1(r17)
  802178:	a546b03a 	or	r3,r20,r21
  80217c:	880b883a 	mov	r5,r17
  802180:	8c7fffc4 	addi	r17,r17,-1
  802184:	183ff51e 	bne	r3,zero,80215c <___vfprintf_internal_r+0x98c>
  802188:	60c0004c 	andi	r3,r12,1
  80218c:	18015726 	beq	r3,zero,8026ec <___vfprintf_internal_r+0xf1c>
  802190:	10803fcc 	andi	r2,r2,255
  802194:	1080201c 	xori	r2,r2,128
  802198:	10bfe004 	addi	r2,r2,-128
  80219c:	10800c18 	cmpnei	r2,r2,48
  8021a0:	10015226 	beq	r2,zero,8026ec <___vfprintf_internal_r+0xf1c>
  8021a4:	00800c04 	movi	r2,48
  8021a8:	297fff84 	addi	r5,r5,-2
  8021ac:	88bfffc5 	stb	r2,-1(r17)
  8021b0:	d8802704 	addi	r2,sp,156
  8021b4:	116bc83a 	sub	r21,r2,r5
  8021b8:	db000415 	stw	r12,16(sp)
  8021bc:	2823883a 	mov	r17,r5
  8021c0:	003f9a06 	br	80202c <___vfprintf_internal_r+0x85c>
  8021c4:	bac00007 	ldb	r11,0(r23)
  8021c8:	63002014 	ori	r12,r12,128
  8021cc:	003dcc06 	br	801900 <___vfprintf_internal_r+0x130>
  8021d0:	bf000007 	ldb	fp,0(r23)
  8021d4:	b8800044 	addi	r2,r23,1
  8021d8:	e0c00aa0 	cmpeqi	r3,fp,42
  8021dc:	1805b11e 	bne	r3,zero,8038a4 <___vfprintf_internal_r+0x20d4>
  8021e0:	e0fff404 	addi	r3,fp,-48
  8021e4:	198002b0 	cmpltui	r6,r3,10
  8021e8:	102f883a 	mov	r23,r2
  8021ec:	0011883a 	mov	r8,zero
  8021f0:	303dc526 	beq	r6,zero,801908 <___vfprintf_internal_r+0x138>
  8021f4:	400490ba 	slli	r2,r8,2
  8021f8:	bf000007 	ldb	fp,0(r23)
  8021fc:	bdc00044 	addi	r23,r23,1
  802200:	1211883a 	add	r8,r2,r8
  802204:	4211883a 	add	r8,r8,r8
  802208:	40d1883a 	add	r8,r8,r3
  80220c:	e0fff404 	addi	r3,fp,-48
  802210:	188002b0 	cmpltui	r2,r3,10
  802214:	103ff71e 	bne	r2,zero,8021f4 <___vfprintf_internal_r+0xa24>
  802218:	003dbb06 	br	801908 <___vfprintf_internal_r+0x138>
  80221c:	bf000003 	ldbu	fp,0(r23)
  802220:	e2c03fcc 	andi	r11,fp,255
  802224:	5ac0201c 	xori	r11,r11,128
  802228:	63000114 	ori	r12,r12,4
  80222c:	5affe004 	addi	r11,r11,-128
  802230:	003db306 	br	801900 <___vfprintf_internal_r+0x130>
  802234:	bac00007 	ldb	r11,0(r23)
  802238:	01000044 	movi	r4,1
  80223c:	01400ac4 	movi	r5,43
  802240:	003daf06 	br	801900 <___vfprintf_internal_r+0x130>
  802244:	d8800617 	ldw	r2,24(sp)
  802248:	bf000003 	ldbu	fp,0(r23)
  80224c:	14000017 	ldw	r16,0(r2)
  802250:	10800104 	addi	r2,r2,4
  802254:	80028c16 	blt	r16,zero,802c88 <___vfprintf_internal_r+0x14b8>
  802258:	d8800615 	stw	r2,24(sp)
  80225c:	e2c03fcc 	andi	r11,fp,255
  802260:	5ac0201c 	xori	r11,r11,128
  802264:	5affe004 	addi	r11,r11,-128
  802268:	003da506 	br	801900 <___vfprintf_internal_r+0x130>
  80226c:	bac00007 	ldb	r11,0(r23)
  802270:	63000054 	ori	r12,r12,1
  802274:	003da206 	br	801900 <___vfprintf_internal_r+0x130>
  802278:	28803fcc 	andi	r2,r5,255
  80227c:	1080201c 	xori	r2,r2,128
  802280:	10bfe004 	addi	r2,r2,-128
  802284:	bf000003 	ldbu	fp,0(r23)
  802288:	103ff41e 	bne	r2,zero,80225c <___vfprintf_internal_r+0xa8c>
  80228c:	e2c03fcc 	andi	r11,fp,255
  802290:	5ac0201c 	xori	r11,r11,128
  802294:	01000044 	movi	r4,1
  802298:	01400804 	movi	r5,32
  80229c:	5affe004 	addi	r11,r11,-128
  8022a0:	003d9706 	br	801900 <___vfprintf_internal_r+0x130>
  8022a4:	21003fcc 	andi	r4,r4,255
  8022a8:	20051e1e 	bne	r4,zero,803724 <___vfprintf_internal_r+0x1f54>
  8022ac:	00802074 	movhi	r2,129
  8022b0:	10819f04 	addi	r2,r2,1660
  8022b4:	d8800c15 	stw	r2,48(sp)
  8022b8:	6080080c 	andi	r2,r12,32
  8022bc:	103f791e 	bne	r2,zero,8020a4 <___vfprintf_internal_r+0x8d4>
  8022c0:	d9000617 	ldw	r4,24(sp)
  8022c4:	6080040c 	andi	r2,r12,16
  8022c8:	20c00104 	addi	r3,r4,4
  8022cc:	10025b1e 	bne	r2,zero,802c3c <___vfprintf_internal_r+0x146c>
  8022d0:	6080100c 	andi	r2,r12,64
  8022d4:	10046026 	beq	r2,zero,803458 <___vfprintf_internal_r+0x1c88>
  8022d8:	d8800617 	ldw	r2,24(sp)
  8022dc:	002b883a 	mov	r21,zero
  8022e0:	d8c00615 	stw	r3,24(sp)
  8022e4:	1500000b 	ldhu	r20,0(r2)
  8022e8:	003f7306 	br	8020b8 <___vfprintf_internal_r+0x8e8>
  8022ec:	d8800617 	ldw	r2,24(sp)
  8022f0:	d8001345 	stb	zero,77(sp)
  8022f4:	14400017 	ldw	r17,0(r2)
  8022f8:	10c00104 	addi	r3,r2,4
  8022fc:	88028e26 	beq	r17,zero,802d38 <___vfprintf_internal_r+0x1568>
  802300:	40bfffe0 	cmpeqi	r2,r8,-1
  802304:	1003c01e 	bne	r2,zero,803208 <___vfprintf_internal_r+0x1a38>
  802308:	400d883a 	mov	r6,r8
  80230c:	000b883a 	mov	r5,zero
  802310:	8809883a 	mov	r4,r17
  802314:	d8c00715 	stw	r3,28(sp)
  802318:	db000615 	stw	r12,24(sp)
  80231c:	da000415 	stw	r8,16(sp)
  802320:	08065900 	call	806590 <memchr>
  802324:	da000417 	ldw	r8,16(sp)
  802328:	db000617 	ldw	r12,24(sp)
  80232c:	d8c00717 	ldw	r3,28(sp)
  802330:	1004ec26 	beq	r2,zero,8036e4 <___vfprintf_internal_r+0x1f14>
  802334:	146bc83a 	sub	r21,r2,r17
  802338:	a829883a 	mov	r20,r21
  80233c:	d8c00615 	stw	r3,24(sp)
  802340:	003de806 	br	801ae4 <___vfprintf_internal_r+0x314>
  802344:	bac00007 	ldb	r11,0(r23)
  802348:	63000814 	ori	r12,r12,32
  80234c:	003d6c06 	br	801900 <___vfprintf_internal_r+0x130>
  802350:	d8c00617 	ldw	r3,24(sp)
  802354:	00800c04 	movi	r2,48
  802358:	d8801385 	stb	r2,78(sp)
  80235c:	00801e04 	movi	r2,120
  802360:	01002074 	movhi	r4,129
  802364:	d88013c5 	stb	r2,79(sp)
  802368:	18800104 	addi	r2,r3,4
  80236c:	d8800615 	stw	r2,24(sp)
  802370:	20819f04 	addi	r2,r4,1660
  802374:	d8800c15 	stw	r2,48(sp)
  802378:	1d000017 	ldw	r20,0(r3)
  80237c:	002b883a 	mov	r21,zero
  802380:	63000094 	ori	r12,r12,2
  802384:	00800084 	movi	r2,2
  802388:	07001e04 	movi	fp,120
  80238c:	003e5c06 	br	801d00 <___vfprintf_internal_r+0x530>
  802390:	21003fcc 	andi	r4,r4,255
  802394:	2004e71e 	bne	r4,zero,803734 <___vfprintf_internal_r+0x1f64>
  802398:	d9000617 	ldw	r4,24(sp)
  80239c:	6080080c 	andi	r2,r12,32
  8023a0:	20c00017 	ldw	r3,0(r4)
  8023a4:	21000104 	addi	r4,r4,4
  8023a8:	d9000615 	stw	r4,24(sp)
  8023ac:	10021e1e 	bne	r2,zero,802c28 <___vfprintf_internal_r+0x1458>
  8023b0:	6080040c 	andi	r2,r12,16
  8023b4:	1002ae1e 	bne	r2,zero,802e70 <___vfprintf_internal_r+0x16a0>
  8023b8:	6300100c 	andi	r12,r12,64
  8023bc:	6002ac26 	beq	r12,zero,802e70 <___vfprintf_internal_r+0x16a0>
  8023c0:	d8800517 	ldw	r2,20(sp)
  8023c4:	1880000d 	sth	r2,0(r3)
  8023c8:	003d3506 	br	8018a0 <___vfprintf_internal_r+0xd0>
  8023cc:	bac00007 	ldb	r11,0(r23)
  8023d0:	58801b18 	cmpnei	r2,r11,108
  8023d4:	10024926 	beq	r2,zero,802cfc <___vfprintf_internal_r+0x152c>
  8023d8:	63000414 	ori	r12,r12,16
  8023dc:	003d4806 	br	801900 <___vfprintf_internal_r+0x130>
  8023e0:	e2c01990 	cmplti	r11,fp,102
  8023e4:	5800cb1e 	bne	r11,zero,802714 <___vfprintf_internal_r+0xf44>
  8023e8:	d9000917 	ldw	r4,36(sp)
  8023ec:	d9400a17 	ldw	r5,40(sp)
  8023f0:	000d883a 	mov	r6,zero
  8023f4:	000f883a 	mov	r7,zero
  8023f8:	d8c00e15 	stw	r3,56(sp)
  8023fc:	080c3940 	call	80c394 <__eqdf2>
  802400:	d8c00e17 	ldw	r3,56(sp)
  802404:	1001641e 	bne	r2,zero,802998 <___vfprintf_internal_r+0x11c8>
  802408:	d8801b17 	ldw	r2,108(sp)
  80240c:	01002074 	movhi	r4,129
  802410:	2101ab04 	addi	r4,r4,1708
  802414:	10800044 	addi	r2,r2,1
  802418:	18c00044 	addi	r3,r3,1
  80241c:	b1000015 	stw	r4,0(r22)
  802420:	01000044 	movi	r4,1
  802424:	d8801b15 	stw	r2,108(sp)
  802428:	b1000115 	stw	r4,4(r22)
  80242c:	d8c01c15 	stw	r3,112(sp)
  802430:	10800208 	cmpgei	r2,r2,8
  802434:	1003621e 	bne	r2,zero,8031c0 <___vfprintf_internal_r+0x19f0>
  802438:	b5800204 	addi	r22,r22,8
  80243c:	d8801417 	ldw	r2,80(sp)
  802440:	d9000817 	ldw	r4,32(sp)
  802444:	1101e70e 	bge	r2,r4,802be4 <___vfprintf_internal_r+0x1414>
  802448:	d8800d17 	ldw	r2,52(sp)
  80244c:	d9000b17 	ldw	r4,44(sp)
  802450:	b0800015 	stw	r2,0(r22)
  802454:	d8801b17 	ldw	r2,108(sp)
  802458:	1907883a 	add	r3,r3,r4
  80245c:	b1000115 	stw	r4,4(r22)
  802460:	10800044 	addi	r2,r2,1
  802464:	d8801b15 	stw	r2,108(sp)
  802468:	d8c01c15 	stw	r3,112(sp)
  80246c:	10800208 	cmpgei	r2,r2,8
  802470:	1002291e 	bne	r2,zero,802d18 <___vfprintf_internal_r+0x1548>
  802474:	b5800204 	addi	r22,r22,8
  802478:	d8800817 	ldw	r2,32(sp)
  80247c:	157fffc4 	addi	r21,r2,-1
  802480:	057dd10e 	bge	zero,r21,801bc8 <___vfprintf_internal_r+0x3f8>
  802484:	01c02074 	movhi	r7,129
  802488:	a9000450 	cmplti	r4,r21,17
  80248c:	d8801b17 	ldw	r2,108(sp)
  802490:	39c1ac04 	addi	r7,r7,1712
  802494:	2003461e 	bne	r4,zero,8031b0 <___vfprintf_internal_r+0x19e0>
  802498:	07000404 	movi	fp,16
  80249c:	3823883a 	mov	r17,r7
  8024a0:	00000406 	br	8024b4 <___vfprintf_internal_r+0xce4>
  8024a4:	b5800204 	addi	r22,r22,8
  8024a8:	ad7ffc04 	addi	r21,r21,-16
  8024ac:	a9000448 	cmpgei	r4,r21,17
  8024b0:	20033e26 	beq	r4,zero,8031ac <___vfprintf_internal_r+0x19dc>
  8024b4:	10800044 	addi	r2,r2,1
  8024b8:	18c00404 	addi	r3,r3,16
  8024bc:	b4400015 	stw	r17,0(r22)
  8024c0:	b7000115 	stw	fp,4(r22)
  8024c4:	d8c01c15 	stw	r3,112(sp)
  8024c8:	d8801b15 	stw	r2,108(sp)
  8024cc:	11000208 	cmpgei	r4,r2,8
  8024d0:	203ff426 	beq	r4,zero,8024a4 <___vfprintf_internal_r+0xcd4>
  8024d4:	d9801a04 	addi	r6,sp,104
  8024d8:	900b883a 	mov	r5,r18
  8024dc:	9809883a 	mov	r4,r19
  8024e0:	08081380 	call	808138 <__sprint_r>
  8024e4:	103dc91e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  8024e8:	d8c01c17 	ldw	r3,112(sp)
  8024ec:	d8801b17 	ldw	r2,108(sp)
  8024f0:	dd802704 	addi	r22,sp,156
  8024f4:	003fec06 	br	8024a8 <___vfprintf_internal_r+0xcd8>
  8024f8:	8519c83a 	sub	r12,r16,r20
  8024fc:	033da30e 	bge	zero,r12,801b8c <___vfprintf_internal_r+0x3bc>
  802500:	01c02074 	movhi	r7,129
  802504:	61000450 	cmplti	r4,r12,17
  802508:	d8801b17 	ldw	r2,108(sp)
  80250c:	39c1ac04 	addi	r7,r7,1712
  802510:	2000281e 	bne	r4,zero,8025b4 <___vfprintf_internal_r+0xde4>
  802514:	dc400e15 	stw	r17,56(sp)
  802518:	dc000f15 	stw	r16,60(sp)
  80251c:	b009883a 	mov	r4,r22
  802520:	03400404 	movi	r13,16
  802524:	a02d883a 	mov	r22,r20
  802528:	6021883a 	mov	r16,r12
  80252c:	4029883a 	mov	r20,r8
  802530:	3823883a 	mov	r17,r7
  802534:	00000406 	br	802548 <___vfprintf_internal_r+0xd78>
  802538:	843ffc04 	addi	r16,r16,-16
  80253c:	81400448 	cmpgei	r5,r16,17
  802540:	21000204 	addi	r4,r4,8
  802544:	28001426 	beq	r5,zero,802598 <___vfprintf_internal_r+0xdc8>
  802548:	10800044 	addi	r2,r2,1
  80254c:	18c00404 	addi	r3,r3,16
  802550:	24400015 	stw	r17,0(r4)
  802554:	23400115 	stw	r13,4(r4)
  802558:	d8c01c15 	stw	r3,112(sp)
  80255c:	d8801b15 	stw	r2,108(sp)
  802560:	11400208 	cmpgei	r5,r2,8
  802564:	283ff426 	beq	r5,zero,802538 <___vfprintf_internal_r+0xd68>
  802568:	d9801a04 	addi	r6,sp,104
  80256c:	900b883a 	mov	r5,r18
  802570:	9809883a 	mov	r4,r19
  802574:	08081380 	call	808138 <__sprint_r>
  802578:	103da41e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  80257c:	843ffc04 	addi	r16,r16,-16
  802580:	81400448 	cmpgei	r5,r16,17
  802584:	d8c01c17 	ldw	r3,112(sp)
  802588:	d8801b17 	ldw	r2,108(sp)
  80258c:	d9002704 	addi	r4,sp,156
  802590:	03400404 	movi	r13,16
  802594:	283fec1e 	bne	r5,zero,802548 <___vfprintf_internal_r+0xd78>
  802598:	8019883a 	mov	r12,r16
  80259c:	880f883a 	mov	r7,r17
  8025a0:	dc000f17 	ldw	r16,60(sp)
  8025a4:	dc400e17 	ldw	r17,56(sp)
  8025a8:	a011883a 	mov	r8,r20
  8025ac:	b029883a 	mov	r20,r22
  8025b0:	202d883a 	mov	r22,r4
  8025b4:	10800044 	addi	r2,r2,1
  8025b8:	1b07883a 	add	r3,r3,r12
  8025bc:	d8801b15 	stw	r2,108(sp)
  8025c0:	b1c00015 	stw	r7,0(r22)
  8025c4:	b3000115 	stw	r12,4(r22)
  8025c8:	d8c01c15 	stw	r3,112(sp)
  8025cc:	10800208 	cmpgei	r2,r2,8
  8025d0:	1003031e 	bne	r2,zero,8031e0 <___vfprintf_internal_r+0x1a10>
  8025d4:	4551c83a 	sub	r8,r8,r21
  8025d8:	b5800204 	addi	r22,r22,8
  8025dc:	023d6d0e 	bge	zero,r8,801b94 <___vfprintf_internal_r+0x3c4>
  8025e0:	01c02074 	movhi	r7,129
  8025e4:	41000450 	cmplti	r4,r8,17
  8025e8:	d8801b17 	ldw	r2,108(sp)
  8025ec:	39c1ac04 	addi	r7,r7,1712
  8025f0:	2000221e 	bne	r4,zero,80267c <___vfprintf_internal_r+0xeac>
  8025f4:	dc400e15 	stw	r17,56(sp)
  8025f8:	dc000f15 	stw	r16,60(sp)
  8025fc:	03000404 	movi	r12,16
  802600:	4021883a 	mov	r16,r8
  802604:	3823883a 	mov	r17,r7
  802608:	00000406 	br	80261c <___vfprintf_internal_r+0xe4c>
  80260c:	843ffc04 	addi	r16,r16,-16
  802610:	81000448 	cmpgei	r4,r16,17
  802614:	b5800204 	addi	r22,r22,8
  802618:	20001426 	beq	r4,zero,80266c <___vfprintf_internal_r+0xe9c>
  80261c:	10800044 	addi	r2,r2,1
  802620:	18c00404 	addi	r3,r3,16
  802624:	b4400015 	stw	r17,0(r22)
  802628:	b3000115 	stw	r12,4(r22)
  80262c:	d8c01c15 	stw	r3,112(sp)
  802630:	d8801b15 	stw	r2,108(sp)
  802634:	11000208 	cmpgei	r4,r2,8
  802638:	203ff426 	beq	r4,zero,80260c <___vfprintf_internal_r+0xe3c>
  80263c:	d9801a04 	addi	r6,sp,104
  802640:	900b883a 	mov	r5,r18
  802644:	9809883a 	mov	r4,r19
  802648:	08081380 	call	808138 <__sprint_r>
  80264c:	103d6f1e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  802650:	843ffc04 	addi	r16,r16,-16
  802654:	81000448 	cmpgei	r4,r16,17
  802658:	d8c01c17 	ldw	r3,112(sp)
  80265c:	d8801b17 	ldw	r2,108(sp)
  802660:	dd802704 	addi	r22,sp,156
  802664:	03000404 	movi	r12,16
  802668:	203fec1e 	bne	r4,zero,80261c <___vfprintf_internal_r+0xe4c>
  80266c:	8011883a 	mov	r8,r16
  802670:	880f883a 	mov	r7,r17
  802674:	dc000f17 	ldw	r16,60(sp)
  802678:	dc400e17 	ldw	r17,56(sp)
  80267c:	10800044 	addi	r2,r2,1
  802680:	1a07883a 	add	r3,r3,r8
  802684:	d8801b15 	stw	r2,108(sp)
  802688:	b1c00015 	stw	r7,0(r22)
  80268c:	b2000115 	stw	r8,4(r22)
  802690:	d8c01c15 	stw	r3,112(sp)
  802694:	10800208 	cmpgei	r2,r2,8
  802698:	10014a1e 	bne	r2,zero,802bc4 <___vfprintf_internal_r+0x13f4>
  80269c:	b5800204 	addi	r22,r22,8
  8026a0:	003d3c06 	br	801b94 <___vfprintf_internal_r+0x3c4>
  8026a4:	10c00060 	cmpeqi	r3,r2,1
  8026a8:	1803bc1e 	bne	r3,zero,80359c <___vfprintf_internal_r+0x1dcc>
  8026ac:	108000a0 	cmpeqi	r2,r2,2
  8026b0:	db000417 	ldw	r12,16(sp)
  8026b4:	103ea826 	beq	r2,zero,802158 <___vfprintf_internal_r+0x988>
  8026b8:	d9000c17 	ldw	r4,48(sp)
  8026bc:	dc402704 	addi	r17,sp,156
  8026c0:	a08003cc 	andi	r2,r20,15
  8026c4:	a806973a 	slli	r3,r21,28
  8026c8:	a028d13a 	srli	r20,r20,4
  8026cc:	2085883a 	add	r2,r4,r2
  8026d0:	10800003 	ldbu	r2,0(r2)
  8026d4:	a82ad13a 	srli	r21,r21,4
  8026d8:	1d28b03a 	or	r20,r3,r20
  8026dc:	88bfffc5 	stb	r2,-1(r17)
  8026e0:	a544b03a 	or	r2,r20,r21
  8026e4:	8c7fffc4 	addi	r17,r17,-1
  8026e8:	103ff51e 	bne	r2,zero,8026c0 <___vfprintf_internal_r+0xef0>
  8026ec:	d8802704 	addi	r2,sp,156
  8026f0:	146bc83a 	sub	r21,r2,r17
  8026f4:	db000415 	stw	r12,16(sp)
  8026f8:	003e4c06 	br	80202c <___vfprintf_internal_r+0x85c>
  8026fc:	d9801a04 	addi	r6,sp,104
  802700:	900b883a 	mov	r5,r18
  802704:	9809883a 	mov	r4,r19
  802708:	08081380 	call	808138 <__sprint_r>
  80270c:	103d3926 	beq	r2,zero,801bf4 <___vfprintf_internal_r+0x424>
  802710:	003d3e06 	br	801c0c <___vfprintf_internal_r+0x43c>
  802714:	d8800817 	ldw	r2,32(sp)
  802718:	da001b17 	ldw	r8,108(sp)
  80271c:	18c00044 	addi	r3,r3,1
  802720:	10800088 	cmpgei	r2,r2,2
  802724:	45400044 	addi	r21,r8,1
  802728:	b7000204 	addi	fp,r22,8
  80272c:	1000f826 	beq	r2,zero,802b10 <___vfprintf_internal_r+0x1340>
  802730:	00800044 	movi	r2,1
  802734:	b0800115 	stw	r2,4(r22)
  802738:	b4400015 	stw	r17,0(r22)
  80273c:	d8c01c15 	stw	r3,112(sp)
  802740:	dd401b15 	stw	r21,108(sp)
  802744:	a8800210 	cmplti	r2,r21,8
  802748:	1001cc26 	beq	r2,zero,802e7c <___vfprintf_internal_r+0x16ac>
  80274c:	d8800b17 	ldw	r2,44(sp)
  802750:	d9000d17 	ldw	r4,52(sp)
  802754:	ad400044 	addi	r21,r21,1
  802758:	1887883a 	add	r3,r3,r2
  80275c:	e0800115 	stw	r2,4(fp)
  802760:	e1000015 	stw	r4,0(fp)
  802764:	d8c01c15 	stw	r3,112(sp)
  802768:	dd401b15 	stw	r21,108(sp)
  80276c:	a8800208 	cmpgei	r2,r21,8
  802770:	1001cb1e 	bne	r2,zero,802ea0 <___vfprintf_internal_r+0x16d0>
  802774:	e7000204 	addi	fp,fp,8
  802778:	d9000917 	ldw	r4,36(sp)
  80277c:	d9400a17 	ldw	r5,40(sp)
  802780:	aa000044 	addi	r8,r21,1
  802784:	000d883a 	mov	r6,zero
  802788:	000f883a 	mov	r7,zero
  80278c:	d8c00e15 	stw	r3,56(sp)
  802790:	da000715 	stw	r8,28(sp)
  802794:	080c3940 	call	80c394 <__eqdf2>
  802798:	d8c00817 	ldw	r3,32(sp)
  80279c:	da000717 	ldw	r8,28(sp)
  8027a0:	e5800204 	addi	r22,fp,8
  8027a4:	1affffc4 	addi	r11,r3,-1
  8027a8:	d8c00e17 	ldw	r3,56(sp)
  8027ac:	1000e526 	beq	r2,zero,802b44 <___vfprintf_internal_r+0x1374>
  8027b0:	8a400044 	addi	r9,r17,1
  8027b4:	1ac7883a 	add	r3,r3,r11
  8027b8:	da001b15 	stw	r8,108(sp)
  8027bc:	e2400015 	stw	r9,0(fp)
  8027c0:	e2c00115 	stw	r11,4(fp)
  8027c4:	d8c01c15 	stw	r3,112(sp)
  8027c8:	42000208 	cmpgei	r8,r8,8
  8027cc:	40013e1e 	bne	r8,zero,802cc8 <___vfprintf_internal_r+0x14f8>
  8027d0:	e0800404 	addi	r2,fp,16
  8027d4:	aa000084 	addi	r8,r21,2
  8027d8:	b039883a 	mov	fp,r22
  8027dc:	102d883a 	mov	r22,r2
  8027e0:	d9001017 	ldw	r4,64(sp)
  8027e4:	d8801644 	addi	r2,sp,89
  8027e8:	da001b15 	stw	r8,108(sp)
  8027ec:	20c7883a 	add	r3,r4,r3
  8027f0:	e0800015 	stw	r2,0(fp)
  8027f4:	e1000115 	stw	r4,4(fp)
  8027f8:	d8c01c15 	stw	r3,112(sp)
  8027fc:	42000210 	cmplti	r8,r8,8
  802800:	403cf11e 	bne	r8,zero,801bc8 <___vfprintf_internal_r+0x3f8>
  802804:	d9801a04 	addi	r6,sp,104
  802808:	900b883a 	mov	r5,r18
  80280c:	9809883a 	mov	r4,r19
  802810:	08081380 	call	808138 <__sprint_r>
  802814:	103cfd1e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  802818:	d8c01c17 	ldw	r3,112(sp)
  80281c:	dd802704 	addi	r22,sp,156
  802820:	003ce906 	br	801bc8 <___vfprintf_internal_r+0x3f8>
  802824:	db000417 	ldw	r12,16(sp)
  802828:	003e4706 	br	802148 <___vfprintf_internal_r+0x978>
  80282c:	03002074 	movhi	r12,129
  802830:	39000450 	cmplti	r4,r7,17
  802834:	d8801b17 	ldw	r2,108(sp)
  802838:	6301b004 	addi	r12,r12,1728
  80283c:	2000321e 	bne	r4,zero,802908 <___vfprintf_internal_r+0x1138>
  802840:	dc401115 	stw	r17,68(sp)
  802844:	b009883a 	mov	r4,r22
  802848:	9023883a 	mov	r17,r18
  80284c:	a82d883a 	mov	r22,r21
  802850:	ddc01215 	stw	r23,72(sp)
  802854:	03c00404 	movi	r15,16
  802858:	a02f883a 	mov	r23,r20
  80285c:	db800e15 	stw	r14,56(sp)
  802860:	8029883a 	mov	r20,r16
  802864:	db400f15 	stw	r13,60(sp)
  802868:	402b883a 	mov	r21,r8
  80286c:	3821883a 	mov	r16,r7
  802870:	6025883a 	mov	r18,r12
  802874:	00000406 	br	802888 <___vfprintf_internal_r+0x10b8>
  802878:	843ffc04 	addi	r16,r16,-16
  80287c:	81800448 	cmpgei	r6,r16,17
  802880:	21000204 	addi	r4,r4,8
  802884:	30001426 	beq	r6,zero,8028d8 <___vfprintf_internal_r+0x1108>
  802888:	10800044 	addi	r2,r2,1
  80288c:	18c00404 	addi	r3,r3,16
  802890:	24800015 	stw	r18,0(r4)
  802894:	23c00115 	stw	r15,4(r4)
  802898:	d8c01c15 	stw	r3,112(sp)
  80289c:	d8801b15 	stw	r2,108(sp)
  8028a0:	11800208 	cmpgei	r6,r2,8
  8028a4:	303ff426 	beq	r6,zero,802878 <___vfprintf_internal_r+0x10a8>
  8028a8:	d9801a04 	addi	r6,sp,104
  8028ac:	880b883a 	mov	r5,r17
  8028b0:	9809883a 	mov	r4,r19
  8028b4:	08081380 	call	808138 <__sprint_r>
  8028b8:	1001b91e 	bne	r2,zero,802fa0 <___vfprintf_internal_r+0x17d0>
  8028bc:	843ffc04 	addi	r16,r16,-16
  8028c0:	81800448 	cmpgei	r6,r16,17
  8028c4:	d8c01c17 	ldw	r3,112(sp)
  8028c8:	d8801b17 	ldw	r2,108(sp)
  8028cc:	d9002704 	addi	r4,sp,156
  8028d0:	03c00404 	movi	r15,16
  8028d4:	303fec1e 	bne	r6,zero,802888 <___vfprintf_internal_r+0x10b8>
  8028d8:	800f883a 	mov	r7,r16
  8028dc:	9019883a 	mov	r12,r18
  8028e0:	a021883a 	mov	r16,r20
  8028e4:	8825883a 	mov	r18,r17
  8028e8:	b829883a 	mov	r20,r23
  8028ec:	db800e17 	ldw	r14,56(sp)
  8028f0:	db400f17 	ldw	r13,60(sp)
  8028f4:	ddc01217 	ldw	r23,72(sp)
  8028f8:	dc401117 	ldw	r17,68(sp)
  8028fc:	a811883a 	mov	r8,r21
  802900:	b02b883a 	mov	r21,r22
  802904:	202d883a 	mov	r22,r4
  802908:	10800044 	addi	r2,r2,1
  80290c:	19c7883a 	add	r3,r3,r7
  802910:	d8801b15 	stw	r2,108(sp)
  802914:	b3000015 	stw	r12,0(r22)
  802918:	b1c00115 	stw	r7,4(r22)
  80291c:	d8c01c15 	stw	r3,112(sp)
  802920:	10800208 	cmpgei	r2,r2,8
  802924:	1001671e 	bne	r2,zero,802ec4 <___vfprintf_internal_r+0x16f4>
  802928:	b5800204 	addi	r22,r22,8
  80292c:	003c7a06 	br	801b18 <___vfprintf_internal_r+0x348>
  802930:	d9801a04 	addi	r6,sp,104
  802934:	900b883a 	mov	r5,r18
  802938:	9809883a 	mov	r4,r19
  80293c:	da001115 	stw	r8,68(sp)
  802940:	db400f15 	stw	r13,60(sp)
  802944:	db800e15 	stw	r14,56(sp)
  802948:	08081380 	call	808138 <__sprint_r>
  80294c:	103caf1e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  802950:	d8c01c17 	ldw	r3,112(sp)
  802954:	da001117 	ldw	r8,68(sp)
  802958:	db400f17 	ldw	r13,60(sp)
  80295c:	db800e17 	ldw	r14,56(sp)
  802960:	dd802704 	addi	r22,sp,156
  802964:	003c7a06 	br	801b50 <___vfprintf_internal_r+0x380>
  802968:	d9801a04 	addi	r6,sp,104
  80296c:	900b883a 	mov	r5,r18
  802970:	9809883a 	mov	r4,r19
  802974:	da000f15 	stw	r8,60(sp)
  802978:	db400e15 	stw	r13,56(sp)
  80297c:	08081380 	call	808138 <__sprint_r>
  802980:	103ca21e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  802984:	d8c01c17 	ldw	r3,112(sp)
  802988:	da000f17 	ldw	r8,60(sp)
  80298c:	db400e17 	ldw	r13,56(sp)
  802990:	dd802704 	addi	r22,sp,156
  802994:	003c7b06 	br	801b84 <___vfprintf_internal_r+0x3b4>
  802998:	d9401417 	ldw	r5,80(sp)
  80299c:	0141570e 	bge	zero,r5,802efc <___vfprintf_internal_r+0x172c>
  8029a0:	d8800717 	ldw	r2,28(sp)
  8029a4:	d9000817 	ldw	r4,32(sp)
  8029a8:	102b883a 	mov	r21,r2
  8029ac:	2080b916 	blt	r4,r2,802c94 <___vfprintf_internal_r+0x14c4>
  8029b0:	05400a0e 	bge	zero,r21,8029dc <___vfprintf_internal_r+0x120c>
  8029b4:	d8801b17 	ldw	r2,108(sp)
  8029b8:	1d47883a 	add	r3,r3,r21
  8029bc:	b4400015 	stw	r17,0(r22)
  8029c0:	10800044 	addi	r2,r2,1
  8029c4:	d8801b15 	stw	r2,108(sp)
  8029c8:	b5400115 	stw	r21,4(r22)
  8029cc:	d8c01c15 	stw	r3,112(sp)
  8029d0:	10800208 	cmpgei	r2,r2,8
  8029d4:	10032d1e 	bne	r2,zero,80368c <___vfprintf_internal_r+0x1ebc>
  8029d8:	b5800204 	addi	r22,r22,8
  8029dc:	a800c516 	blt	r21,zero,802cf4 <___vfprintf_internal_r+0x1524>
  8029e0:	d8800717 	ldw	r2,28(sp)
  8029e4:	156bc83a 	sub	r21,r2,r21
  8029e8:	0540db16 	blt	zero,r21,802d58 <___vfprintf_internal_r+0x1588>
  8029ec:	dd401417 	ldw	r21,80(sp)
  8029f0:	d8800817 	ldw	r2,32(sp)
  8029f4:	a880aa0e 	bge	r21,r2,802ca0 <___vfprintf_internal_r+0x14d0>
  8029f8:	d8800d17 	ldw	r2,52(sp)
  8029fc:	d9000b17 	ldw	r4,44(sp)
  802a00:	b0800015 	stw	r2,0(r22)
  802a04:	d8801b17 	ldw	r2,108(sp)
  802a08:	1907883a 	add	r3,r3,r4
  802a0c:	b1000115 	stw	r4,4(r22)
  802a10:	10800044 	addi	r2,r2,1
  802a14:	d8801b15 	stw	r2,108(sp)
  802a18:	d8c01c15 	stw	r3,112(sp)
  802a1c:	10800208 	cmpgei	r2,r2,8
  802a20:	1003111e 	bne	r2,zero,803668 <___vfprintf_internal_r+0x1e98>
  802a24:	b5800204 	addi	r22,r22,8
  802a28:	d9000817 	ldw	r4,32(sp)
  802a2c:	d9400717 	ldw	r5,28(sp)
  802a30:	2545c83a 	sub	r2,r4,r21
  802a34:	2149c83a 	sub	r4,r4,r5
  802a38:	102b883a 	mov	r21,r2
  802a3c:	2080010e 	bge	r4,r2,802a44 <___vfprintf_internal_r+0x1274>
  802a40:	202b883a 	mov	r21,r4
  802a44:	05400c0e 	bge	zero,r21,802a78 <___vfprintf_internal_r+0x12a8>
  802a48:	d9000717 	ldw	r4,28(sp)
  802a4c:	1d47883a 	add	r3,r3,r21
  802a50:	b5400115 	stw	r21,4(r22)
  802a54:	8913883a 	add	r9,r17,r4
  802a58:	d9001b17 	ldw	r4,108(sp)
  802a5c:	b2400015 	stw	r9,0(r22)
  802a60:	d8c01c15 	stw	r3,112(sp)
  802a64:	21000044 	addi	r4,r4,1
  802a68:	d9001b15 	stw	r4,108(sp)
  802a6c:	21000208 	cmpgei	r4,r4,8
  802a70:	2003111e 	bne	r4,zero,8036b8 <___vfprintf_internal_r+0x1ee8>
  802a74:	b5800204 	addi	r22,r22,8
  802a78:	a800010e 	bge	r21,zero,802a80 <___vfprintf_internal_r+0x12b0>
  802a7c:	002b883a 	mov	r21,zero
  802a80:	156bc83a 	sub	r21,r2,r21
  802a84:	057c500e 	bge	zero,r21,801bc8 <___vfprintf_internal_r+0x3f8>
  802a88:	01c02074 	movhi	r7,129
  802a8c:	a9000450 	cmplti	r4,r21,17
  802a90:	d8801b17 	ldw	r2,108(sp)
  802a94:	39c1ac04 	addi	r7,r7,1712
  802a98:	2001c51e 	bne	r4,zero,8031b0 <___vfprintf_internal_r+0x19e0>
  802a9c:	07000404 	movi	fp,16
  802aa0:	3823883a 	mov	r17,r7
  802aa4:	00000406 	br	802ab8 <___vfprintf_internal_r+0x12e8>
  802aa8:	b5800204 	addi	r22,r22,8
  802aac:	ad7ffc04 	addi	r21,r21,-16
  802ab0:	a9000448 	cmpgei	r4,r21,17
  802ab4:	2001bd26 	beq	r4,zero,8031ac <___vfprintf_internal_r+0x19dc>
  802ab8:	10800044 	addi	r2,r2,1
  802abc:	18c00404 	addi	r3,r3,16
  802ac0:	b4400015 	stw	r17,0(r22)
  802ac4:	b7000115 	stw	fp,4(r22)
  802ac8:	d8c01c15 	stw	r3,112(sp)
  802acc:	d8801b15 	stw	r2,108(sp)
  802ad0:	11000208 	cmpgei	r4,r2,8
  802ad4:	203ff426 	beq	r4,zero,802aa8 <___vfprintf_internal_r+0x12d8>
  802ad8:	d9801a04 	addi	r6,sp,104
  802adc:	900b883a 	mov	r5,r18
  802ae0:	9809883a 	mov	r4,r19
  802ae4:	08081380 	call	808138 <__sprint_r>
  802ae8:	103c481e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  802aec:	d8c01c17 	ldw	r3,112(sp)
  802af0:	d8801b17 	ldw	r2,108(sp)
  802af4:	dd802704 	addi	r22,sp,156
  802af8:	003fec06 	br	802aac <___vfprintf_internal_r+0x12dc>
  802afc:	4002a71e 	bne	r8,zero,80359c <___vfprintf_internal_r+0x1dcc>
  802b00:	0011883a 	mov	r8,zero
  802b04:	002b883a 	mov	r21,zero
  802b08:	dc402704 	addi	r17,sp,156
  802b0c:	003d4706 	br	80202c <___vfprintf_internal_r+0x85c>
  802b10:	d8800417 	ldw	r2,16(sp)
  802b14:	1080004c 	andi	r2,r2,1
  802b18:	103f051e 	bne	r2,zero,802730 <___vfprintf_internal_r+0xf60>
  802b1c:	00800044 	movi	r2,1
  802b20:	dd401b15 	stw	r21,108(sp)
  802b24:	b4400015 	stw	r17,0(r22)
  802b28:	b0800115 	stw	r2,4(r22)
  802b2c:	d8c01c15 	stw	r3,112(sp)
  802b30:	ad400208 	cmpgei	r21,r21,8
  802b34:	a800641e 	bne	r21,zero,802cc8 <___vfprintf_internal_r+0x14f8>
  802b38:	42000084 	addi	r8,r8,2
  802b3c:	b5800404 	addi	r22,r22,16
  802b40:	003f2706 	br	8027e0 <___vfprintf_internal_r+0x1010>
  802b44:	02ff260e 	bge	zero,r11,8027e0 <___vfprintf_internal_r+0x1010>
  802b48:	58800450 	cmplti	r2,r11,17
  802b4c:	01c02074 	movhi	r7,129
  802b50:	10034c1e 	bne	r2,zero,803884 <___vfprintf_internal_r+0x20b4>
  802b54:	39c1ac04 	addi	r7,r7,1712
  802b58:	dc000715 	stw	r16,28(sp)
  802b5c:	05800404 	movi	r22,16
  802b60:	5823883a 	mov	r17,r11
  802b64:	402b883a 	mov	r21,r8
  802b68:	3821883a 	mov	r16,r7
  802b6c:	00000506 	br	802b84 <___vfprintf_internal_r+0x13b4>
  802b70:	e7000204 	addi	fp,fp,8
  802b74:	8c7ffc04 	addi	r17,r17,-16
  802b78:	88800448 	cmpgei	r2,r17,17
  802b7c:	1001d626 	beq	r2,zero,8032d8 <___vfprintf_internal_r+0x1b08>
  802b80:	ad400044 	addi	r21,r21,1
  802b84:	18c00404 	addi	r3,r3,16
  802b88:	e4000015 	stw	r16,0(fp)
  802b8c:	e5800115 	stw	r22,4(fp)
  802b90:	d8c01c15 	stw	r3,112(sp)
  802b94:	dd401b15 	stw	r21,108(sp)
  802b98:	a8800208 	cmpgei	r2,r21,8
  802b9c:	103ff426 	beq	r2,zero,802b70 <___vfprintf_internal_r+0x13a0>
  802ba0:	d9801a04 	addi	r6,sp,104
  802ba4:	900b883a 	mov	r5,r18
  802ba8:	9809883a 	mov	r4,r19
  802bac:	08081380 	call	808138 <__sprint_r>
  802bb0:	103c161e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  802bb4:	dd401b17 	ldw	r21,108(sp)
  802bb8:	d8c01c17 	ldw	r3,112(sp)
  802bbc:	df002704 	addi	fp,sp,156
  802bc0:	003fec06 	br	802b74 <___vfprintf_internal_r+0x13a4>
  802bc4:	d9801a04 	addi	r6,sp,104
  802bc8:	900b883a 	mov	r5,r18
  802bcc:	9809883a 	mov	r4,r19
  802bd0:	08081380 	call	808138 <__sprint_r>
  802bd4:	103c0d1e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  802bd8:	d8c01c17 	ldw	r3,112(sp)
  802bdc:	dd802704 	addi	r22,sp,156
  802be0:	003bec06 	br	801b94 <___vfprintf_internal_r+0x3c4>
  802be4:	d8800417 	ldw	r2,16(sp)
  802be8:	1080004c 	andi	r2,r2,1
  802bec:	103bf626 	beq	r2,zero,801bc8 <___vfprintf_internal_r+0x3f8>
  802bf0:	003e1506 	br	802448 <___vfprintf_internal_r+0xc78>
  802bf4:	dc402704 	addi	r17,sp,156
  802bf8:	003d0c06 	br	80202c <___vfprintf_internal_r+0x85c>
  802bfc:	00800c04 	movi	r2,48
  802c00:	d8801385 	stb	r2,78(sp)
  802c04:	df0013c5 	stb	fp,79(sp)
  802c08:	63000094 	ori	r12,r12,2
  802c0c:	00800084 	movi	r2,2
  802c10:	003c3b06 	br	801d00 <___vfprintf_internal_r+0x530>
  802c14:	25000017 	ldw	r20,0(r4)
  802c18:	002b883a 	mov	r21,zero
  802c1c:	d8c00615 	stw	r3,24(sp)
  802c20:	00800044 	movi	r2,1
  802c24:	003c3606 	br	801d00 <___vfprintf_internal_r+0x530>
  802c28:	d9000517 	ldw	r4,20(sp)
  802c2c:	2005d7fa 	srai	r2,r4,31
  802c30:	19000015 	stw	r4,0(r3)
  802c34:	18800115 	stw	r2,4(r3)
  802c38:	003b1906 	br	8018a0 <___vfprintf_internal_r+0xd0>
  802c3c:	25000017 	ldw	r20,0(r4)
  802c40:	002b883a 	mov	r21,zero
  802c44:	d8c00615 	stw	r3,24(sp)
  802c48:	003d1b06 	br	8020b8 <___vfprintf_internal_r+0x8e8>
  802c4c:	25000017 	ldw	r20,0(r4)
  802c50:	002b883a 	mov	r21,zero
  802c54:	d8c00615 	stw	r3,24(sp)
  802c58:	0005883a 	mov	r2,zero
  802c5c:	003c2806 	br	801d00 <___vfprintf_internal_r+0x530>
  802c60:	18800017 	ldw	r2,0(r3)
  802c64:	d8800915 	stw	r2,36(sp)
  802c68:	18800117 	ldw	r2,4(r3)
  802c6c:	d8800a15 	stw	r2,40(sp)
  802c70:	003c5906 	br	801dd8 <___vfprintf_internal_r+0x608>
  802c74:	25000017 	ldw	r20,0(r4)
  802c78:	d8c00615 	stw	r3,24(sp)
  802c7c:	a02bd7fa 	srai	r21,r20,31
  802c80:	a805883a 	mov	r2,r21
  802c84:	003cd706 	br	801fe4 <___vfprintf_internal_r+0x814>
  802c88:	0421c83a 	sub	r16,zero,r16
  802c8c:	d8800615 	stw	r2,24(sp)
  802c90:	003d6306 	br	802220 <___vfprintf_internal_r+0xa50>
  802c94:	202b883a 	mov	r21,r4
  802c98:	057f4616 	blt	zero,r21,8029b4 <___vfprintf_internal_r+0x11e4>
  802c9c:	003f4f06 	br	8029dc <___vfprintf_internal_r+0x120c>
  802ca0:	d8800417 	ldw	r2,16(sp)
  802ca4:	1080004c 	andi	r2,r2,1
  802ca8:	103f531e 	bne	r2,zero,8029f8 <___vfprintf_internal_r+0x1228>
  802cac:	d9000817 	ldw	r4,32(sp)
  802cb0:	d9400717 	ldw	r5,28(sp)
  802cb4:	2545c83a 	sub	r2,r4,r21
  802cb8:	216bc83a 	sub	r21,r4,r5
  802cbc:	157f6e0e 	bge	r2,r21,802a78 <___vfprintf_internal_r+0x12a8>
  802cc0:	102b883a 	mov	r21,r2
  802cc4:	003f6c06 	br	802a78 <___vfprintf_internal_r+0x12a8>
  802cc8:	d9801a04 	addi	r6,sp,104
  802ccc:	900b883a 	mov	r5,r18
  802cd0:	9809883a 	mov	r4,r19
  802cd4:	08081380 	call	808138 <__sprint_r>
  802cd8:	103bcc1e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  802cdc:	da001b17 	ldw	r8,108(sp)
  802ce0:	d8c01c17 	ldw	r3,112(sp)
  802ce4:	dd802904 	addi	r22,sp,164
  802ce8:	42000044 	addi	r8,r8,1
  802cec:	df002704 	addi	fp,sp,156
  802cf0:	003ebb06 	br	8027e0 <___vfprintf_internal_r+0x1010>
  802cf4:	002b883a 	mov	r21,zero
  802cf8:	003f3906 	br	8029e0 <___vfprintf_internal_r+0x1210>
  802cfc:	bf000043 	ldbu	fp,1(r23)
  802d00:	63000814 	ori	r12,r12,32
  802d04:	bdc00044 	addi	r23,r23,1
  802d08:	e2c03fcc 	andi	r11,fp,255
  802d0c:	5ac0201c 	xori	r11,r11,128
  802d10:	5affe004 	addi	r11,r11,-128
  802d14:	003afa06 	br	801900 <___vfprintf_internal_r+0x130>
  802d18:	d9801a04 	addi	r6,sp,104
  802d1c:	900b883a 	mov	r5,r18
  802d20:	9809883a 	mov	r4,r19
  802d24:	08081380 	call	808138 <__sprint_r>
  802d28:	103bb81e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  802d2c:	d8c01c17 	ldw	r3,112(sp)
  802d30:	dd802704 	addi	r22,sp,156
  802d34:	003dd006 	br	802478 <___vfprintf_internal_r+0xca8>
  802d38:	408001f0 	cmpltui	r2,r8,7
  802d3c:	402b883a 	mov	r21,r8
  802d40:	1001e726 	beq	r2,zero,8034e0 <___vfprintf_internal_r+0x1d10>
  802d44:	04402074 	movhi	r17,129
  802d48:	a829883a 	mov	r20,r21
  802d4c:	d8c00615 	stw	r3,24(sp)
  802d50:	8c41a904 	addi	r17,r17,1700
  802d54:	003b6306 	br	801ae4 <___vfprintf_internal_r+0x314>
  802d58:	01c02074 	movhi	r7,129
  802d5c:	a9000450 	cmplti	r4,r21,17
  802d60:	d8801b17 	ldw	r2,108(sp)
  802d64:	39c1ac04 	addi	r7,r7,1712
  802d68:	2001c21e 	bne	r4,zero,803474 <___vfprintf_internal_r+0x1ca4>
  802d6c:	dc000e15 	stw	r16,56(sp)
  802d70:	07000404 	movi	fp,16
  802d74:	3821883a 	mov	r16,r7
  802d78:	00000406 	br	802d8c <___vfprintf_internal_r+0x15bc>
  802d7c:	b5800204 	addi	r22,r22,8
  802d80:	ad7ffc04 	addi	r21,r21,-16
  802d84:	a9000448 	cmpgei	r4,r21,17
  802d88:	2001b826 	beq	r4,zero,80346c <___vfprintf_internal_r+0x1c9c>
  802d8c:	10800044 	addi	r2,r2,1
  802d90:	18c00404 	addi	r3,r3,16
  802d94:	b4000015 	stw	r16,0(r22)
  802d98:	b7000115 	stw	fp,4(r22)
  802d9c:	d8c01c15 	stw	r3,112(sp)
  802da0:	d8801b15 	stw	r2,108(sp)
  802da4:	11000208 	cmpgei	r4,r2,8
  802da8:	203ff426 	beq	r4,zero,802d7c <___vfprintf_internal_r+0x15ac>
  802dac:	d9801a04 	addi	r6,sp,104
  802db0:	900b883a 	mov	r5,r18
  802db4:	9809883a 	mov	r4,r19
  802db8:	08081380 	call	808138 <__sprint_r>
  802dbc:	103b931e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  802dc0:	d8c01c17 	ldw	r3,112(sp)
  802dc4:	d8801b17 	ldw	r2,108(sp)
  802dc8:	dd802704 	addi	r22,sp,156
  802dcc:	003fec06 	br	802d80 <___vfprintf_internal_r+0x15b0>
  802dd0:	dc402704 	addi	r17,sp,156
  802dd4:	a805883a 	mov	r2,r21
  802dd8:	dc000715 	stw	r16,28(sp)
  802ddc:	902b883a 	mov	r21,r18
  802de0:	8821883a 	mov	r16,r17
  802de4:	db000415 	stw	r12,16(sp)
  802de8:	a023883a 	mov	r17,r20
  802dec:	da000e15 	stw	r8,56(sp)
  802df0:	9829883a 	mov	r20,r19
  802df4:	1025883a 	mov	r18,r2
  802df8:	6827883a 	mov	r19,r13
  802dfc:	8809883a 	mov	r4,r17
  802e00:	900b883a 	mov	r5,r18
  802e04:	01800284 	movi	r6,10
  802e08:	000f883a 	mov	r7,zero
  802e0c:	080a9d40 	call	80a9d4 <__umoddi3>
  802e10:	10800c04 	addi	r2,r2,48
  802e14:	8809883a 	mov	r4,r17
  802e18:	900b883a 	mov	r5,r18
  802e1c:	01800284 	movi	r6,10
  802e20:	000f883a 	mov	r7,zero
  802e24:	80bfffc5 	stb	r2,-1(r16)
  802e28:	080a3b40 	call	80a3b4 <__udivdi3>
  802e2c:	900d883a 	mov	r6,r18
  802e30:	880f883a 	mov	r7,r17
  802e34:	843fffc4 	addi	r16,r16,-1
  802e38:	1023883a 	mov	r17,r2
  802e3c:	1825883a 	mov	r18,r3
  802e40:	303fee1e 	bne	r6,zero,802dfc <___vfprintf_internal_r+0x162c>
  802e44:	39c002a8 	cmpgeui	r7,r7,10
  802e48:	383fec1e 	bne	r7,zero,802dfc <___vfprintf_internal_r+0x162c>
  802e4c:	8023883a 	mov	r17,r16
  802e50:	d8802704 	addi	r2,sp,156
  802e54:	981b883a 	mov	r13,r19
  802e58:	a825883a 	mov	r18,r21
  802e5c:	dc000717 	ldw	r16,28(sp)
  802e60:	da000e17 	ldw	r8,56(sp)
  802e64:	a027883a 	mov	r19,r20
  802e68:	146bc83a 	sub	r21,r2,r17
  802e6c:	003c6f06 	br	80202c <___vfprintf_internal_r+0x85c>
  802e70:	d8800517 	ldw	r2,20(sp)
  802e74:	18800015 	stw	r2,0(r3)
  802e78:	003a8906 	br	8018a0 <___vfprintf_internal_r+0xd0>
  802e7c:	d9801a04 	addi	r6,sp,104
  802e80:	900b883a 	mov	r5,r18
  802e84:	9809883a 	mov	r4,r19
  802e88:	08081380 	call	808138 <__sprint_r>
  802e8c:	103b5f1e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  802e90:	d8c01c17 	ldw	r3,112(sp)
  802e94:	dd401b17 	ldw	r21,108(sp)
  802e98:	df002704 	addi	fp,sp,156
  802e9c:	003e2b06 	br	80274c <___vfprintf_internal_r+0xf7c>
  802ea0:	d9801a04 	addi	r6,sp,104
  802ea4:	900b883a 	mov	r5,r18
  802ea8:	9809883a 	mov	r4,r19
  802eac:	08081380 	call	808138 <__sprint_r>
  802eb0:	103b561e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  802eb4:	d8c01c17 	ldw	r3,112(sp)
  802eb8:	dd401b17 	ldw	r21,108(sp)
  802ebc:	df002704 	addi	fp,sp,156
  802ec0:	003e2d06 	br	802778 <___vfprintf_internal_r+0xfa8>
  802ec4:	d9801a04 	addi	r6,sp,104
  802ec8:	900b883a 	mov	r5,r18
  802ecc:	9809883a 	mov	r4,r19
  802ed0:	da001115 	stw	r8,68(sp)
  802ed4:	db400f15 	stw	r13,60(sp)
  802ed8:	db800e15 	stw	r14,56(sp)
  802edc:	08081380 	call	808138 <__sprint_r>
  802ee0:	103b4a1e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  802ee4:	d8c01c17 	ldw	r3,112(sp)
  802ee8:	da001117 	ldw	r8,68(sp)
  802eec:	db400f17 	ldw	r13,60(sp)
  802ef0:	db800e17 	ldw	r14,56(sp)
  802ef4:	dd802704 	addi	r22,sp,156
  802ef8:	003b0706 	br	801b18 <___vfprintf_internal_r+0x348>
  802efc:	d8801b17 	ldw	r2,108(sp)
  802f00:	01002074 	movhi	r4,129
  802f04:	2101ab04 	addi	r4,r4,1708
  802f08:	10800044 	addi	r2,r2,1
  802f0c:	18c00044 	addi	r3,r3,1
  802f10:	b1000015 	stw	r4,0(r22)
  802f14:	01000044 	movi	r4,1
  802f18:	d8801b15 	stw	r2,108(sp)
  802f1c:	b1000115 	stw	r4,4(r22)
  802f20:	d8c01c15 	stw	r3,112(sp)
  802f24:	10800208 	cmpgei	r2,r2,8
  802f28:	1001641e 	bne	r2,zero,8034bc <___vfprintf_internal_r+0x1cec>
  802f2c:	b5800204 	addi	r22,r22,8
  802f30:	2800bd1e 	bne	r5,zero,803228 <___vfprintf_internal_r+0x1a58>
  802f34:	d8800417 	ldw	r2,16(sp)
  802f38:	d9000817 	ldw	r4,32(sp)
  802f3c:	1080004c 	andi	r2,r2,1
  802f40:	1104b03a 	or	r2,r2,r4
  802f44:	103b2026 	beq	r2,zero,801bc8 <___vfprintf_internal_r+0x3f8>
  802f48:	d8800d17 	ldw	r2,52(sp)
  802f4c:	d9000b17 	ldw	r4,44(sp)
  802f50:	b0800015 	stw	r2,0(r22)
  802f54:	d8801b17 	ldw	r2,108(sp)
  802f58:	20c7883a 	add	r3,r4,r3
  802f5c:	b1000115 	stw	r4,4(r22)
  802f60:	10800044 	addi	r2,r2,1
  802f64:	d8c01c15 	stw	r3,112(sp)
  802f68:	d8801b15 	stw	r2,108(sp)
  802f6c:	11000208 	cmpgei	r4,r2,8
  802f70:	2001771e 	bne	r4,zero,803550 <___vfprintf_internal_r+0x1d80>
  802f74:	b5800204 	addi	r22,r22,8
  802f78:	d9000817 	ldw	r4,32(sp)
  802f7c:	10800044 	addi	r2,r2,1
  802f80:	d8801b15 	stw	r2,108(sp)
  802f84:	20c7883a 	add	r3,r4,r3
  802f88:	b4400015 	stw	r17,0(r22)
  802f8c:	b1000115 	stw	r4,4(r22)
  802f90:	d8c01c15 	stw	r3,112(sp)
  802f94:	10800208 	cmpgei	r2,r2,8
  802f98:	103b0a26 	beq	r2,zero,801bc4 <___vfprintf_internal_r+0x3f4>
  802f9c:	003e1906 	br	802804 <___vfprintf_internal_r+0x1034>
  802fa0:	8825883a 	mov	r18,r17
  802fa4:	003b1906 	br	801c0c <___vfprintf_internal_r+0x43c>
  802fa8:	d9000917 	ldw	r4,36(sp)
  802fac:	d9400a17 	ldw	r5,40(sp)
  802fb0:	da000615 	stw	r8,24(sp)
  802fb4:	200d883a 	mov	r6,r4
  802fb8:	280f883a 	mov	r7,r5
  802fbc:	db000415 	stw	r12,16(sp)
  802fc0:	080d6440 	call	80d644 <__unorddf2>
  802fc4:	db000417 	ldw	r12,16(sp)
  802fc8:	da000617 	ldw	r8,24(sp)
  802fcc:	1002061e 	bne	r2,zero,8037e8 <___vfprintf_internal_r+0x2018>
  802fd0:	057ff7c4 	movi	r21,-33
  802fd4:	40bfffe0 	cmpeqi	r2,r8,-1
  802fd8:	e56a703a 	and	r21,fp,r21
  802fdc:	1001b41e 	bne	r2,zero,8036b0 <___vfprintf_internal_r+0x1ee0>
  802fe0:	a88011d8 	cmpnei	r2,r21,71
  802fe4:	10015726 	beq	r2,zero,803544 <___vfprintf_internal_r+0x1d74>
  802fe8:	60804014 	ori	r2,r12,256
  802fec:	d8800415 	stw	r2,16(sp)
  802ff0:	d8800a17 	ldw	r2,40(sp)
  802ff4:	10012d16 	blt	r2,zero,8034ac <___vfprintf_internal_r+0x1cdc>
  802ff8:	dd000a17 	ldw	r20,40(sp)
  802ffc:	d8000605 	stb	zero,24(sp)
  803000:	e08019a0 	cmpeqi	r2,fp,102
  803004:	d8800f15 	stw	r2,60(sp)
  803008:	1000d21e 	bne	r2,zero,803354 <___vfprintf_internal_r+0x1b84>
  80300c:	e08011a0 	cmpeqi	r2,fp,70
  803010:	1000d01e 	bne	r2,zero,803354 <___vfprintf_internal_r+0x1b84>
  803014:	a8801158 	cmpnei	r2,r21,69
  803018:	10016226 	beq	r2,zero,8035a4 <___vfprintf_internal_r+0x1dd4>
  80301c:	d8801804 	addi	r2,sp,96
  803020:	d8800315 	stw	r2,12(sp)
  803024:	d9400917 	ldw	r5,36(sp)
  803028:	d8801504 	addi	r2,sp,84
  80302c:	d8800215 	stw	r2,8(sp)
  803030:	d8801404 	addi	r2,sp,80
  803034:	da000015 	stw	r8,0(sp)
  803038:	9809883a 	mov	r4,r19
  80303c:	d8800115 	stw	r2,4(sp)
  803040:	01c00084 	movi	r7,2
  803044:	a00d883a 	mov	r6,r20
  803048:	db000815 	stw	r12,32(sp)
  80304c:	da000715 	stw	r8,28(sp)
  803050:	0803df00 	call	803df0 <_dtoa_r>
  803054:	da000717 	ldw	r8,28(sp)
  803058:	e10019d8 	cmpnei	r4,fp,103
  80305c:	db000817 	ldw	r12,32(sp)
  803060:	1023883a 	mov	r17,r2
  803064:	4007883a 	mov	r3,r8
  803068:	2001621e 	bne	r4,zero,8035f4 <___vfprintf_internal_r+0x1e24>
  80306c:	6080004c 	andi	r2,r12,1
  803070:	1001621e 	bne	r2,zero,8035fc <___vfprintf_internal_r+0x1e2c>
  803074:	d8801417 	ldw	r2,80(sp)
  803078:	ad4011e0 	cmpeqi	r21,r21,71
  80307c:	d8800715 	stw	r2,28(sp)
  803080:	d8801817 	ldw	r2,96(sp)
  803084:	1445c83a 	sub	r2,r2,r17
  803088:	d8800815 	stw	r2,32(sp)
  80308c:	a8000526 	beq	r21,zero,8030a4 <___vfprintf_internal_r+0x18d4>
  803090:	d8c00717 	ldw	r3,28(sp)
  803094:	18bfff50 	cmplti	r2,r3,-3
  803098:	1000011e 	bne	r2,zero,8030a0 <___vfprintf_internal_r+0x18d0>
  80309c:	40c1670e 	bge	r8,r3,80363c <___vfprintf_internal_r+0x1e6c>
  8030a0:	e73fff84 	addi	fp,fp,-2
  8030a4:	d8800717 	ldw	r2,28(sp)
  8030a8:	df001645 	stb	fp,89(sp)
  8030ac:	157fffc4 	addi	r21,r2,-1
  8030b0:	dd401415 	stw	r21,80(sp)
  8030b4:	a801d416 	blt	r21,zero,803808 <___vfprintf_internal_r+0x2038>
  8030b8:	00800ac4 	movi	r2,43
  8030bc:	d8801685 	stb	r2,90(sp)
  8030c0:	a8800290 	cmplti	r2,r21,10
  8030c4:	1001c11e 	bne	r2,zero,8037cc <___vfprintf_internal_r+0x1ffc>
  8030c8:	d98019c4 	addi	r6,sp,103
  8030cc:	9029883a 	mov	r20,r18
  8030d0:	dc400715 	stw	r17,28(sp)
  8030d4:	8025883a 	mov	r18,r16
  8030d8:	db000f15 	stw	r12,60(sp)
  8030dc:	3021883a 	mov	r16,r6
  8030e0:	a809883a 	mov	r4,r21
  8030e4:	01400284 	movi	r5,10
  8030e8:	080b0180 	call	80b018 <__modsi3>
  8030ec:	10800c04 	addi	r2,r2,48
  8030f0:	a809883a 	mov	r4,r21
  8030f4:	80bfffc5 	stb	r2,-1(r16)
  8030f8:	01400284 	movi	r5,10
  8030fc:	080af980 	call	80af98 <__divsi3>
  803100:	a9001908 	cmpgei	r4,r21,100
  803104:	8023883a 	mov	r17,r16
  803108:	102b883a 	mov	r21,r2
  80310c:	843fffc4 	addi	r16,r16,-1
  803110:	203ff31e 	bne	r4,zero,8030e0 <___vfprintf_internal_r+0x1910>
  803114:	800d883a 	mov	r6,r16
  803118:	11000c04 	addi	r4,r2,48
  80311c:	9021883a 	mov	r16,r18
  803120:	a025883a 	mov	r18,r20
  803124:	8829883a 	mov	r20,r17
  803128:	a0bfff84 	addi	r2,r20,-2
  80312c:	313fffc5 	stb	r4,-1(r6)
  803130:	d8c019c4 	addi	r3,sp,103
  803134:	db000f17 	ldw	r12,60(sp)
  803138:	dc400717 	ldw	r17,28(sp)
  80313c:	10c1d62e 	bgeu	r2,r3,803898 <___vfprintf_internal_r+0x20c8>
  803140:	d8c016c4 	addi	r3,sp,91
  803144:	00000106 	br	80314c <___vfprintf_internal_r+0x197c>
  803148:	11000003 	ldbu	r4,0(r2)
  80314c:	19000005 	stb	r4,0(r3)
  803150:	10800044 	addi	r2,r2,1
  803154:	d90019c4 	addi	r4,sp,103
  803158:	18c00044 	addi	r3,r3,1
  80315c:	113ffa1e 	bne	r2,r4,803148 <___vfprintf_internal_r+0x1978>
  803160:	d8801a44 	addi	r2,sp,105
  803164:	d8c016c4 	addi	r3,sp,91
  803168:	1505c83a 	sub	r2,r2,r20
  80316c:	1885883a 	add	r2,r3,r2
  803170:	d8c01644 	addi	r3,sp,89
  803174:	10c5c83a 	sub	r2,r2,r3
  803178:	d8801015 	stw	r2,64(sp)
  80317c:	d8c00817 	ldw	r3,32(sp)
  803180:	d9001017 	ldw	r4,64(sp)
  803184:	18800088 	cmpgei	r2,r3,2
  803188:	192b883a 	add	r21,r3,r4
  80318c:	1001aa26 	beq	r2,zero,803838 <___vfprintf_internal_r+0x2068>
  803190:	d8800b17 	ldw	r2,44(sp)
  803194:	a8ab883a 	add	r21,r21,r2
  803198:	a829883a 	mov	r20,r21
  80319c:	a800010e 	bge	r21,zero,8031a4 <___vfprintf_internal_r+0x19d4>
  8031a0:	0029883a 	mov	r20,zero
  8031a4:	d8000715 	stw	zero,28(sp)
  8031a8:	00009d06 	br	803420 <___vfprintf_internal_r+0x1c50>
  8031ac:	880f883a 	mov	r7,r17
  8031b0:	10800044 	addi	r2,r2,1
  8031b4:	1d47883a 	add	r3,r3,r21
  8031b8:	b1c00015 	stw	r7,0(r22)
  8031bc:	003a7c06 	br	801bb0 <___vfprintf_internal_r+0x3e0>
  8031c0:	d9801a04 	addi	r6,sp,104
  8031c4:	900b883a 	mov	r5,r18
  8031c8:	9809883a 	mov	r4,r19
  8031cc:	08081380 	call	808138 <__sprint_r>
  8031d0:	103a8e1e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  8031d4:	d8c01c17 	ldw	r3,112(sp)
  8031d8:	dd802704 	addi	r22,sp,156
  8031dc:	003c9706 	br	80243c <___vfprintf_internal_r+0xc6c>
  8031e0:	d9801a04 	addi	r6,sp,104
  8031e4:	900b883a 	mov	r5,r18
  8031e8:	9809883a 	mov	r4,r19
  8031ec:	da000e15 	stw	r8,56(sp)
  8031f0:	08081380 	call	808138 <__sprint_r>
  8031f4:	103a851e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  8031f8:	d8c01c17 	ldw	r3,112(sp)
  8031fc:	da000e17 	ldw	r8,56(sp)
  803200:	dd802704 	addi	r22,sp,156
  803204:	003a6106 	br	801b8c <___vfprintf_internal_r+0x3bc>
  803208:	8809883a 	mov	r4,r17
  80320c:	db000415 	stw	r12,16(sp)
  803210:	d8c00615 	stw	r3,24(sp)
  803214:	08017380 	call	801738 <strlen>
  803218:	db000417 	ldw	r12,16(sp)
  80321c:	102b883a 	mov	r21,r2
  803220:	1029883a 	mov	r20,r2
  803224:	003a2f06 	br	801ae4 <___vfprintf_internal_r+0x314>
  803228:	d8800d17 	ldw	r2,52(sp)
  80322c:	d9000b17 	ldw	r4,44(sp)
  803230:	b0800015 	stw	r2,0(r22)
  803234:	d8801b17 	ldw	r2,108(sp)
  803238:	20c7883a 	add	r3,r4,r3
  80323c:	b1000115 	stw	r4,4(r22)
  803240:	10800044 	addi	r2,r2,1
  803244:	d8c01c15 	stw	r3,112(sp)
  803248:	d8801b15 	stw	r2,108(sp)
  80324c:	11000208 	cmpgei	r4,r2,8
  803250:	2000bf1e 	bne	r4,zero,803550 <___vfprintf_internal_r+0x1d80>
  803254:	b5800204 	addi	r22,r22,8
  803258:	283f470e 	bge	r5,zero,802f78 <___vfprintf_internal_r+0x17a8>
  80325c:	01c02074 	movhi	r7,129
  803260:	293ffc08 	cmpgei	r4,r5,-16
  803264:	39c1ac04 	addi	r7,r7,1712
  803268:	0179c83a 	sub	fp,zero,r5
  80326c:	20013f1e 	bne	r4,zero,80376c <___vfprintf_internal_r+0x1f9c>
  803270:	dc000715 	stw	r16,28(sp)
  803274:	05400404 	movi	r21,16
  803278:	9021883a 	mov	r16,r18
  80327c:	3825883a 	mov	r18,r7
  803280:	00000406 	br	803294 <___vfprintf_internal_r+0x1ac4>
  803284:	b5800204 	addi	r22,r22,8
  803288:	e73ffc04 	addi	fp,fp,-16
  80328c:	e1800448 	cmpgei	r6,fp,17
  803290:	30013326 	beq	r6,zero,803760 <___vfprintf_internal_r+0x1f90>
  803294:	10800044 	addi	r2,r2,1
  803298:	18c00404 	addi	r3,r3,16
  80329c:	b4800015 	stw	r18,0(r22)
  8032a0:	b5400115 	stw	r21,4(r22)
  8032a4:	d8c01c15 	stw	r3,112(sp)
  8032a8:	d8801b15 	stw	r2,108(sp)
  8032ac:	11800208 	cmpgei	r6,r2,8
  8032b0:	303ff426 	beq	r6,zero,803284 <___vfprintf_internal_r+0x1ab4>
  8032b4:	d9801a04 	addi	r6,sp,104
  8032b8:	800b883a 	mov	r5,r16
  8032bc:	9809883a 	mov	r4,r19
  8032c0:	08081380 	call	808138 <__sprint_r>
  8032c4:	1001721e 	bne	r2,zero,803890 <___vfprintf_internal_r+0x20c0>
  8032c8:	d8c01c17 	ldw	r3,112(sp)
  8032cc:	d8801b17 	ldw	r2,108(sp)
  8032d0:	dd802704 	addi	r22,sp,156
  8032d4:	003fec06 	br	803288 <___vfprintf_internal_r+0x1ab8>
  8032d8:	800f883a 	mov	r7,r16
  8032dc:	dc000717 	ldw	r16,28(sp)
  8032e0:	8817883a 	mov	r11,r17
  8032e4:	aa000044 	addi	r8,r21,1
  8032e8:	e0800204 	addi	r2,fp,8
  8032ec:	1ac7883a 	add	r3,r3,r11
  8032f0:	e1c00015 	stw	r7,0(fp)
  8032f4:	e2c00115 	stw	r11,4(fp)
  8032f8:	d8c01c15 	stw	r3,112(sp)
  8032fc:	da001b15 	stw	r8,108(sp)
  803300:	41000208 	cmpgei	r4,r8,8
  803304:	203e701e 	bne	r4,zero,802cc8 <___vfprintf_internal_r+0x14f8>
  803308:	42000044 	addi	r8,r8,1
  80330c:	15800204 	addi	r22,r2,8
  803310:	1039883a 	mov	fp,r2
  803314:	003d3206 	br	8027e0 <___vfprintf_internal_r+0x1010>
  803318:	d8800617 	ldw	r2,24(sp)
  80331c:	d8c00615 	stw	r3,24(sp)
  803320:	15000017 	ldw	r20,0(r2)
  803324:	a02bd7fa 	srai	r21,r20,31
  803328:	a805883a 	mov	r2,r21
  80332c:	003b2d06 	br	801fe4 <___vfprintf_internal_r+0x814>
  803330:	d8800617 	ldw	r2,24(sp)
  803334:	002b883a 	mov	r21,zero
  803338:	d8c00615 	stw	r3,24(sp)
  80333c:	15000017 	ldw	r20,0(r2)
  803340:	0005883a 	mov	r2,zero
  803344:	003a6e06 	br	801d00 <___vfprintf_internal_r+0x530>
  803348:	04402074 	movhi	r17,129
  80334c:	8c419b04 	addi	r17,r17,1644
  803350:	003ac606 	br	801e6c <___vfprintf_internal_r+0x69c>
  803354:	d8801804 	addi	r2,sp,96
  803358:	d8800315 	stw	r2,12(sp)
  80335c:	d9400917 	ldw	r5,36(sp)
  803360:	d8801504 	addi	r2,sp,84
  803364:	d8800215 	stw	r2,8(sp)
  803368:	d8801404 	addi	r2,sp,80
  80336c:	da000015 	stw	r8,0(sp)
  803370:	d8800115 	stw	r2,4(sp)
  803374:	01c000c4 	movi	r7,3
  803378:	a00d883a 	mov	r6,r20
  80337c:	9809883a 	mov	r4,r19
  803380:	db000815 	stw	r12,32(sp)
  803384:	da000715 	stw	r8,28(sp)
  803388:	0803df00 	call	803df0 <_dtoa_r>
  80338c:	da000717 	ldw	r8,28(sp)
  803390:	1023883a 	mov	r17,r2
  803394:	db000817 	ldw	r12,32(sp)
  803398:	1207883a 	add	r3,r2,r8
  80339c:	88800007 	ldb	r2,0(r17)
  8033a0:	10800c20 	cmpeqi	r2,r2,48
  8033a4:	1000571e 	bne	r2,zero,803504 <___vfprintf_internal_r+0x1d34>
  8033a8:	d8801417 	ldw	r2,80(sp)
  8033ac:	1893883a 	add	r9,r3,r2
  8033b0:	d9000917 	ldw	r4,36(sp)
  8033b4:	000d883a 	mov	r6,zero
  8033b8:	000f883a 	mov	r7,zero
  8033bc:	a00b883a 	mov	r5,r20
  8033c0:	da401115 	stw	r9,68(sp)
  8033c4:	da000815 	stw	r8,32(sp)
  8033c8:	db000715 	stw	r12,28(sp)
  8033cc:	080c3940 	call	80c394 <__eqdf2>
  8033d0:	db000717 	ldw	r12,28(sp)
  8033d4:	da000817 	ldw	r8,32(sp)
  8033d8:	da401117 	ldw	r9,68(sp)
  8033dc:	1000891e 	bne	r2,zero,803604 <___vfprintf_internal_r+0x1e34>
  8033e0:	4805883a 	mov	r2,r9
  8033e4:	d8c01417 	ldw	r3,80(sp)
  8033e8:	1445c83a 	sub	r2,r2,r17
  8033ec:	ad4011d8 	cmpnei	r21,r21,71
  8033f0:	d8c00715 	stw	r3,28(sp)
  8033f4:	d8800815 	stw	r2,32(sp)
  8033f8:	a83f2526 	beq	r21,zero,803090 <___vfprintf_internal_r+0x18c0>
  8033fc:	d8800f17 	ldw	r2,60(sp)
  803400:	103f2826 	beq	r2,zero,8030a4 <___vfprintf_internal_r+0x18d4>
  803404:	d8c00717 	ldw	r3,28(sp)
  803408:	6080004c 	andi	r2,r12,1
  80340c:	1204b03a 	or	r2,r2,r8
  803410:	00c1140e 	bge	zero,r3,803864 <___vfprintf_internal_r+0x2094>
  803414:	1001011e 	bne	r2,zero,80381c <___vfprintf_internal_r+0x204c>
  803418:	dd400717 	ldw	r21,28(sp)
  80341c:	a829883a 	mov	r20,r21
  803420:	d8800607 	ldb	r2,24(sp)
  803424:	10008026 	beq	r2,zero,803628 <___vfprintf_internal_r+0x1e58>
  803428:	00800b44 	movi	r2,45
  80342c:	d8801345 	stb	r2,77(sp)
  803430:	d8800e17 	ldw	r2,56(sp)
  803434:	0011883a 	mov	r8,zero
  803438:	d8800615 	stw	r2,24(sp)
  80343c:	003b0306 	br	80204c <___vfprintf_internal_r+0x87c>
  803440:	d8800617 	ldw	r2,24(sp)
  803444:	002b883a 	mov	r21,zero
  803448:	d8c00615 	stw	r3,24(sp)
  80344c:	15000017 	ldw	r20,0(r2)
  803450:	00800044 	movi	r2,1
  803454:	003a2a06 	br	801d00 <___vfprintf_internal_r+0x530>
  803458:	d8800617 	ldw	r2,24(sp)
  80345c:	002b883a 	mov	r21,zero
  803460:	d8c00615 	stw	r3,24(sp)
  803464:	15000017 	ldw	r20,0(r2)
  803468:	003b1306 	br	8020b8 <___vfprintf_internal_r+0x8e8>
  80346c:	800f883a 	mov	r7,r16
  803470:	dc000e17 	ldw	r16,56(sp)
  803474:	10800044 	addi	r2,r2,1
  803478:	1d47883a 	add	r3,r3,r21
  80347c:	d8801b15 	stw	r2,108(sp)
  803480:	b1c00015 	stw	r7,0(r22)
  803484:	b5400115 	stw	r21,4(r22)
  803488:	d8c01c15 	stw	r3,112(sp)
  80348c:	10800208 	cmpgei	r2,r2,8
  803490:	10003a1e 	bne	r2,zero,80357c <___vfprintf_internal_r+0x1dac>
  803494:	b5800204 	addi	r22,r22,8
  803498:	003d5406 	br	8029ec <___vfprintf_internal_r+0x121c>
  80349c:	00800b44 	movi	r2,45
  8034a0:	d8801345 	stb	r2,77(sp)
  8034a4:	03400b44 	movi	r13,45
  8034a8:	003a6c06 	br	801e5c <___vfprintf_internal_r+0x68c>
  8034ac:	1520003c 	xorhi	r20,r2,32768
  8034b0:	00800b44 	movi	r2,45
  8034b4:	d8800605 	stb	r2,24(sp)
  8034b8:	003ed106 	br	803000 <___vfprintf_internal_r+0x1830>
  8034bc:	d9801a04 	addi	r6,sp,104
  8034c0:	900b883a 	mov	r5,r18
  8034c4:	9809883a 	mov	r4,r19
  8034c8:	08081380 	call	808138 <__sprint_r>
  8034cc:	1039cf1e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  8034d0:	d9401417 	ldw	r5,80(sp)
  8034d4:	d8c01c17 	ldw	r3,112(sp)
  8034d8:	dd802704 	addi	r22,sp,156
  8034dc:	003e9406 	br	802f30 <___vfprintf_internal_r+0x1760>
  8034e0:	05400184 	movi	r21,6
  8034e4:	003e1706 	br	802d44 <___vfprintf_internal_r+0x1574>
  8034e8:	d9401345 	stb	r5,77(sp)
  8034ec:	00397706 	br	801acc <___vfprintf_internal_r+0x2fc>
  8034f0:	d9801a04 	addi	r6,sp,104
  8034f4:	900b883a 	mov	r5,r18
  8034f8:	9809883a 	mov	r4,r19
  8034fc:	08081380 	call	808138 <__sprint_r>
  803500:	0039c206 	br	801c0c <___vfprintf_internal_r+0x43c>
  803504:	d9000917 	ldw	r4,36(sp)
  803508:	000d883a 	mov	r6,zero
  80350c:	000f883a 	mov	r7,zero
  803510:	a00b883a 	mov	r5,r20
  803514:	d8c01115 	stw	r3,68(sp)
  803518:	da000815 	stw	r8,32(sp)
  80351c:	db000715 	stw	r12,28(sp)
  803520:	080c3940 	call	80c394 <__eqdf2>
  803524:	db000717 	ldw	r12,28(sp)
  803528:	da000817 	ldw	r8,32(sp)
  80352c:	d8c01117 	ldw	r3,68(sp)
  803530:	103f9d26 	beq	r2,zero,8033a8 <___vfprintf_internal_r+0x1bd8>
  803534:	00800044 	movi	r2,1
  803538:	1205c83a 	sub	r2,r2,r8
  80353c:	d8801415 	stw	r2,80(sp)
  803540:	003f9a06 	br	8033ac <___vfprintf_internal_r+0x1bdc>
  803544:	403ea81e 	bne	r8,zero,802fe8 <___vfprintf_internal_r+0x1818>
  803548:	02000044 	movi	r8,1
  80354c:	003ea606 	br	802fe8 <___vfprintf_internal_r+0x1818>
  803550:	d9801a04 	addi	r6,sp,104
  803554:	900b883a 	mov	r5,r18
  803558:	9809883a 	mov	r4,r19
  80355c:	08081380 	call	808138 <__sprint_r>
  803560:	1039aa1e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  803564:	d9401417 	ldw	r5,80(sp)
  803568:	d8c01c17 	ldw	r3,112(sp)
  80356c:	d8801b17 	ldw	r2,108(sp)
  803570:	dd802704 	addi	r22,sp,156
  803574:	283e800e 	bge	r5,zero,802f78 <___vfprintf_internal_r+0x17a8>
  803578:	003f3806 	br	80325c <___vfprintf_internal_r+0x1a8c>
  80357c:	d9801a04 	addi	r6,sp,104
  803580:	900b883a 	mov	r5,r18
  803584:	9809883a 	mov	r4,r19
  803588:	08081380 	call	808138 <__sprint_r>
  80358c:	10399f1e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  803590:	d8c01c17 	ldw	r3,112(sp)
  803594:	dd802704 	addi	r22,sp,156
  803598:	003d1406 	br	8029ec <___vfprintf_internal_r+0x121c>
  80359c:	db000417 	ldw	r12,16(sp)
  8035a0:	003a9d06 	br	802018 <___vfprintf_internal_r+0x848>
  8035a4:	d8801804 	addi	r2,sp,96
  8035a8:	d8800315 	stw	r2,12(sp)
  8035ac:	d9400917 	ldw	r5,36(sp)
  8035b0:	d8801504 	addi	r2,sp,84
  8035b4:	40c00044 	addi	r3,r8,1
  8035b8:	d8800215 	stw	r2,8(sp)
  8035bc:	d8801404 	addi	r2,sp,80
  8035c0:	d8c00015 	stw	r3,0(sp)
  8035c4:	d8800115 	stw	r2,4(sp)
  8035c8:	01c00084 	movi	r7,2
  8035cc:	a00d883a 	mov	r6,r20
  8035d0:	9809883a 	mov	r4,r19
  8035d4:	db001115 	stw	r12,68(sp)
  8035d8:	da000815 	stw	r8,32(sp)
  8035dc:	d8c00715 	stw	r3,28(sp)
  8035e0:	0803df00 	call	803df0 <_dtoa_r>
  8035e4:	d8c00717 	ldw	r3,28(sp)
  8035e8:	da000817 	ldw	r8,32(sp)
  8035ec:	db001117 	ldw	r12,68(sp)
  8035f0:	1023883a 	mov	r17,r2
  8035f4:	e08011d8 	cmpnei	r2,fp,71
  8035f8:	103e9c26 	beq	r2,zero,80306c <___vfprintf_internal_r+0x189c>
  8035fc:	88d3883a 	add	r9,r17,r3
  803600:	003f6b06 	br	8033b0 <___vfprintf_internal_r+0x1be0>
  803604:	d8801817 	ldw	r2,96(sp)
  803608:	127f762e 	bgeu	r2,r9,8033e4 <___vfprintf_internal_r+0x1c14>
  80360c:	01000c04 	movi	r4,48
  803610:	10c00044 	addi	r3,r2,1
  803614:	d8c01815 	stw	r3,96(sp)
  803618:	11000005 	stb	r4,0(r2)
  80361c:	d8801817 	ldw	r2,96(sp)
  803620:	127ffb36 	bltu	r2,r9,803610 <___vfprintf_internal_r+0x1e40>
  803624:	003f6f06 	br	8033e4 <___vfprintf_internal_r+0x1c14>
  803628:	d8800e17 	ldw	r2,56(sp)
  80362c:	db401343 	ldbu	r13,77(sp)
  803630:	0011883a 	mov	r8,zero
  803634:	d8800615 	stw	r2,24(sp)
  803638:	003a8006 	br	80203c <___vfprintf_internal_r+0x86c>
  80363c:	d8800717 	ldw	r2,28(sp)
  803640:	d8c00817 	ldw	r3,32(sp)
  803644:	10c02b16 	blt	r2,r3,8036f4 <___vfprintf_internal_r+0x1f24>
  803648:	6300004c 	andi	r12,r12,1
  80364c:	6000581e 	bne	r12,zero,8037b0 <___vfprintf_internal_r+0x1fe0>
  803650:	1029883a 	mov	r20,r2
  803654:	1000010e 	bge	r2,zero,80365c <___vfprintf_internal_r+0x1e8c>
  803658:	0029883a 	mov	r20,zero
  80365c:	dd400717 	ldw	r21,28(sp)
  803660:	070019c4 	movi	fp,103
  803664:	003f6e06 	br	803420 <___vfprintf_internal_r+0x1c50>
  803668:	d9801a04 	addi	r6,sp,104
  80366c:	900b883a 	mov	r5,r18
  803670:	9809883a 	mov	r4,r19
  803674:	08081380 	call	808138 <__sprint_r>
  803678:	1039641e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  80367c:	dd401417 	ldw	r21,80(sp)
  803680:	d8c01c17 	ldw	r3,112(sp)
  803684:	dd802704 	addi	r22,sp,156
  803688:	003ce706 	br	802a28 <___vfprintf_internal_r+0x1258>
  80368c:	d9801a04 	addi	r6,sp,104
  803690:	900b883a 	mov	r5,r18
  803694:	9809883a 	mov	r4,r19
  803698:	08081380 	call	808138 <__sprint_r>
  80369c:	10395b1e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  8036a0:	d8c01c17 	ldw	r3,112(sp)
  8036a4:	dd802704 	addi	r22,sp,156
  8036a8:	a83ccd0e 	bge	r21,zero,8029e0 <___vfprintf_internal_r+0x1210>
  8036ac:	003d9106 	br	802cf4 <___vfprintf_internal_r+0x1524>
  8036b0:	02000184 	movi	r8,6
  8036b4:	003e4c06 	br	802fe8 <___vfprintf_internal_r+0x1818>
  8036b8:	d9801a04 	addi	r6,sp,104
  8036bc:	900b883a 	mov	r5,r18
  8036c0:	9809883a 	mov	r4,r19
  8036c4:	08081380 	call	808138 <__sprint_r>
  8036c8:	1039501e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  8036cc:	d8801417 	ldw	r2,80(sp)
  8036d0:	d9000817 	ldw	r4,32(sp)
  8036d4:	d8c01c17 	ldw	r3,112(sp)
  8036d8:	dd802704 	addi	r22,sp,156
  8036dc:	2085c83a 	sub	r2,r4,r2
  8036e0:	003ce506 	br	802a78 <___vfprintf_internal_r+0x12a8>
  8036e4:	4029883a 	mov	r20,r8
  8036e8:	d8c00615 	stw	r3,24(sp)
  8036ec:	402b883a 	mov	r21,r8
  8036f0:	0038fc06 	br	801ae4 <___vfprintf_internal_r+0x314>
  8036f4:	d8800817 	ldw	r2,32(sp)
  8036f8:	d8c00b17 	ldw	r3,44(sp)
  8036fc:	10eb883a 	add	r21,r2,r3
  803700:	d8800717 	ldw	r2,28(sp)
  803704:	00800316 	blt	zero,r2,803714 <___vfprintf_internal_r+0x1f44>
  803708:	d8800717 	ldw	r2,28(sp)
  80370c:	a8abc83a 	sub	r21,r21,r2
  803710:	ad400044 	addi	r21,r21,1
  803714:	a829883a 	mov	r20,r21
  803718:	a8002a16 	blt	r21,zero,8037c4 <___vfprintf_internal_r+0x1ff4>
  80371c:	070019c4 	movi	fp,103
  803720:	003f3f06 	br	803420 <___vfprintf_internal_r+0x1c50>
  803724:	d9401345 	stb	r5,77(sp)
  803728:	003ae006 	br	8022ac <___vfprintf_internal_r+0xadc>
  80372c:	d9401345 	stb	r5,77(sp)
  803730:	003a5706 	br	802090 <___vfprintf_internal_r+0x8c0>
  803734:	d9401345 	stb	r5,77(sp)
  803738:	003b1706 	br	802398 <___vfprintf_internal_r+0xbc8>
  80373c:	d9401345 	stb	r5,77(sp)
  803740:	003a2006 	br	801fc4 <___vfprintf_internal_r+0x7f4>
  803744:	d9401345 	stb	r5,77(sp)
  803748:	003a6606 	br	8020e4 <___vfprintf_internal_r+0x914>
  80374c:	d9401345 	stb	r5,77(sp)
  803750:	00399706 	br	801db0 <___vfprintf_internal_r+0x5e0>
  803754:	00bfffc4 	movi	r2,-1
  803758:	d8800515 	stw	r2,20(sp)
  80375c:	00392e06 	br	801c18 <___vfprintf_internal_r+0x448>
  803760:	900f883a 	mov	r7,r18
  803764:	8025883a 	mov	r18,r16
  803768:	dc000717 	ldw	r16,28(sp)
  80376c:	10800044 	addi	r2,r2,1
  803770:	1f07883a 	add	r3,r3,fp
  803774:	b1c00015 	stw	r7,0(r22)
  803778:	b7000115 	stw	fp,4(r22)
  80377c:	d8c01c15 	stw	r3,112(sp)
  803780:	d8801b15 	stw	r2,108(sp)
  803784:	11000208 	cmpgei	r4,r2,8
  803788:	203dfa26 	beq	r4,zero,802f74 <___vfprintf_internal_r+0x17a4>
  80378c:	d9801a04 	addi	r6,sp,104
  803790:	900b883a 	mov	r5,r18
  803794:	9809883a 	mov	r4,r19
  803798:	08081380 	call	808138 <__sprint_r>
  80379c:	10391b1e 	bne	r2,zero,801c0c <___vfprintf_internal_r+0x43c>
  8037a0:	d8c01c17 	ldw	r3,112(sp)
  8037a4:	d8801b17 	ldw	r2,108(sp)
  8037a8:	dd802704 	addi	r22,sp,156
  8037ac:	003df206 	br	802f78 <___vfprintf_internal_r+0x17a8>
  8037b0:	d8800717 	ldw	r2,28(sp)
  8037b4:	d8c00b17 	ldw	r3,44(sp)
  8037b8:	10eb883a 	add	r21,r2,r3
  8037bc:	a829883a 	mov	r20,r21
  8037c0:	a83fd60e 	bge	r21,zero,80371c <___vfprintf_internal_r+0x1f4c>
  8037c4:	0029883a 	mov	r20,zero
  8037c8:	003fd406 	br	80371c <___vfprintf_internal_r+0x1f4c>
  8037cc:	00800c04 	movi	r2,48
  8037d0:	ad400c04 	addi	r21,r21,48
  8037d4:	d88016c5 	stb	r2,91(sp)
  8037d8:	00800104 	movi	r2,4
  8037dc:	dd401705 	stb	r21,92(sp)
  8037e0:	d8801015 	stw	r2,64(sp)
  8037e4:	003e6506 	br	80317c <___vfprintf_internal_r+0x19ac>
  8037e8:	d8800a17 	ldw	r2,40(sp)
  8037ec:	10001916 	blt	r2,zero,803854 <___vfprintf_internal_r+0x2084>
  8037f0:	db401343 	ldbu	r13,77(sp)
  8037f4:	e0801210 	cmplti	r2,fp,72
  8037f8:	1000131e 	bne	r2,zero,803848 <___vfprintf_internal_r+0x2078>
  8037fc:	04402074 	movhi	r17,129
  803800:	8c419e04 	addi	r17,r17,1656
  803804:	00399906 	br	801e6c <___vfprintf_internal_r+0x69c>
  803808:	05400044 	movi	r21,1
  80380c:	a8abc83a 	sub	r21,r21,r2
  803810:	00800b44 	movi	r2,45
  803814:	d8801685 	stb	r2,90(sp)
  803818:	003e2906 	br	8030c0 <___vfprintf_internal_r+0x18f0>
  80381c:	d8800b17 	ldw	r2,44(sp)
  803820:	18ab883a 	add	r21,r3,r2
  803824:	aa2b883a 	add	r21,r21,r8
  803828:	a829883a 	mov	r20,r21
  80382c:	a83efc0e 	bge	r21,zero,803420 <___vfprintf_internal_r+0x1c50>
  803830:	0029883a 	mov	r20,zero
  803834:	003efa06 	br	803420 <___vfprintf_internal_r+0x1c50>
  803838:	6080004c 	andi	r2,r12,1
  80383c:	d8800715 	stw	r2,28(sp)
  803840:	103e531e 	bne	r2,zero,803190 <___vfprintf_internal_r+0x19c0>
  803844:	003ff806 	br	803828 <___vfprintf_internal_r+0x2058>
  803848:	04402074 	movhi	r17,129
  80384c:	8c419d04 	addi	r17,r17,1652
  803850:	00398606 	br	801e6c <___vfprintf_internal_r+0x69c>
  803854:	00800b44 	movi	r2,45
  803858:	d8801345 	stb	r2,77(sp)
  80385c:	03400b44 	movi	r13,45
  803860:	003fe406 	br	8037f4 <___vfprintf_internal_r+0x2024>
  803864:	1000031e 	bne	r2,zero,803874 <___vfprintf_internal_r+0x20a4>
  803868:	05000044 	movi	r20,1
  80386c:	05400044 	movi	r21,1
  803870:	003eeb06 	br	803420 <___vfprintf_internal_r+0x1c50>
  803874:	d8800b17 	ldw	r2,44(sp)
  803878:	15400044 	addi	r21,r2,1
  80387c:	aa2b883a 	add	r21,r21,r8
  803880:	003fe906 	br	803828 <___vfprintf_internal_r+0x2058>
  803884:	b005883a 	mov	r2,r22
  803888:	39c1ac04 	addi	r7,r7,1712
  80388c:	003e9706 	br	8032ec <___vfprintf_internal_r+0x1b1c>
  803890:	8025883a 	mov	r18,r16
  803894:	0038dd06 	br	801c0c <___vfprintf_internal_r+0x43c>
  803898:	00800084 	movi	r2,2
  80389c:	d8801015 	stw	r2,64(sp)
  8038a0:	003e3606 	br	80317c <___vfprintf_internal_r+0x19ac>
  8038a4:	d8c00617 	ldw	r3,24(sp)
  8038a8:	1a000017 	ldw	r8,0(r3)
  8038ac:	18c00104 	addi	r3,r3,4
  8038b0:	4000010e 	bge	r8,zero,8038b8 <___vfprintf_internal_r+0x20e8>
  8038b4:	023fffc4 	movi	r8,-1
  8038b8:	bf000043 	ldbu	fp,1(r23)
  8038bc:	d8c00615 	stw	r3,24(sp)
  8038c0:	102f883a 	mov	r23,r2
  8038c4:	e2c03fcc 	andi	r11,fp,255
  8038c8:	5ac0201c 	xori	r11,r11,128
  8038cc:	5affe004 	addi	r11,r11,-128
  8038d0:	00380b06 	br	801900 <___vfprintf_internal_r+0x130>

008038d4 <__vfprintf_internal>:
  8038d4:	00c02074 	movhi	r3,129
  8038d8:	2005883a 	mov	r2,r4
  8038dc:	190a2c17 	ldw	r4,10416(r3)
  8038e0:	300f883a 	mov	r7,r6
  8038e4:	280d883a 	mov	r6,r5
  8038e8:	100b883a 	mov	r5,r2
  8038ec:	08017d01 	jmpi	8017d0 <___vfprintf_internal_r>

008038f0 <__sbprintf>:
  8038f0:	2880030b 	ldhu	r2,12(r5)
  8038f4:	2b001917 	ldw	r12,100(r5)
  8038f8:	2ac0038b 	ldhu	r11,14(r5)
  8038fc:	2a800717 	ldw	r10,28(r5)
  803900:	2a400917 	ldw	r9,36(r5)
  803904:	defee204 	addi	sp,sp,-1144
  803908:	da001a04 	addi	r8,sp,104
  80390c:	00c10004 	movi	r3,1024
  803910:	dc011a15 	stw	r16,1128(sp)
  803914:	10bfff4c 	andi	r2,r2,65533
  803918:	2821883a 	mov	r16,r5
  80391c:	d80b883a 	mov	r5,sp
  803920:	dc811c15 	stw	r18,1136(sp)
  803924:	dc411b15 	stw	r17,1132(sp)
  803928:	dfc11d15 	stw	ra,1140(sp)
  80392c:	2025883a 	mov	r18,r4
  803930:	d880030d 	sth	r2,12(sp)
  803934:	db001915 	stw	r12,100(sp)
  803938:	dac0038d 	sth	r11,14(sp)
  80393c:	da800715 	stw	r10,28(sp)
  803940:	da400915 	stw	r9,36(sp)
  803944:	da000015 	stw	r8,0(sp)
  803948:	da000415 	stw	r8,16(sp)
  80394c:	d8c00215 	stw	r3,8(sp)
  803950:	d8c00515 	stw	r3,20(sp)
  803954:	d8000615 	stw	zero,24(sp)
  803958:	08017d00 	call	8017d0 <___vfprintf_internal_r>
  80395c:	1023883a 	mov	r17,r2
  803960:	10000d0e 	bge	r2,zero,803998 <__sbprintf+0xa8>
  803964:	d880030b 	ldhu	r2,12(sp)
  803968:	1080100c 	andi	r2,r2,64
  80396c:	10000326 	beq	r2,zero,80397c <__sbprintf+0x8c>
  803970:	8080030b 	ldhu	r2,12(r16)
  803974:	10801014 	ori	r2,r2,64
  803978:	8080030d 	sth	r2,12(r16)
  80397c:	8805883a 	mov	r2,r17
  803980:	dfc11d17 	ldw	ra,1140(sp)
  803984:	dc811c17 	ldw	r18,1136(sp)
  803988:	dc411b17 	ldw	r17,1132(sp)
  80398c:	dc011a17 	ldw	r16,1128(sp)
  803990:	dec11e04 	addi	sp,sp,1144
  803994:	f800283a 	ret
  803998:	d80b883a 	mov	r5,sp
  80399c:	9009883a 	mov	r4,r18
  8039a0:	08059000 	call	805900 <_fflush_r>
  8039a4:	103fef26 	beq	r2,zero,803964 <__sbprintf+0x74>
  8039a8:	047fffc4 	movi	r17,-1
  8039ac:	003fed06 	br	803964 <__sbprintf+0x74>

008039b0 <_write_r>:
  8039b0:	2807883a 	mov	r3,r5
  8039b4:	defffe04 	addi	sp,sp,-8
  8039b8:	dc000015 	stw	r16,0(sp)
  8039bc:	300b883a 	mov	r5,r6
  8039c0:	00802074 	movhi	r2,129
  8039c4:	380d883a 	mov	r6,r7
  8039c8:	2021883a 	mov	r16,r4
  8039cc:	1809883a 	mov	r4,r3
  8039d0:	dfc00115 	stw	ra,4(sp)
  8039d4:	10114515 	stw	zero,17684(r2)
  8039d8:	080e5b80 	call	80e5b8 <write>
  8039dc:	10ffffd8 	cmpnei	r3,r2,-1
  8039e0:	18000426 	beq	r3,zero,8039f4 <_write_r+0x44>
  8039e4:	dfc00117 	ldw	ra,4(sp)
  8039e8:	dc000017 	ldw	r16,0(sp)
  8039ec:	dec00204 	addi	sp,sp,8
  8039f0:	f800283a 	ret
  8039f4:	00c02074 	movhi	r3,129
  8039f8:	18d14517 	ldw	r3,17684(r3)
  8039fc:	183ff926 	beq	r3,zero,8039e4 <_write_r+0x34>
  803a00:	80c00015 	stw	r3,0(r16)
  803a04:	dfc00117 	ldw	ra,4(sp)
  803a08:	dc000017 	ldw	r16,0(sp)
  803a0c:	dec00204 	addi	sp,sp,8
  803a10:	f800283a 	ret

00803a14 <__swsetup_r>:
  803a14:	00802074 	movhi	r2,129
  803a18:	108a2c17 	ldw	r2,10416(r2)
  803a1c:	defffd04 	addi	sp,sp,-12
  803a20:	dc400115 	stw	r17,4(sp)
  803a24:	dc000015 	stw	r16,0(sp)
  803a28:	dfc00215 	stw	ra,8(sp)
  803a2c:	2023883a 	mov	r17,r4
  803a30:	2821883a 	mov	r16,r5
  803a34:	10000226 	beq	r2,zero,803a40 <__swsetup_r+0x2c>
  803a38:	10c00e17 	ldw	r3,56(r2)
  803a3c:	18001f26 	beq	r3,zero,803abc <__swsetup_r+0xa8>
  803a40:	8180030b 	ldhu	r6,12(r16)
  803a44:	30c0020c 	andi	r3,r6,8
  803a48:	3005883a 	mov	r2,r6
  803a4c:	18002126 	beq	r3,zero,803ad4 <__swsetup_r+0xc0>
  803a50:	80c00417 	ldw	r3,16(r16)
  803a54:	18002826 	beq	r3,zero,803af8 <__swsetup_r+0xe4>
  803a58:	1100004c 	andi	r4,r2,1
  803a5c:	20000b1e 	bne	r4,zero,803a8c <__swsetup_r+0x78>
  803a60:	1100008c 	andi	r4,r2,2
  803a64:	20002e1e 	bne	r4,zero,803b20 <__swsetup_r+0x10c>
  803a68:	81000517 	ldw	r4,20(r16)
  803a6c:	81000215 	stw	r4,8(r16)
  803a70:	18000b26 	beq	r3,zero,803aa0 <__swsetup_r+0x8c>
  803a74:	0005883a 	mov	r2,zero
  803a78:	dfc00217 	ldw	ra,8(sp)
  803a7c:	dc400117 	ldw	r17,4(sp)
  803a80:	dc000017 	ldw	r16,0(sp)
  803a84:	dec00304 	addi	sp,sp,12
  803a88:	f800283a 	ret
  803a8c:	81000517 	ldw	r4,20(r16)
  803a90:	80000215 	stw	zero,8(r16)
  803a94:	0109c83a 	sub	r4,zero,r4
  803a98:	81000615 	stw	r4,24(r16)
  803a9c:	183ff51e 	bne	r3,zero,803a74 <__swsetup_r+0x60>
  803aa0:	10c0200c 	andi	r3,r2,128
  803aa4:	0005883a 	mov	r2,zero
  803aa8:	183ff326 	beq	r3,zero,803a78 <__swsetup_r+0x64>
  803aac:	31801014 	ori	r6,r6,64
  803ab0:	8180030d 	sth	r6,12(r16)
  803ab4:	00bfffc4 	movi	r2,-1
  803ab8:	003fef06 	br	803a78 <__swsetup_r+0x64>
  803abc:	1009883a 	mov	r4,r2
  803ac0:	08009680 	call	800968 <__sinit>
  803ac4:	8180030b 	ldhu	r6,12(r16)
  803ac8:	30c0020c 	andi	r3,r6,8
  803acc:	3005883a 	mov	r2,r6
  803ad0:	183fdf1e 	bne	r3,zero,803a50 <__swsetup_r+0x3c>
  803ad4:	3080040c 	andi	r2,r6,16
  803ad8:	10002126 	beq	r2,zero,803b60 <__swsetup_r+0x14c>
  803adc:	3080010c 	andi	r2,r6,4
  803ae0:	1000111e 	bne	r2,zero,803b28 <__swsetup_r+0x114>
  803ae4:	80c00417 	ldw	r3,16(r16)
  803ae8:	30800214 	ori	r2,r6,8
  803aec:	8080030d 	sth	r2,12(r16)
  803af0:	100d883a 	mov	r6,r2
  803af4:	183fd81e 	bne	r3,zero,803a58 <__swsetup_r+0x44>
  803af8:	1100a00c 	andi	r4,r2,640
  803afc:	21008020 	cmpeqi	r4,r4,512
  803b00:	203fd51e 	bne	r4,zero,803a58 <__swsetup_r+0x44>
  803b04:	800b883a 	mov	r5,r16
  803b08:	8809883a 	mov	r4,r17
  803b0c:	08063480 	call	806348 <__smakebuf_r>
  803b10:	8180030b 	ldhu	r6,12(r16)
  803b14:	80c00417 	ldw	r3,16(r16)
  803b18:	3005883a 	mov	r2,r6
  803b1c:	003fce06 	br	803a58 <__swsetup_r+0x44>
  803b20:	0009883a 	mov	r4,zero
  803b24:	003fd106 	br	803a6c <__swsetup_r+0x58>
  803b28:	81400c17 	ldw	r5,48(r16)
  803b2c:	28000626 	beq	r5,zero,803b48 <__swsetup_r+0x134>
  803b30:	80801004 	addi	r2,r16,64
  803b34:	28800326 	beq	r5,r2,803b44 <__swsetup_r+0x130>
  803b38:	8809883a 	mov	r4,r17
  803b3c:	0805b000 	call	805b00 <_free_r>
  803b40:	8180030b 	ldhu	r6,12(r16)
  803b44:	80000c15 	stw	zero,48(r16)
  803b48:	80c00417 	ldw	r3,16(r16)
  803b4c:	00bff6c4 	movi	r2,-37
  803b50:	118c703a 	and	r6,r2,r6
  803b54:	80000115 	stw	zero,4(r16)
  803b58:	80c00015 	stw	r3,0(r16)
  803b5c:	003fe206 	br	803ae8 <__swsetup_r+0xd4>
  803b60:	00800244 	movi	r2,9
  803b64:	88800015 	stw	r2,0(r17)
  803b68:	31801014 	ori	r6,r6,64
  803b6c:	8180030d 	sth	r6,12(r16)
  803b70:	00bfffc4 	movi	r2,-1
  803b74:	003fc006 	br	803a78 <__swsetup_r+0x64>

00803b78 <_close_r>:
  803b78:	defffe04 	addi	sp,sp,-8
  803b7c:	dc000015 	stw	r16,0(sp)
  803b80:	00802074 	movhi	r2,129
  803b84:	2021883a 	mov	r16,r4
  803b88:	2809883a 	mov	r4,r5
  803b8c:	dfc00115 	stw	ra,4(sp)
  803b90:	10114515 	stw	zero,17684(r2)
  803b94:	080d8f00 	call	80d8f0 <close>
  803b98:	10ffffd8 	cmpnei	r3,r2,-1
  803b9c:	18000426 	beq	r3,zero,803bb0 <_close_r+0x38>
  803ba0:	dfc00117 	ldw	ra,4(sp)
  803ba4:	dc000017 	ldw	r16,0(sp)
  803ba8:	dec00204 	addi	sp,sp,8
  803bac:	f800283a 	ret
  803bb0:	00c02074 	movhi	r3,129
  803bb4:	18d14517 	ldw	r3,17684(r3)
  803bb8:	183ff926 	beq	r3,zero,803ba0 <_close_r+0x28>
  803bbc:	80c00015 	stw	r3,0(r16)
  803bc0:	dfc00117 	ldw	ra,4(sp)
  803bc4:	dc000017 	ldw	r16,0(sp)
  803bc8:	dec00204 	addi	sp,sp,8
  803bcc:	f800283a 	ret

00803bd0 <quorem>:
  803bd0:	defff204 	addi	sp,sp,-56
  803bd4:	dc400515 	stw	r17,20(sp)
  803bd8:	20800417 	ldw	r2,16(r4)
  803bdc:	2c400417 	ldw	r17,16(r5)
  803be0:	dfc00d15 	stw	ra,52(sp)
  803be4:	df000c15 	stw	fp,48(sp)
  803be8:	ddc00b15 	stw	r23,44(sp)
  803bec:	dd800a15 	stw	r22,40(sp)
  803bf0:	dd400915 	stw	r21,36(sp)
  803bf4:	dd000815 	stw	r20,32(sp)
  803bf8:	dcc00715 	stw	r19,28(sp)
  803bfc:	dc800615 	stw	r18,24(sp)
  803c00:	dc000415 	stw	r16,16(sp)
  803c04:	d9000115 	stw	r4,4(sp)
  803c08:	d9400215 	stw	r5,8(sp)
  803c0c:	14407616 	blt	r2,r17,803de8 <quorem+0x218>
  803c10:	8c7fffc4 	addi	r17,r17,-1
  803c14:	882a90ba 	slli	r21,r17,2
  803c18:	2f000504 	addi	fp,r5,20
  803c1c:	25800504 	addi	r22,r4,20
  803c20:	e565883a 	add	r18,fp,r21
  803c24:	b545883a 	add	r2,r22,r21
  803c28:	95c00017 	ldw	r23,0(r18)
  803c2c:	15000017 	ldw	r20,0(r2)
  803c30:	dd800015 	stw	r22,0(sp)
  803c34:	bdc00044 	addi	r23,r23,1
  803c38:	b80b883a 	mov	r5,r23
  803c3c:	a009883a 	mov	r4,r20
  803c40:	d8800315 	stw	r2,12(sp)
  803c44:	080b08c0 	call	80b08c <__udivsi3>
  803c48:	1021883a 	mov	r16,r2
  803c4c:	a5c02f36 	bltu	r20,r23,803d0c <quorem+0x13c>
  803c50:	e029883a 	mov	r20,fp
  803c54:	002b883a 	mov	r21,zero
  803c58:	002f883a 	mov	r23,zero
  803c5c:	a4c00017 	ldw	r19,0(r20)
  803c60:	800b883a 	mov	r5,r16
  803c64:	b5800104 	addi	r22,r22,4
  803c68:	993fffcc 	andi	r4,r19,65535
  803c6c:	080b14c0 	call	80b14c <__mulsi3>
  803c70:	9808d43a 	srli	r4,r19,16
  803c74:	800b883a 	mov	r5,r16
  803c78:	156b883a 	add	r21,r2,r21
  803c7c:	080b14c0 	call	80b14c <__mulsi3>
  803c80:	b0ffff17 	ldw	r3,-4(r22)
  803c84:	a80ad43a 	srli	r5,r21,16
  803c88:	a93fffcc 	andi	r4,r21,65535
  803c8c:	19bfffcc 	andi	r6,r3,65535
  803c90:	b909c83a 	sub	r4,r23,r4
  803c94:	2189883a 	add	r4,r4,r6
  803c98:	1806d43a 	srli	r3,r3,16
  803c9c:	1145883a 	add	r2,r2,r5
  803ca0:	200bd43a 	srai	r5,r4,16
  803ca4:	11bfffcc 	andi	r6,r2,65535
  803ca8:	1987c83a 	sub	r3,r3,r6
  803cac:	1947883a 	add	r3,r3,r5
  803cb0:	180a943a 	slli	r5,r3,16
  803cb4:	213fffcc 	andi	r4,r4,65535
  803cb8:	a5000104 	addi	r20,r20,4
  803cbc:	2908b03a 	or	r4,r5,r4
  803cc0:	b13fff15 	stw	r4,-4(r22)
  803cc4:	102ad43a 	srli	r21,r2,16
  803cc8:	182fd43a 	srai	r23,r3,16
  803ccc:	953fe32e 	bgeu	r18,r20,803c5c <quorem+0x8c>
  803cd0:	d8c00317 	ldw	r3,12(sp)
  803cd4:	18800017 	ldw	r2,0(r3)
  803cd8:	10000c1e 	bne	r2,zero,803d0c <quorem+0x13c>
  803cdc:	d8800017 	ldw	r2,0(sp)
  803ce0:	1d7fff04 	addi	r21,r3,-4
  803ce4:	15400436 	bltu	r2,r21,803cf8 <quorem+0x128>
  803ce8:	00000606 	br	803d04 <quorem+0x134>
  803cec:	d8800017 	ldw	r2,0(sp)
  803cf0:	8c7fffc4 	addi	r17,r17,-1
  803cf4:	1540032e 	bgeu	r2,r21,803d04 <quorem+0x134>
  803cf8:	a8800017 	ldw	r2,0(r21)
  803cfc:	ad7fff04 	addi	r21,r21,-4
  803d00:	103ffa26 	beq	r2,zero,803cec <quorem+0x11c>
  803d04:	d8800117 	ldw	r2,4(sp)
  803d08:	14400415 	stw	r17,16(r2)
  803d0c:	d9400217 	ldw	r5,8(sp)
  803d10:	d9000117 	ldw	r4,4(sp)
  803d14:	08073400 	call	807340 <__mcmp>
  803d18:	10002616 	blt	r2,zero,803db4 <quorem+0x1e4>
  803d1c:	d9400017 	ldw	r5,0(sp)
  803d20:	84000044 	addi	r16,r16,1
  803d24:	0007883a 	mov	r3,zero
  803d28:	e1000017 	ldw	r4,0(fp)
  803d2c:	29800017 	ldw	r6,0(r5)
  803d30:	29400104 	addi	r5,r5,4
  803d34:	20bfffcc 	andi	r2,r4,65535
  803d38:	1887c83a 	sub	r3,r3,r2
  803d3c:	30bfffcc 	andi	r2,r6,65535
  803d40:	1885883a 	add	r2,r3,r2
  803d44:	2008d43a 	srli	r4,r4,16
  803d48:	3006d43a 	srli	r3,r6,16
  803d4c:	100fd43a 	srai	r7,r2,16
  803d50:	11bfffcc 	andi	r6,r2,65535
  803d54:	1907c83a 	sub	r3,r3,r4
  803d58:	19c7883a 	add	r3,r3,r7
  803d5c:	1804943a 	slli	r2,r3,16
  803d60:	e7000104 	addi	fp,fp,4
  803d64:	1807d43a 	srai	r3,r3,16
  803d68:	1184b03a 	or	r2,r2,r6
  803d6c:	28bfff15 	stw	r2,-4(r5)
  803d70:	973fed2e 	bgeu	r18,fp,803d28 <quorem+0x158>
  803d74:	880490ba 	slli	r2,r17,2
  803d78:	d9000017 	ldw	r4,0(sp)
  803d7c:	2085883a 	add	r2,r4,r2
  803d80:	10c00017 	ldw	r3,0(r2)
  803d84:	18000b1e 	bne	r3,zero,803db4 <quorem+0x1e4>
  803d88:	10bfff04 	addi	r2,r2,-4
  803d8c:	20800436 	bltu	r4,r2,803da0 <quorem+0x1d0>
  803d90:	00000606 	br	803dac <quorem+0x1dc>
  803d94:	d8c00017 	ldw	r3,0(sp)
  803d98:	8c7fffc4 	addi	r17,r17,-1
  803d9c:	1880032e 	bgeu	r3,r2,803dac <quorem+0x1dc>
  803da0:	10c00017 	ldw	r3,0(r2)
  803da4:	10bfff04 	addi	r2,r2,-4
  803da8:	183ffa26 	beq	r3,zero,803d94 <quorem+0x1c4>
  803dac:	d8800117 	ldw	r2,4(sp)
  803db0:	14400415 	stw	r17,16(r2)
  803db4:	8005883a 	mov	r2,r16
  803db8:	dfc00d17 	ldw	ra,52(sp)
  803dbc:	df000c17 	ldw	fp,48(sp)
  803dc0:	ddc00b17 	ldw	r23,44(sp)
  803dc4:	dd800a17 	ldw	r22,40(sp)
  803dc8:	dd400917 	ldw	r21,36(sp)
  803dcc:	dd000817 	ldw	r20,32(sp)
  803dd0:	dcc00717 	ldw	r19,28(sp)
  803dd4:	dc800617 	ldw	r18,24(sp)
  803dd8:	dc400517 	ldw	r17,20(sp)
  803ddc:	dc000417 	ldw	r16,16(sp)
  803de0:	dec00e04 	addi	sp,sp,56
  803de4:	f800283a 	ret
  803de8:	0005883a 	mov	r2,zero
  803dec:	003ff206 	br	803db8 <quorem+0x1e8>

00803df0 <_dtoa_r>:
  803df0:	20801017 	ldw	r2,64(r4)
  803df4:	deffe204 	addi	sp,sp,-120
  803df8:	ddc01b15 	stw	r23,108(sp)
  803dfc:	dcc01715 	stw	r19,92(sp)
  803e00:	dc801615 	stw	r18,88(sp)
  803e04:	dc401515 	stw	r17,84(sp)
  803e08:	dc001415 	stw	r16,80(sp)
  803e0c:	dfc01d15 	stw	ra,116(sp)
  803e10:	df001c15 	stw	fp,112(sp)
  803e14:	dd801a15 	stw	r22,104(sp)
  803e18:	dd401915 	stw	r21,100(sp)
  803e1c:	dd001815 	stw	r20,96(sp)
  803e20:	d9c00215 	stw	r7,8(sp)
  803e24:	dc002017 	ldw	r16,128(sp)
  803e28:	202f883a 	mov	r23,r4
  803e2c:	3025883a 	mov	r18,r6
  803e30:	2827883a 	mov	r19,r5
  803e34:	3023883a 	mov	r17,r6
  803e38:	10000826 	beq	r2,zero,803e5c <_dtoa_r+0x6c>
  803e3c:	21801117 	ldw	r6,68(r4)
  803e40:	00c00044 	movi	r3,1
  803e44:	100b883a 	mov	r5,r2
  803e48:	1986983a 	sll	r3,r3,r6
  803e4c:	11800115 	stw	r6,4(r2)
  803e50:	10c00215 	stw	r3,8(r2)
  803e54:	08069300 	call	806930 <_Bfree>
  803e58:	b8001015 	stw	zero,64(r23)
  803e5c:	90018816 	blt	r18,zero,804480 <_dtoa_r+0x690>
  803e60:	80000015 	stw	zero,0(r16)
  803e64:	909ffc2c 	andhi	r2,r18,32752
  803e68:	00dffc34 	movhi	r3,32752
  803e6c:	10c18d26 	beq	r2,r3,8044a4 <_dtoa_r+0x6b4>
  803e70:	000d883a 	mov	r6,zero
  803e74:	000f883a 	mov	r7,zero
  803e78:	9809883a 	mov	r4,r19
  803e7c:	880b883a 	mov	r5,r17
  803e80:	080c3940 	call	80c394 <__eqdf2>
  803e84:	1000191e 	bne	r2,zero,803eec <_dtoa_r+0xfc>
  803e88:	d8c01f17 	ldw	r3,124(sp)
  803e8c:	00800044 	movi	r2,1
  803e90:	18800015 	stw	r2,0(r3)
  803e94:	d8802117 	ldw	r2,132(sp)
  803e98:	1002f926 	beq	r2,zero,804a80 <_dtoa_r+0xc90>
  803e9c:	d9002117 	ldw	r4,132(sp)
  803ea0:	00802074 	movhi	r2,129
  803ea4:	1081ab44 	addi	r2,r2,1709
  803ea8:	00c02074 	movhi	r3,129
  803eac:	20800015 	stw	r2,0(r4)
  803eb0:	1881ab04 	addi	r2,r3,1708
  803eb4:	d8800115 	stw	r2,4(sp)
  803eb8:	d8800117 	ldw	r2,4(sp)
  803ebc:	dfc01d17 	ldw	ra,116(sp)
  803ec0:	df001c17 	ldw	fp,112(sp)
  803ec4:	ddc01b17 	ldw	r23,108(sp)
  803ec8:	dd801a17 	ldw	r22,104(sp)
  803ecc:	dd401917 	ldw	r21,100(sp)
  803ed0:	dd001817 	ldw	r20,96(sp)
  803ed4:	dcc01717 	ldw	r19,92(sp)
  803ed8:	dc801617 	ldw	r18,88(sp)
  803edc:	dc401517 	ldw	r17,84(sp)
  803ee0:	dc001417 	ldw	r16,80(sp)
  803ee4:	dec01e04 	addi	sp,sp,120
  803ee8:	f800283a 	ret
  803eec:	d8801204 	addi	r2,sp,72
  803ef0:	9020d53a 	srli	r16,r18,20
  803ef4:	d8800015 	stw	r2,0(sp)
  803ef8:	d9c01304 	addi	r7,sp,76
  803efc:	980b883a 	mov	r5,r19
  803f00:	880d883a 	mov	r6,r17
  803f04:	b809883a 	mov	r4,r23
  803f08:	08077280 	call	807728 <__d2b>
  803f0c:	1039883a 	mov	fp,r2
  803f10:	8001771e 	bne	r16,zero,8044f0 <_dtoa_r+0x700>
  803f14:	dd001217 	ldw	r20,72(sp)
  803f18:	dc001317 	ldw	r16,76(sp)
  803f1c:	a421883a 	add	r16,r20,r16
  803f20:	80810c84 	addi	r2,r16,1074
  803f24:	10c00850 	cmplti	r3,r2,33
  803f28:	1802e51e 	bne	r3,zero,804ac0 <_dtoa_r+0xcd0>
  803f2c:	01001004 	movi	r4,64
  803f30:	2085c83a 	sub	r2,r4,r2
  803f34:	81010484 	addi	r4,r16,1042
  803f38:	90a4983a 	sll	r18,r18,r2
  803f3c:	9908d83a 	srl	r4,r19,r4
  803f40:	9108b03a 	or	r4,r18,r4
  803f44:	080d7d00 	call	80d7d0 <__floatunsidf>
  803f48:	1009883a 	mov	r4,r2
  803f4c:	017f8434 	movhi	r5,65040
  803f50:	00800044 	movi	r2,1
  803f54:	194b883a 	add	r5,r3,r5
  803f58:	843fffc4 	addi	r16,r16,-1
  803f5c:	d8800a15 	stw	r2,40(sp)
  803f60:	000d883a 	mov	r6,zero
  803f64:	01cffe34 	movhi	r7,16376
  803f68:	080cd900 	call	80cd90 <__subdf3>
  803f6c:	0198dbf4 	movhi	r6,25455
  803f70:	01cff4f4 	movhi	r7,16339
  803f74:	3190d844 	addi	r6,r6,17249
  803f78:	39e1e9c4 	addi	r7,r7,-30809
  803f7c:	1009883a 	mov	r4,r2
  803f80:	180b883a 	mov	r5,r3
  803f84:	080c5e40 	call	80c5e4 <__muldf3>
  803f88:	01a2d874 	movhi	r6,35681
  803f8c:	01cff1f4 	movhi	r7,16327
  803f90:	31b22cc4 	addi	r6,r6,-14157
  803f94:	39e28a04 	addi	r7,r7,-30168
  803f98:	180b883a 	mov	r5,r3
  803f9c:	1009883a 	mov	r4,r2
  803fa0:	080b1740 	call	80b174 <__adddf3>
  803fa4:	8009883a 	mov	r4,r16
  803fa8:	102b883a 	mov	r21,r2
  803fac:	1825883a 	mov	r18,r3
  803fb0:	080d7180 	call	80d718 <__floatsidf>
  803fb4:	019427f4 	movhi	r6,20639
  803fb8:	01cff4f4 	movhi	r7,16339
  803fbc:	319e7ec4 	addi	r6,r6,31227
  803fc0:	39d104c4 	addi	r7,r7,17427
  803fc4:	1009883a 	mov	r4,r2
  803fc8:	180b883a 	mov	r5,r3
  803fcc:	080c5e40 	call	80c5e4 <__muldf3>
  803fd0:	100d883a 	mov	r6,r2
  803fd4:	180f883a 	mov	r7,r3
  803fd8:	a809883a 	mov	r4,r21
  803fdc:	900b883a 	mov	r5,r18
  803fe0:	080b1740 	call	80b174 <__adddf3>
  803fe4:	1009883a 	mov	r4,r2
  803fe8:	180b883a 	mov	r5,r3
  803fec:	1025883a 	mov	r18,r2
  803ff0:	182d883a 	mov	r22,r3
  803ff4:	080d6980 	call	80d698 <__fixdfsi>
  803ff8:	000d883a 	mov	r6,zero
  803ffc:	000f883a 	mov	r7,zero
  804000:	9009883a 	mov	r4,r18
  804004:	b00b883a 	mov	r5,r22
  804008:	102b883a 	mov	r21,r2
  80400c:	d8800315 	stw	r2,12(sp)
  804010:	080c4fc0 	call	80c4fc <__ledf2>
  804014:	10028f16 	blt	r2,zero,804a54 <_dtoa_r+0xc64>
  804018:	dc800317 	ldw	r18,12(sp)
  80401c:	a421c83a 	sub	r16,r20,r16
  804020:	85bfffc4 	addi	r22,r16,-1
  804024:	908005e8 	cmpgeui	r2,r18,23
  804028:	1002821e 	bne	r2,zero,804a34 <_dtoa_r+0xc44>
  80402c:	900690fa 	slli	r3,r18,3
  804030:	00802074 	movhi	r2,129
  804034:	1081f404 	addi	r2,r2,2000
  804038:	10c5883a 	add	r2,r2,r3
  80403c:	11800017 	ldw	r6,0(r2)
  804040:	11c00117 	ldw	r7,4(r2)
  804044:	9809883a 	mov	r4,r19
  804048:	880b883a 	mov	r5,r17
  80404c:	080c4fc0 	call	80c4fc <__ledf2>
  804050:	1002550e 	bge	r2,zero,8049a8 <_dtoa_r+0xbb8>
  804054:	90bfffc4 	addi	r2,r18,-1
  804058:	d8800315 	stw	r2,12(sp)
  80405c:	d8000915 	stw	zero,36(sp)
  804060:	b0027716 	blt	r22,zero,804a40 <_dtoa_r+0xc50>
  804064:	d8000615 	stw	zero,24(sp)
  804068:	d8800317 	ldw	r2,12(sp)
  80406c:	1002510e 	bge	r2,zero,8049b4 <_dtoa_r+0xbc4>
  804070:	d8800317 	ldw	r2,12(sp)
  804074:	d8c00617 	ldw	r3,24(sp)
  804078:	d8000315 	stw	zero,12(sp)
  80407c:	d8800415 	stw	r2,16(sp)
  804080:	1887c83a 	sub	r3,r3,r2
  804084:	d8c00615 	stw	r3,24(sp)
  804088:	0087c83a 	sub	r3,zero,r2
  80408c:	d8c00815 	stw	r3,32(sp)
  804090:	d8c00217 	ldw	r3,8(sp)
  804094:	188002a8 	cmpgeui	r2,r3,10
  804098:	10024d1e 	bne	r2,zero,8049d0 <_dtoa_r+0xbe0>
  80409c:	18800190 	cmplti	r2,r3,6
  8040a0:	10028b1e 	bne	r2,zero,804ad0 <_dtoa_r+0xce0>
  8040a4:	18bfff04 	addi	r2,r3,-4
  8040a8:	d8800215 	stw	r2,8(sp)
  8040ac:	0021883a 	mov	r16,zero
  8040b0:	d8c00217 	ldw	r3,8(sp)
  8040b4:	18800120 	cmpeqi	r2,r3,4
  8040b8:	10035d1e 	bne	r2,zero,804e30 <_dtoa_r+0x1040>
  8040bc:	18800160 	cmpeqi	r2,r3,5
  8040c0:	10031b1e 	bne	r2,zero,804d30 <_dtoa_r+0xf40>
  8040c4:	188000a0 	cmpeqi	r2,r3,2
  8040c8:	10024d26 	beq	r2,zero,804a00 <_dtoa_r+0xc10>
  8040cc:	d8000715 	stw	zero,28(sp)
  8040d0:	d8801e17 	ldw	r2,120(sp)
  8040d4:	0083260e 	bge	zero,r2,804d70 <_dtoa_r+0xf80>
  8040d8:	d8800b15 	stw	r2,44(sp)
  8040dc:	d8800515 	stw	r2,20(sp)
  8040e0:	100d883a 	mov	r6,r2
  8040e4:	b8001115 	stw	zero,68(r23)
  8040e8:	30800610 	cmplti	r2,r6,24
  8040ec:	1004f11e 	bne	r2,zero,8054b4 <_dtoa_r+0x16c4>
  8040f0:	00c00044 	movi	r3,1
  8040f4:	00800104 	movi	r2,4
  8040f8:	1085883a 	add	r2,r2,r2
  8040fc:	11000504 	addi	r4,r2,20
  804100:	180b883a 	mov	r5,r3
  804104:	18c00044 	addi	r3,r3,1
  804108:	313ffb2e 	bgeu	r6,r4,8040f8 <_dtoa_r+0x308>
  80410c:	b9401115 	stw	r5,68(r23)
  804110:	b809883a 	mov	r4,r23
  804114:	080688c0 	call	80688c <_Balloc>
  804118:	d8800115 	stw	r2,4(sp)
  80411c:	1004de26 	beq	r2,zero,805498 <_dtoa_r+0x16a8>
  804120:	d8800117 	ldw	r2,4(sp)
  804124:	b8801015 	stw	r2,64(r23)
  804128:	d8800517 	ldw	r2,20(sp)
  80412c:	108003e8 	cmpgeui	r2,r2,15
  804130:	1001021e 	bne	r2,zero,80453c <_dtoa_r+0x74c>
  804134:	80010126 	beq	r16,zero,80453c <_dtoa_r+0x74c>
  804138:	d9000417 	ldw	r4,16(sp)
  80413c:	01038b0e 	bge	zero,r4,804f6c <_dtoa_r+0x117c>
  804140:	208003cc 	andi	r2,r4,15
  804144:	100690fa 	slli	r3,r2,3
  804148:	2029d13a 	srai	r20,r4,4
  80414c:	00802074 	movhi	r2,129
  804150:	1081f404 	addi	r2,r2,2000
  804154:	10c5883a 	add	r2,r2,r3
  804158:	a0c0040c 	andi	r3,r20,16
  80415c:	12800017 	ldw	r10,0(r2)
  804160:	12400117 	ldw	r9,4(r2)
  804164:	18032c26 	beq	r3,zero,804e18 <_dtoa_r+0x1028>
  804168:	00802074 	movhi	r2,129
  80416c:	1081ea04 	addi	r2,r2,1960
  804170:	11800817 	ldw	r6,32(r2)
  804174:	11c00917 	ldw	r7,36(r2)
  804178:	9809883a 	mov	r4,r19
  80417c:	880b883a 	mov	r5,r17
  804180:	da400e15 	stw	r9,56(sp)
  804184:	da800d15 	stw	r10,52(sp)
  804188:	080ba640 	call	80ba64 <__divdf3>
  80418c:	da800d17 	ldw	r10,52(sp)
  804190:	da400e17 	ldw	r9,56(sp)
  804194:	a50003cc 	andi	r20,r20,15
  804198:	d8800c15 	stw	r2,48(sp)
  80419c:	1825883a 	mov	r18,r3
  8041a0:	054000c4 	movi	r21,3
  8041a4:	a0001126 	beq	r20,zero,8041ec <_dtoa_r+0x3fc>
  8041a8:	04002074 	movhi	r16,129
  8041ac:	8401ea04 	addi	r16,r16,1960
  8041b0:	5009883a 	mov	r4,r10
  8041b4:	480b883a 	mov	r5,r9
  8041b8:	a180004c 	andi	r6,r20,1
  8041bc:	30000626 	beq	r6,zero,8041d8 <_dtoa_r+0x3e8>
  8041c0:	81800017 	ldw	r6,0(r16)
  8041c4:	81c00117 	ldw	r7,4(r16)
  8041c8:	ad400044 	addi	r21,r21,1
  8041cc:	080c5e40 	call	80c5e4 <__muldf3>
  8041d0:	1009883a 	mov	r4,r2
  8041d4:	180b883a 	mov	r5,r3
  8041d8:	a029d07a 	srai	r20,r20,1
  8041dc:	84000204 	addi	r16,r16,8
  8041e0:	a03ff51e 	bne	r20,zero,8041b8 <_dtoa_r+0x3c8>
  8041e4:	2015883a 	mov	r10,r4
  8041e8:	2813883a 	mov	r9,r5
  8041ec:	d9000c17 	ldw	r4,48(sp)
  8041f0:	900b883a 	mov	r5,r18
  8041f4:	500d883a 	mov	r6,r10
  8041f8:	480f883a 	mov	r7,r9
  8041fc:	080ba640 	call	80ba64 <__divdf3>
  804200:	1021883a 	mov	r16,r2
  804204:	1825883a 	mov	r18,r3
  804208:	d8800917 	ldw	r2,36(sp)
  80420c:	10000626 	beq	r2,zero,804228 <_dtoa_r+0x438>
  804210:	000d883a 	mov	r6,zero
  804214:	01cffc34 	movhi	r7,16368
  804218:	8009883a 	mov	r4,r16
  80421c:	900b883a 	mov	r5,r18
  804220:	080c4fc0 	call	80c4fc <__ledf2>
  804224:	10044416 	blt	r2,zero,805338 <_dtoa_r+0x1548>
  804228:	a809883a 	mov	r4,r21
  80422c:	080d7180 	call	80d718 <__floatsidf>
  804230:	800d883a 	mov	r6,r16
  804234:	900f883a 	mov	r7,r18
  804238:	1009883a 	mov	r4,r2
  80423c:	180b883a 	mov	r5,r3
  804240:	080c5e40 	call	80c5e4 <__muldf3>
  804244:	000d883a 	mov	r6,zero
  804248:	01d00734 	movhi	r7,16412
  80424c:	1009883a 	mov	r4,r2
  804250:	180b883a 	mov	r5,r3
  804254:	080b1740 	call	80b174 <__adddf3>
  804258:	1029883a 	mov	r20,r2
  80425c:	00bf3034 	movhi	r2,64704
  804260:	1885883a 	add	r2,r3,r2
  804264:	d8800c15 	stw	r2,48(sp)
  804268:	d8800517 	ldw	r2,20(sp)
  80426c:	10032226 	beq	r2,zero,804ef8 <_dtoa_r+0x1108>
  804270:	d8800417 	ldw	r2,16(sp)
  804274:	d8801115 	stw	r2,68(sp)
  804278:	d8800517 	ldw	r2,20(sp)
  80427c:	d8800d15 	stw	r2,52(sp)
  804280:	d8800d17 	ldw	r2,52(sp)
  804284:	900b883a 	mov	r5,r18
  804288:	8009883a 	mov	r4,r16
  80428c:	10bfffc4 	addi	r2,r2,-1
  804290:	100690fa 	slli	r3,r2,3
  804294:	00802074 	movhi	r2,129
  804298:	1081f404 	addi	r2,r2,2000
  80429c:	10c5883a 	add	r2,r2,r3
  8042a0:	12800017 	ldw	r10,0(r2)
  8042a4:	12c00117 	ldw	r11,4(r2)
  8042a8:	da800f15 	stw	r10,60(sp)
  8042ac:	dac00e15 	stw	r11,56(sp)
  8042b0:	080d6980 	call	80d698 <__fixdfsi>
  8042b4:	1009883a 	mov	r4,r2
  8042b8:	10800c04 	addi	r2,r2,48
  8042bc:	d8801015 	stw	r2,64(sp)
  8042c0:	080d7180 	call	80d718 <__floatsidf>
  8042c4:	8009883a 	mov	r4,r16
  8042c8:	100d883a 	mov	r6,r2
  8042cc:	180f883a 	mov	r7,r3
  8042d0:	900b883a 	mov	r5,r18
  8042d4:	080cd900 	call	80cd90 <__subdf3>
  8042d8:	d9000117 	ldw	r4,4(sp)
  8042dc:	dac00e17 	ldw	r11,56(sp)
  8042e0:	da800f17 	ldw	r10,60(sp)
  8042e4:	1825883a 	mov	r18,r3
  8042e8:	d8c00717 	ldw	r3,28(sp)
  8042ec:	25400044 	addi	r21,r4,1
  8042f0:	1021883a 	mov	r16,r2
  8042f4:	500d883a 	mov	r6,r10
  8042f8:	580f883a 	mov	r7,r11
  8042fc:	1803b626 	beq	r3,zero,8051d8 <_dtoa_r+0x13e8>
  804300:	0009883a 	mov	r4,zero
  804304:	014ff834 	movhi	r5,16352
  804308:	080ba640 	call	80ba64 <__divdf3>
  80430c:	d9c00c17 	ldw	r7,48(sp)
  804310:	a00d883a 	mov	r6,r20
  804314:	1009883a 	mov	r4,r2
  804318:	180b883a 	mov	r5,r3
  80431c:	080cd900 	call	80cd90 <__subdf3>
  804320:	d9000117 	ldw	r4,4(sp)
  804324:	1029883a 	mov	r20,r2
  804328:	d8801017 	ldw	r2,64(sp)
  80432c:	800d883a 	mov	r6,r16
  804330:	900f883a 	mov	r7,r18
  804334:	20800005 	stb	r2,0(r4)
  804338:	180b883a 	mov	r5,r3
  80433c:	a009883a 	mov	r4,r20
  804340:	d8c00c15 	stw	r3,48(sp)
  804344:	080c4140 	call	80c414 <__gedf2>
  804348:	0083e716 	blt	zero,r2,8052e8 <_dtoa_r+0x14f8>
  80434c:	0005883a 	mov	r2,zero
  804350:	dd800e15 	stw	r22,56(sp)
  804354:	dc400f15 	stw	r17,60(sp)
  804358:	dd800d17 	ldw	r22,52(sp)
  80435c:	dc400c17 	ldw	r17,48(sp)
  804360:	ddc00d15 	stw	r23,52(sp)
  804364:	dcc00c15 	stw	r19,48(sp)
  804368:	1027883a 	mov	r19,r2
  80436c:	00002606 	br	804408 <_dtoa_r+0x618>
  804370:	9cc00044 	addi	r19,r19,1
  804374:	9d806d0e 	bge	r19,r22,80452c <_dtoa_r+0x73c>
  804378:	a009883a 	mov	r4,r20
  80437c:	880b883a 	mov	r5,r17
  804380:	000d883a 	mov	r6,zero
  804384:	01d00934 	movhi	r7,16420
  804388:	080c5e40 	call	80c5e4 <__muldf3>
  80438c:	000d883a 	mov	r6,zero
  804390:	01d00934 	movhi	r7,16420
  804394:	8009883a 	mov	r4,r16
  804398:	900b883a 	mov	r5,r18
  80439c:	1029883a 	mov	r20,r2
  8043a0:	1823883a 	mov	r17,r3
  8043a4:	080c5e40 	call	80c5e4 <__muldf3>
  8043a8:	180b883a 	mov	r5,r3
  8043ac:	1009883a 	mov	r4,r2
  8043b0:	1821883a 	mov	r16,r3
  8043b4:	1025883a 	mov	r18,r2
  8043b8:	080d6980 	call	80d698 <__fixdfsi>
  8043bc:	1009883a 	mov	r4,r2
  8043c0:	102f883a 	mov	r23,r2
  8043c4:	080d7180 	call	80d718 <__floatsidf>
  8043c8:	9009883a 	mov	r4,r18
  8043cc:	800b883a 	mov	r5,r16
  8043d0:	100d883a 	mov	r6,r2
  8043d4:	180f883a 	mov	r7,r3
  8043d8:	080cd900 	call	80cd90 <__subdf3>
  8043dc:	ad400044 	addi	r21,r21,1
  8043e0:	ba000c04 	addi	r8,r23,48
  8043e4:	aa3fffc5 	stb	r8,-1(r21)
  8043e8:	a00d883a 	mov	r6,r20
  8043ec:	880f883a 	mov	r7,r17
  8043f0:	1009883a 	mov	r4,r2
  8043f4:	180b883a 	mov	r5,r3
  8043f8:	1021883a 	mov	r16,r2
  8043fc:	1825883a 	mov	r18,r3
  804400:	080c4fc0 	call	80c4fc <__ledf2>
  804404:	10040516 	blt	r2,zero,80541c <_dtoa_r+0x162c>
  804408:	800d883a 	mov	r6,r16
  80440c:	900f883a 	mov	r7,r18
  804410:	0009883a 	mov	r4,zero
  804414:	014ffc34 	movhi	r5,16368
  804418:	080cd900 	call	80cd90 <__subdf3>
  80441c:	a00d883a 	mov	r6,r20
  804420:	880f883a 	mov	r7,r17
  804424:	1009883a 	mov	r4,r2
  804428:	180b883a 	mov	r5,r3
  80442c:	080c4fc0 	call	80c4fc <__ledf2>
  804430:	103fcf0e 	bge	r2,zero,804370 <_dtoa_r+0x580>
  804434:	d8801117 	ldw	r2,68(sp)
  804438:	ddc00d17 	ldw	r23,52(sp)
  80443c:	d9000117 	ldw	r4,4(sp)
  804440:	10800044 	addi	r2,r2,1
  804444:	d8800415 	stw	r2,16(sp)
  804448:	a829883a 	mov	r20,r21
  80444c:	00000106 	br	804454 <_dtoa_r+0x664>
  804450:	a103da26 	beq	r20,r4,8053bc <_dtoa_r+0x15cc>
  804454:	a0ffffc3 	ldbu	r3,-1(r20)
  804458:	a02b883a 	mov	r21,r20
  80445c:	a53fffc4 	addi	r20,r20,-1
  804460:	18803fcc 	andi	r2,r3,255
  804464:	1080201c 	xori	r2,r2,128
  804468:	10bfe004 	addi	r2,r2,-128
  80446c:	10800e60 	cmpeqi	r2,r2,57
  804470:	103ff71e 	bne	r2,zero,804450 <_dtoa_r+0x660>
  804474:	18c00044 	addi	r3,r3,1
  804478:	a0c00005 	stb	r3,0(r20)
  80447c:	00013f06 	br	80497c <_dtoa_r+0xb8c>
  804480:	04600034 	movhi	r17,32768
  804484:	8c7fffc4 	addi	r17,r17,-1
  804488:	9462703a 	and	r17,r18,r17
  80448c:	00800044 	movi	r2,1
  804490:	8825883a 	mov	r18,r17
  804494:	80800015 	stw	r2,0(r16)
  804498:	00dffc34 	movhi	r3,32752
  80449c:	909ffc2c 	andhi	r2,r18,32752
  8044a0:	10fe731e 	bne	r2,r3,803e70 <_dtoa_r+0x80>
  8044a4:	d9001f17 	ldw	r4,124(sp)
  8044a8:	00800434 	movhi	r2,16
  8044ac:	10bfffc4 	addi	r2,r2,-1
  8044b0:	9084703a 	and	r2,r18,r2
  8044b4:	00c9c3c4 	movi	r3,9999
  8044b8:	20c00015 	stw	r3,0(r4)
  8044bc:	14e6b03a 	or	r19,r2,r19
  8044c0:	9800141e 	bne	r19,zero,804514 <_dtoa_r+0x724>
  8044c4:	d8802117 	ldw	r2,132(sp)
  8044c8:	10041226 	beq	r2,zero,805514 <_dtoa_r+0x1724>
  8044cc:	00802074 	movhi	r2,129
  8044d0:	1007883a 	mov	r3,r2
  8044d4:	18c1b504 	addi	r3,r3,1748
  8044d8:	00802074 	movhi	r2,129
  8044dc:	d8c00115 	stw	r3,4(sp)
  8044e0:	1081b704 	addi	r2,r2,1756
  8044e4:	d8c02117 	ldw	r3,132(sp)
  8044e8:	18800015 	stw	r2,0(r3)
  8044ec:	003e7206 	br	803eb8 <_dtoa_r+0xc8>
  8044f0:	01400434 	movhi	r5,16
  8044f4:	297fffc4 	addi	r5,r5,-1
  8044f8:	894a703a 	and	r5,r17,r5
  8044fc:	dd001217 	ldw	r20,72(sp)
  804500:	9809883a 	mov	r4,r19
  804504:	294ffc34 	orhi	r5,r5,16368
  804508:	843f0044 	addi	r16,r16,-1023
  80450c:	d8000a15 	stw	zero,40(sp)
  804510:	003e9306 	br	803f60 <_dtoa_r+0x170>
  804514:	d8802117 	ldw	r2,132(sp)
  804518:	1001fe1e 	bne	r2,zero,804d14 <_dtoa_r+0xf24>
  80451c:	00802074 	movhi	r2,129
  804520:	1081b404 	addi	r2,r2,1744
  804524:	d8800115 	stw	r2,4(sp)
  804528:	003e6306 	br	803eb8 <_dtoa_r+0xc8>
  80452c:	dd800e17 	ldw	r22,56(sp)
  804530:	ddc00d17 	ldw	r23,52(sp)
  804534:	dc400f17 	ldw	r17,60(sp)
  804538:	dcc00c17 	ldw	r19,48(sp)
  80453c:	d8801317 	ldw	r2,76(sp)
  804540:	10006e16 	blt	r2,zero,8046fc <_dtoa_r+0x90c>
  804544:	d9000417 	ldw	r4,16(sp)
  804548:	20c003c8 	cmpgei	r3,r4,15
  80454c:	18006b1e 	bne	r3,zero,8046fc <_dtoa_r+0x90c>
  804550:	200690fa 	slli	r3,r4,3
  804554:	00802074 	movhi	r2,129
  804558:	1081f404 	addi	r2,r2,2000
  80455c:	10c5883a 	add	r2,r2,r3
  804560:	14000017 	ldw	r16,0(r2)
  804564:	14800117 	ldw	r18,4(r2)
  804568:	d8801e17 	ldw	r2,120(sp)
  80456c:	1000150e 	bge	r2,zero,8045c4 <_dtoa_r+0x7d4>
  804570:	d8800517 	ldw	r2,20(sp)
  804574:	00801316 	blt	zero,r2,8045c4 <_dtoa_r+0x7d4>
  804578:	d8800517 	ldw	r2,20(sp)
  80457c:	1002721e 	bne	r2,zero,804f48 <_dtoa_r+0x1158>
  804580:	8009883a 	mov	r4,r16
  804584:	000d883a 	mov	r6,zero
  804588:	01d00534 	movhi	r7,16404
  80458c:	900b883a 	mov	r5,r18
  804590:	080c5e40 	call	80c5e4 <__muldf3>
  804594:	100d883a 	mov	r6,r2
  804598:	180f883a 	mov	r7,r3
  80459c:	9809883a 	mov	r4,r19
  8045a0:	880b883a 	mov	r5,r17
  8045a4:	080c4fc0 	call	80c4fc <__ledf2>
  8045a8:	0029883a 	mov	r20,zero
  8045ac:	0021883a 	mov	r16,zero
  8045b0:	00820216 	blt	zero,r2,804dbc <_dtoa_r+0xfcc>
  8045b4:	d8801e17 	ldw	r2,120(sp)
  8045b8:	dd400117 	ldw	r21,4(sp)
  8045bc:	00a2303a 	nor	r17,zero,r2
  8045c0:	00020406 	br	804dd4 <_dtoa_r+0xfe4>
  8045c4:	800d883a 	mov	r6,r16
  8045c8:	900f883a 	mov	r7,r18
  8045cc:	9809883a 	mov	r4,r19
  8045d0:	880b883a 	mov	r5,r17
  8045d4:	080ba640 	call	80ba64 <__divdf3>
  8045d8:	180b883a 	mov	r5,r3
  8045dc:	1009883a 	mov	r4,r2
  8045e0:	080d6980 	call	80d698 <__fixdfsi>
  8045e4:	1009883a 	mov	r4,r2
  8045e8:	102b883a 	mov	r21,r2
  8045ec:	080d7180 	call	80d718 <__floatsidf>
  8045f0:	800d883a 	mov	r6,r16
  8045f4:	900f883a 	mov	r7,r18
  8045f8:	1009883a 	mov	r4,r2
  8045fc:	180b883a 	mov	r5,r3
  804600:	080c5e40 	call	80c5e4 <__muldf3>
  804604:	100d883a 	mov	r6,r2
  804608:	9809883a 	mov	r4,r19
  80460c:	880b883a 	mov	r5,r17
  804610:	180f883a 	mov	r7,r3
  804614:	080cd900 	call	80cd90 <__subdf3>
  804618:	d9800117 	ldw	r6,4(sp)
  80461c:	dd800517 	ldw	r22,20(sp)
  804620:	1009883a 	mov	r4,r2
  804624:	a8800c04 	addi	r2,r21,48
  804628:	30800005 	stb	r2,0(r6)
  80462c:	b0800060 	cmpeqi	r2,r22,1
  804630:	180b883a 	mov	r5,r3
  804634:	35000044 	addi	r20,r6,1
  804638:	10029f1e 	bne	r2,zero,8050b8 <_dtoa_r+0x12c8>
  80463c:	04400044 	movi	r17,1
  804640:	ddc00215 	stw	r23,8(sp)
  804644:	00001c06 	br	8046b8 <_dtoa_r+0x8c8>
  804648:	800d883a 	mov	r6,r16
  80464c:	900f883a 	mov	r7,r18
  804650:	a809883a 	mov	r4,r21
  804654:	980b883a 	mov	r5,r19
  804658:	080ba640 	call	80ba64 <__divdf3>
  80465c:	180b883a 	mov	r5,r3
  804660:	1009883a 	mov	r4,r2
  804664:	080d6980 	call	80d698 <__fixdfsi>
  804668:	1009883a 	mov	r4,r2
  80466c:	102f883a 	mov	r23,r2
  804670:	080d7180 	call	80d718 <__floatsidf>
  804674:	800d883a 	mov	r6,r16
  804678:	900f883a 	mov	r7,r18
  80467c:	1009883a 	mov	r4,r2
  804680:	180b883a 	mov	r5,r3
  804684:	080c5e40 	call	80c5e4 <__muldf3>
  804688:	a809883a 	mov	r4,r21
  80468c:	980b883a 	mov	r5,r19
  804690:	100d883a 	mov	r6,r2
  804694:	180f883a 	mov	r7,r3
  804698:	080cd900 	call	80cd90 <__subdf3>
  80469c:	b9000c04 	addi	r4,r23,48
  8046a0:	a1000005 	stb	r4,0(r20)
  8046a4:	8c400044 	addi	r17,r17,1
  8046a8:	a5000044 	addi	r20,r20,1
  8046ac:	1009883a 	mov	r4,r2
  8046b0:	180b883a 	mov	r5,r3
  8046b4:	8d827e26 	beq	r17,r22,8050b0 <_dtoa_r+0x12c0>
  8046b8:	000d883a 	mov	r6,zero
  8046bc:	01d00934 	movhi	r7,16420
  8046c0:	080c5e40 	call	80c5e4 <__muldf3>
  8046c4:	000d883a 	mov	r6,zero
  8046c8:	000f883a 	mov	r7,zero
  8046cc:	1009883a 	mov	r4,r2
  8046d0:	180b883a 	mov	r5,r3
  8046d4:	102b883a 	mov	r21,r2
  8046d8:	1827883a 	mov	r19,r3
  8046dc:	080c3940 	call	80c394 <__eqdf2>
  8046e0:	103fd91e 	bne	r2,zero,804648 <_dtoa_r+0x858>
  8046e4:	d8800417 	ldw	r2,16(sp)
  8046e8:	ddc00217 	ldw	r23,8(sp)
  8046ec:	a02b883a 	mov	r21,r20
  8046f0:	10800044 	addi	r2,r2,1
  8046f4:	d8800415 	stw	r2,16(sp)
  8046f8:	0000a006 	br	80497c <_dtoa_r+0xb8c>
  8046fc:	d8c00717 	ldw	r3,28(sp)
  804700:	1800e326 	beq	r3,zero,804a90 <_dtoa_r+0xca0>
  804704:	d8c00217 	ldw	r3,8(sp)
  804708:	18c00088 	cmpgei	r3,r3,2
  80470c:	1801e026 	beq	r3,zero,804e90 <_dtoa_r+0x10a0>
  804710:	d8800517 	ldw	r2,20(sp)
  804714:	153fffc4 	addi	r20,r2,-1
  804718:	d8800817 	ldw	r2,32(sp)
  80471c:	1501bc0e 	bge	r2,r20,804e10 <_dtoa_r+0x1020>
  804720:	d8800817 	ldw	r2,32(sp)
  804724:	d8c00317 	ldw	r3,12(sp)
  804728:	dd000815 	stw	r20,32(sp)
  80472c:	a085c83a 	sub	r2,r20,r2
  804730:	1885883a 	add	r2,r3,r2
  804734:	d8800315 	stw	r2,12(sp)
  804738:	0029883a 	mov	r20,zero
  80473c:	d8800517 	ldw	r2,20(sp)
  804740:	10028b16 	blt	r2,zero,805170 <_dtoa_r+0x1380>
  804744:	d8c00617 	ldw	r3,24(sp)
  804748:	b0ad883a 	add	r22,r22,r2
  80474c:	1885883a 	add	r2,r3,r2
  804750:	1825883a 	mov	r18,r3
  804754:	d8800615 	stw	r2,24(sp)
  804758:	01400044 	movi	r5,1
  80475c:	b809883a 	mov	r4,r23
  804760:	0806cfc0 	call	806cfc <__i2b>
  804764:	1021883a 	mov	r16,r2
  804768:	0480080e 	bge	zero,r18,80478c <_dtoa_r+0x99c>
  80476c:	0580070e 	bge	zero,r22,80478c <_dtoa_r+0x99c>
  804770:	9005883a 	mov	r2,r18
  804774:	b4819e16 	blt	r22,r18,804df0 <_dtoa_r+0x1000>
  804778:	d8c00617 	ldw	r3,24(sp)
  80477c:	90a5c83a 	sub	r18,r18,r2
  804780:	b0adc83a 	sub	r22,r22,r2
  804784:	1887c83a 	sub	r3,r3,r2
  804788:	d8c00615 	stw	r3,24(sp)
  80478c:	d8800817 	ldw	r2,32(sp)
  804790:	10001426 	beq	r2,zero,8047e4 <_dtoa_r+0x9f4>
  804794:	d8800717 	ldw	r2,28(sp)
  804798:	1001ee26 	beq	r2,zero,804f54 <_dtoa_r+0x1164>
  80479c:	05000e0e 	bge	zero,r20,8047d8 <_dtoa_r+0x9e8>
  8047a0:	800b883a 	mov	r5,r16
  8047a4:	a00d883a 	mov	r6,r20
  8047a8:	b809883a 	mov	r4,r23
  8047ac:	08070700 	call	807070 <__pow5mult>
  8047b0:	e00d883a 	mov	r6,fp
  8047b4:	100b883a 	mov	r5,r2
  8047b8:	b809883a 	mov	r4,r23
  8047bc:	1021883a 	mov	r16,r2
  8047c0:	0806dac0 	call	806dac <__multiply>
  8047c4:	102b883a 	mov	r21,r2
  8047c8:	e00b883a 	mov	r5,fp
  8047cc:	b809883a 	mov	r4,r23
  8047d0:	08069300 	call	806930 <_Bfree>
  8047d4:	a839883a 	mov	fp,r21
  8047d8:	d8800817 	ldw	r2,32(sp)
  8047dc:	150dc83a 	sub	r6,r2,r20
  8047e0:	15025e1e 	bne	r2,r20,80515c <_dtoa_r+0x136c>
  8047e4:	01400044 	movi	r5,1
  8047e8:	b809883a 	mov	r4,r23
  8047ec:	0806cfc0 	call	806cfc <__i2b>
  8047f0:	d9800317 	ldw	r6,12(sp)
  8047f4:	1029883a 	mov	r20,r2
  8047f8:	0180b716 	blt	zero,r6,804ad8 <_dtoa_r+0xce8>
  8047fc:	d8800217 	ldw	r2,8(sp)
  804800:	10800088 	cmpgei	r2,r2,2
  804804:	10014d26 	beq	r2,zero,804d3c <_dtoa_r+0xf4c>
  804808:	0023883a 	mov	r17,zero
  80480c:	d8c00317 	ldw	r3,12(sp)
  804810:	00800044 	movi	r2,1
  804814:	1800b81e 	bne	r3,zero,804af8 <_dtoa_r+0xd08>
  804818:	1585883a 	add	r2,r2,r22
  80481c:	108007cc 	andi	r2,r2,31
  804820:	1000a526 	beq	r2,zero,804ab8 <_dtoa_r+0xcc8>
  804824:	00c00804 	movi	r3,32
  804828:	1887c83a 	sub	r3,r3,r2
  80482c:	19000150 	cmplti	r4,r3,5
  804830:	20033c1e 	bne	r4,zero,805524 <_dtoa_r+0x1734>
  804834:	00c00704 	movi	r3,28
  804838:	1885c83a 	sub	r2,r3,r2
  80483c:	d8c00617 	ldw	r3,24(sp)
  804840:	90a5883a 	add	r18,r18,r2
  804844:	b0ad883a 	add	r22,r22,r2
  804848:	1887883a 	add	r3,r3,r2
  80484c:	d8c00615 	stw	r3,24(sp)
  804850:	d8800617 	ldw	r2,24(sp)
  804854:	00809216 	blt	zero,r2,804aa0 <_dtoa_r+0xcb0>
  804858:	0580050e 	bge	zero,r22,804870 <_dtoa_r+0xa80>
  80485c:	a00b883a 	mov	r5,r20
  804860:	b00d883a 	mov	r6,r22
  804864:	b809883a 	mov	r4,r23
  804868:	08071b80 	call	8071b8 <__lshift>
  80486c:	1029883a 	mov	r20,r2
  804870:	d8800917 	ldw	r2,36(sp)
  804874:	1001151e 	bne	r2,zero,804ccc <_dtoa_r+0xedc>
  804878:	d8800517 	ldw	r2,20(sp)
  80487c:	0081020e 	bge	zero,r2,804c88 <_dtoa_r+0xe98>
  804880:	d8800717 	ldw	r2,28(sp)
  804884:	1000af1e 	bne	r2,zero,804b44 <_dtoa_r+0xd54>
  804888:	d8800417 	ldw	r2,16(sp)
  80488c:	10800044 	addi	r2,r2,1
  804890:	d8800415 	stw	r2,16(sp)
  804894:	dc800517 	ldw	r18,20(sp)
  804898:	dd400117 	ldw	r21,4(sp)
  80489c:	04400044 	movi	r17,1
  8048a0:	00000706 	br	8048c0 <_dtoa_r+0xad0>
  8048a4:	e00b883a 	mov	r5,fp
  8048a8:	000f883a 	mov	r7,zero
  8048ac:	01800284 	movi	r6,10
  8048b0:	b809883a 	mov	r4,r23
  8048b4:	08069540 	call	806954 <__multadd>
  8048b8:	1039883a 	mov	fp,r2
  8048bc:	8c400044 	addi	r17,r17,1
  8048c0:	a00b883a 	mov	r5,r20
  8048c4:	e009883a 	mov	r4,fp
  8048c8:	0803bd00 	call	803bd0 <quorem>
  8048cc:	14c00c04 	addi	r19,r2,48
  8048d0:	ac45883a 	add	r2,r21,r17
  8048d4:	14ffffc5 	stb	r19,-1(r2)
  8048d8:	8cbff216 	blt	r17,r18,8048a4 <_dtoa_r+0xab4>
  8048dc:	d8800517 	ldw	r2,20(sp)
  8048e0:	0081510e 	bge	zero,r2,804e28 <_dtoa_r+0x1038>
  8048e4:	d8c00117 	ldw	r3,4(sp)
  8048e8:	0023883a 	mov	r17,zero
  8048ec:	18ab883a 	add	r21,r3,r2
  8048f0:	e00b883a 	mov	r5,fp
  8048f4:	01800044 	movi	r6,1
  8048f8:	b809883a 	mov	r4,r23
  8048fc:	08071b80 	call	8071b8 <__lshift>
  804900:	1009883a 	mov	r4,r2
  804904:	a00b883a 	mov	r5,r20
  804908:	1039883a 	mov	fp,r2
  80490c:	08073400 	call	807340 <__mcmp>
  804910:	a93fffc3 	ldbu	r4,-1(r21)
  804914:	0081490e 	bge	zero,r2,804e3c <_dtoa_r+0x104c>
  804918:	d9400117 	ldw	r5,4(sp)
  80491c:	00000306 	br	80492c <_dtoa_r+0xb3c>
  804920:	19415426 	beq	r3,r5,804e74 <_dtoa_r+0x1084>
  804924:	193fffc3 	ldbu	r4,-1(r3)
  804928:	182b883a 	mov	r21,r3
  80492c:	20803fcc 	andi	r2,r4,255
  804930:	1080201c 	xori	r2,r2,128
  804934:	10bfe004 	addi	r2,r2,-128
  804938:	10800e60 	cmpeqi	r2,r2,57
  80493c:	a8ffffc4 	addi	r3,r21,-1
  804940:	103ff71e 	bne	r2,zero,804920 <_dtoa_r+0xb30>
  804944:	21000044 	addi	r4,r4,1
  804948:	19000005 	stb	r4,0(r3)
  80494c:	a00b883a 	mov	r5,r20
  804950:	b809883a 	mov	r4,r23
  804954:	08069300 	call	806930 <_Bfree>
  804958:	80000826 	beq	r16,zero,80497c <_dtoa_r+0xb8c>
  80495c:	88000426 	beq	r17,zero,804970 <_dtoa_r+0xb80>
  804960:	8c000326 	beq	r17,r16,804970 <_dtoa_r+0xb80>
  804964:	880b883a 	mov	r5,r17
  804968:	b809883a 	mov	r4,r23
  80496c:	08069300 	call	806930 <_Bfree>
  804970:	800b883a 	mov	r5,r16
  804974:	b809883a 	mov	r4,r23
  804978:	08069300 	call	806930 <_Bfree>
  80497c:	e00b883a 	mov	r5,fp
  804980:	b809883a 	mov	r4,r23
  804984:	08069300 	call	806930 <_Bfree>
  804988:	d8801f17 	ldw	r2,124(sp)
  80498c:	d8c00417 	ldw	r3,16(sp)
  804990:	a8000005 	stb	zero,0(r21)
  804994:	10c00015 	stw	r3,0(r2)
  804998:	d8802117 	ldw	r2,132(sp)
  80499c:	103d4626 	beq	r2,zero,803eb8 <_dtoa_r+0xc8>
  8049a0:	15400015 	stw	r21,0(r2)
  8049a4:	003d4406 	br	803eb8 <_dtoa_r+0xc8>
  8049a8:	d8000915 	stw	zero,36(sp)
  8049ac:	b0002416 	blt	r22,zero,804a40 <_dtoa_r+0xc50>
  8049b0:	d8000615 	stw	zero,24(sp)
  8049b4:	d8800317 	ldw	r2,12(sp)
  8049b8:	d8c00217 	ldw	r3,8(sp)
  8049bc:	d8000815 	stw	zero,32(sp)
  8049c0:	b0ad883a 	add	r22,r22,r2
  8049c4:	d8800415 	stw	r2,16(sp)
  8049c8:	188002a8 	cmpgeui	r2,r3,10
  8049cc:	103db326 	beq	r2,zero,80409c <_dtoa_r+0x2ac>
  8049d0:	00800044 	movi	r2,1
  8049d4:	d8800715 	stw	r2,28(sp)
  8049d8:	00bfffc4 	movi	r2,-1
  8049dc:	04000044 	movi	r16,1
  8049e0:	d8000215 	stw	zero,8(sp)
  8049e4:	d8800515 	stw	r2,20(sp)
  8049e8:	d8001e15 	stw	zero,120(sp)
  8049ec:	d8800517 	ldw	r2,20(sp)
  8049f0:	b8001115 	stw	zero,68(r23)
  8049f4:	000b883a 	mov	r5,zero
  8049f8:	d8800b15 	stw	r2,44(sp)
  8049fc:	003dc406 	br	804110 <_dtoa_r+0x320>
  804a00:	188000e0 	cmpeqi	r2,r3,3
  804a04:	d8000715 	stw	zero,28(sp)
  804a08:	1002ac26 	beq	r2,zero,8054bc <_dtoa_r+0x16cc>
  804a0c:	d8801e17 	ldw	r2,120(sp)
  804a10:	d8c00417 	ldw	r3,16(sp)
  804a14:	10c5883a 	add	r2,r2,r3
  804a18:	d8800b15 	stw	r2,44(sp)
  804a1c:	10800044 	addi	r2,r2,1
  804a20:	d8800515 	stw	r2,20(sp)
  804a24:	100d883a 	mov	r6,r2
  804a28:	00bdae16 	blt	zero,r2,8040e4 <_dtoa_r+0x2f4>
  804a2c:	01800044 	movi	r6,1
  804a30:	003dac06 	br	8040e4 <_dtoa_r+0x2f4>
  804a34:	00800044 	movi	r2,1
  804a38:	d8800915 	stw	r2,36(sp)
  804a3c:	b03d890e 	bge	r22,zero,804064 <_dtoa_r+0x274>
  804a40:	00800044 	movi	r2,1
  804a44:	1405c83a 	sub	r2,r2,r16
  804a48:	d8800615 	stw	r2,24(sp)
  804a4c:	002d883a 	mov	r22,zero
  804a50:	003d8506 	br	804068 <_dtoa_r+0x278>
  804a54:	a809883a 	mov	r4,r21
  804a58:	080d7180 	call	80d718 <__floatsidf>
  804a5c:	900d883a 	mov	r6,r18
  804a60:	b00f883a 	mov	r7,r22
  804a64:	1009883a 	mov	r4,r2
  804a68:	180b883a 	mov	r5,r3
  804a6c:	080c3940 	call	80c394 <__eqdf2>
  804a70:	103d6926 	beq	r2,zero,804018 <_dtoa_r+0x228>
  804a74:	a8bfffc4 	addi	r2,r21,-1
  804a78:	d8800315 	stw	r2,12(sp)
  804a7c:	003d6606 	br	804018 <_dtoa_r+0x228>
  804a80:	00802074 	movhi	r2,129
  804a84:	1081ab04 	addi	r2,r2,1708
  804a88:	d8800115 	stw	r2,4(sp)
  804a8c:	003d0a06 	br	803eb8 <_dtoa_r+0xc8>
  804a90:	dd000817 	ldw	r20,32(sp)
  804a94:	dc800617 	ldw	r18,24(sp)
  804a98:	0021883a 	mov	r16,zero
  804a9c:	003f3206 	br	804768 <_dtoa_r+0x978>
  804aa0:	e00b883a 	mov	r5,fp
  804aa4:	100d883a 	mov	r6,r2
  804aa8:	b809883a 	mov	r4,r23
  804aac:	08071b80 	call	8071b8 <__lshift>
  804ab0:	1039883a 	mov	fp,r2
  804ab4:	003f6806 	br	804858 <_dtoa_r+0xa68>
  804ab8:	00800704 	movi	r2,28
  804abc:	003f5f06 	br	80483c <_dtoa_r+0xa4c>
  804ac0:	01000804 	movi	r4,32
  804ac4:	2089c83a 	sub	r4,r4,r2
  804ac8:	9908983a 	sll	r4,r19,r4
  804acc:	003d1d06 	br	803f44 <_dtoa_r+0x154>
  804ad0:	04000044 	movi	r16,1
  804ad4:	003d7606 	br	8040b0 <_dtoa_r+0x2c0>
  804ad8:	100b883a 	mov	r5,r2
  804adc:	b809883a 	mov	r4,r23
  804ae0:	08070700 	call	807070 <__pow5mult>
  804ae4:	d8c00217 	ldw	r3,8(sp)
  804ae8:	1029883a 	mov	r20,r2
  804aec:	18c00090 	cmplti	r3,r3,2
  804af0:	1801511e 	bne	r3,zero,805038 <_dtoa_r+0x1248>
  804af4:	0023883a 	mov	r17,zero
  804af8:	a0800417 	ldw	r2,16(r20)
  804afc:	10800104 	addi	r2,r2,4
  804b00:	100490ba 	slli	r2,r2,2
  804b04:	a085883a 	add	r2,r20,r2
  804b08:	11000017 	ldw	r4,0(r2)
  804b0c:	0806be80 	call	806be8 <__hi0bits>
  804b10:	00c00804 	movi	r3,32
  804b14:	1885c83a 	sub	r2,r3,r2
  804b18:	003f3f06 	br	804818 <_dtoa_r+0xa28>
  804b1c:	800b883a 	mov	r5,r16
  804b20:	000f883a 	mov	r7,zero
  804b24:	01800284 	movi	r6,10
  804b28:	b809883a 	mov	r4,r23
  804b2c:	08069540 	call	806954 <__multadd>
  804b30:	1021883a 	mov	r16,r2
  804b34:	d8800b17 	ldw	r2,44(sp)
  804b38:	00824b0e 	bge	zero,r2,805468 <_dtoa_r+0x1678>
  804b3c:	dd400415 	stw	r21,16(sp)
  804b40:	d8800515 	stw	r2,20(sp)
  804b44:	0480ac16 	blt	zero,r18,804df8 <_dtoa_r+0x1008>
  804b48:	8801731e 	bne	r17,zero,805118 <_dtoa_r+0x1328>
  804b4c:	8025883a 	mov	r18,r16
  804b50:	dd800117 	ldw	r22,4(sp)
  804b54:	d9000517 	ldw	r4,20(sp)
  804b58:	98c0004c 	andi	r3,r19,1
  804b5c:	b0bfffc4 	addi	r2,r22,-1
  804b60:	1105883a 	add	r2,r2,r4
  804b64:	d8800515 	stw	r2,20(sp)
  804b68:	d8800217 	ldw	r2,8(sp)
  804b6c:	d8c00815 	stw	r3,32(sp)
  804b70:	1884b03a 	or	r2,r3,r2
  804b74:	d8800715 	stw	r2,28(sp)
  804b78:	00002906 	br	804c20 <_dtoa_r+0xe30>
  804b7c:	e009883a 	mov	r4,fp
  804b80:	08073400 	call	807340 <__mcmp>
  804b84:	980b883a 	mov	r5,r19
  804b88:	b809883a 	mov	r4,r23
  804b8c:	d8800315 	stw	r2,12(sp)
  804b90:	08069300 	call	806930 <_Bfree>
  804b94:	d8800317 	ldw	r2,12(sp)
  804b98:	1000021e 	bne	r2,zero,804ba4 <_dtoa_r+0xdb4>
  804b9c:	d8c00717 	ldw	r3,28(sp)
  804ba0:	18022326 	beq	r3,zero,805430 <_dtoa_r+0x1640>
  804ba4:	b4c00044 	addi	r19,r22,1
  804ba8:	88012916 	blt	r17,zero,805050 <_dtoa_r+0x1260>
  804bac:	d8c00217 	ldw	r3,8(sp)
  804bb0:	88e2b03a 	or	r17,r17,r3
  804bb4:	d8c00817 	ldw	r3,32(sp)
  804bb8:	1c62b03a 	or	r17,r3,r17
  804bbc:	88012426 	beq	r17,zero,805050 <_dtoa_r+0x1260>
  804bc0:	00816f16 	blt	zero,r2,805180 <_dtoa_r+0x1390>
  804bc4:	d8800517 	ldw	r2,20(sp)
  804bc8:	b5400005 	stb	r21,0(r22)
  804bcc:	15817926 	beq	r2,r22,8051b4 <_dtoa_r+0x13c4>
  804bd0:	e00b883a 	mov	r5,fp
  804bd4:	000f883a 	mov	r7,zero
  804bd8:	01800284 	movi	r6,10
  804bdc:	b809883a 	mov	r4,r23
  804be0:	08069540 	call	806954 <__multadd>
  804be4:	1039883a 	mov	fp,r2
  804be8:	800b883a 	mov	r5,r16
  804bec:	000f883a 	mov	r7,zero
  804bf0:	01800284 	movi	r6,10
  804bf4:	b809883a 	mov	r4,r23
  804bf8:	84801f26 	beq	r16,r18,804c78 <_dtoa_r+0xe88>
  804bfc:	08069540 	call	806954 <__multadd>
  804c00:	900b883a 	mov	r5,r18
  804c04:	000f883a 	mov	r7,zero
  804c08:	01800284 	movi	r6,10
  804c0c:	b809883a 	mov	r4,r23
  804c10:	1021883a 	mov	r16,r2
  804c14:	08069540 	call	806954 <__multadd>
  804c18:	1025883a 	mov	r18,r2
  804c1c:	982d883a 	mov	r22,r19
  804c20:	a00b883a 	mov	r5,r20
  804c24:	e009883a 	mov	r4,fp
  804c28:	0803bd00 	call	803bd0 <quorem>
  804c2c:	800b883a 	mov	r5,r16
  804c30:	e009883a 	mov	r4,fp
  804c34:	102b883a 	mov	r21,r2
  804c38:	d8800615 	stw	r2,24(sp)
  804c3c:	08073400 	call	807340 <__mcmp>
  804c40:	a00b883a 	mov	r5,r20
  804c44:	900d883a 	mov	r6,r18
  804c48:	b809883a 	mov	r4,r23
  804c4c:	1023883a 	mov	r17,r2
  804c50:	08073980 	call	807398 <__mdiff>
  804c54:	1027883a 	mov	r19,r2
  804c58:	10800317 	ldw	r2,12(r2)
  804c5c:	ad400c04 	addi	r21,r21,48
  804c60:	980b883a 	mov	r5,r19
  804c64:	103fc526 	beq	r2,zero,804b7c <_dtoa_r+0xd8c>
  804c68:	b809883a 	mov	r4,r23
  804c6c:	08069300 	call	806930 <_Bfree>
  804c70:	00800044 	movi	r2,1
  804c74:	003fcb06 	br	804ba4 <_dtoa_r+0xdb4>
  804c78:	08069540 	call	806954 <__multadd>
  804c7c:	1021883a 	mov	r16,r2
  804c80:	1025883a 	mov	r18,r2
  804c84:	003fe506 	br	804c1c <_dtoa_r+0xe2c>
  804c88:	d8800217 	ldw	r2,8(sp)
  804c8c:	108000d0 	cmplti	r2,r2,3
  804c90:	10003e26 	beq	r2,zero,804d8c <_dtoa_r+0xf9c>
  804c94:	d8800717 	ldw	r2,28(sp)
  804c98:	103faa1e 	bne	r2,zero,804b44 <_dtoa_r+0xd54>
  804c9c:	a00b883a 	mov	r5,r20
  804ca0:	e009883a 	mov	r4,fp
  804ca4:	0803bd00 	call	803bd0 <quorem>
  804ca8:	14c00c04 	addi	r19,r2,48
  804cac:	d8800117 	ldw	r2,4(sp)
  804cb0:	0023883a 	mov	r17,zero
  804cb4:	15400044 	addi	r21,r2,1
  804cb8:	14c00005 	stb	r19,0(r2)
  804cbc:	d8800417 	ldw	r2,16(sp)
  804cc0:	10800044 	addi	r2,r2,1
  804cc4:	d8800415 	stw	r2,16(sp)
  804cc8:	003f0906 	br	8048f0 <_dtoa_r+0xb00>
  804ccc:	a00b883a 	mov	r5,r20
  804cd0:	e009883a 	mov	r4,fp
  804cd4:	08073400 	call	807340 <__mcmp>
  804cd8:	103ee70e 	bge	r2,zero,804878 <_dtoa_r+0xa88>
  804cdc:	e00b883a 	mov	r5,fp
  804ce0:	000f883a 	mov	r7,zero
  804ce4:	01800284 	movi	r6,10
  804ce8:	b809883a 	mov	r4,r23
  804cec:	08069540 	call	806954 <__multadd>
  804cf0:	d8c00417 	ldw	r3,16(sp)
  804cf4:	1039883a 	mov	fp,r2
  804cf8:	d8800717 	ldw	r2,28(sp)
  804cfc:	1d7fffc4 	addi	r21,r3,-1
  804d00:	103f861e 	bne	r2,zero,804b1c <_dtoa_r+0xd2c>
  804d04:	d8800b17 	ldw	r2,44(sp)
  804d08:	0081d20e 	bge	zero,r2,805454 <_dtoa_r+0x1664>
  804d0c:	d8800515 	stw	r2,20(sp)
  804d10:	003ee006 	br	804894 <_dtoa_r+0xaa4>
  804d14:	00802074 	movhi	r2,129
  804d18:	1007883a 	mov	r3,r2
  804d1c:	18c1b404 	addi	r3,r3,1744
  804d20:	00802074 	movhi	r2,129
  804d24:	d8c00115 	stw	r3,4(sp)
  804d28:	1081b4c4 	addi	r2,r2,1747
  804d2c:	003ded06 	br	8044e4 <_dtoa_r+0x6f4>
  804d30:	00800044 	movi	r2,1
  804d34:	d8800715 	stw	r2,28(sp)
  804d38:	003f3406 	br	804a0c <_dtoa_r+0xc1c>
  804d3c:	983eb21e 	bne	r19,zero,804808 <_dtoa_r+0xa18>
  804d40:	00800434 	movhi	r2,16
  804d44:	10bfffc4 	addi	r2,r2,-1
  804d48:	8884703a 	and	r2,r17,r2
  804d4c:	103eae1e 	bne	r2,zero,804808 <_dtoa_r+0xa18>
  804d50:	8c5ffc2c 	andhi	r17,r17,32752
  804d54:	883eac26 	beq	r17,zero,804808 <_dtoa_r+0xa18>
  804d58:	d8800617 	ldw	r2,24(sp)
  804d5c:	b5800044 	addi	r22,r22,1
  804d60:	04400044 	movi	r17,1
  804d64:	10800044 	addi	r2,r2,1
  804d68:	d8800615 	stw	r2,24(sp)
  804d6c:	003ea706 	br	80480c <_dtoa_r+0xa1c>
  804d70:	00800044 	movi	r2,1
  804d74:	d8800515 	stw	r2,20(sp)
  804d78:	d8801e15 	stw	r2,120(sp)
  804d7c:	003f1b06 	br	8049ec <_dtoa_r+0xbfc>
  804d80:	d8800b17 	ldw	r2,44(sp)
  804d84:	dd400415 	stw	r21,16(sp)
  804d88:	d8800515 	stw	r2,20(sp)
  804d8c:	d8800517 	ldw	r2,20(sp)
  804d90:	103e081e 	bne	r2,zero,8045b4 <_dtoa_r+0x7c4>
  804d94:	a00b883a 	mov	r5,r20
  804d98:	b809883a 	mov	r4,r23
  804d9c:	000f883a 	mov	r7,zero
  804da0:	01800144 	movi	r6,5
  804da4:	08069540 	call	806954 <__multadd>
  804da8:	100b883a 	mov	r5,r2
  804dac:	e009883a 	mov	r4,fp
  804db0:	1029883a 	mov	r20,r2
  804db4:	08073400 	call	807340 <__mcmp>
  804db8:	00bdfe0e 	bge	zero,r2,8045b4 <_dtoa_r+0x7c4>
  804dbc:	d8c00117 	ldw	r3,4(sp)
  804dc0:	00800c44 	movi	r2,49
  804dc4:	18800005 	stb	r2,0(r3)
  804dc8:	d8800417 	ldw	r2,16(sp)
  804dcc:	1d400044 	addi	r21,r3,1
  804dd0:	14400044 	addi	r17,r2,1
  804dd4:	a00b883a 	mov	r5,r20
  804dd8:	b809883a 	mov	r4,r23
  804ddc:	08069300 	call	806930 <_Bfree>
  804de0:	88800044 	addi	r2,r17,1
  804de4:	d8800415 	stw	r2,16(sp)
  804de8:	803ee11e 	bne	r16,zero,804970 <_dtoa_r+0xb80>
  804dec:	003ee306 	br	80497c <_dtoa_r+0xb8c>
  804df0:	b005883a 	mov	r2,r22
  804df4:	003e6006 	br	804778 <_dtoa_r+0x988>
  804df8:	800b883a 	mov	r5,r16
  804dfc:	900d883a 	mov	r6,r18
  804e00:	b809883a 	mov	r4,r23
  804e04:	08071b80 	call	8071b8 <__lshift>
  804e08:	1021883a 	mov	r16,r2
  804e0c:	003f4e06 	br	804b48 <_dtoa_r+0xd58>
  804e10:	1529c83a 	sub	r20,r2,r20
  804e14:	003e4906 	br	80473c <_dtoa_r+0x94c>
  804e18:	dcc00c15 	stw	r19,48(sp)
  804e1c:	8825883a 	mov	r18,r17
  804e20:	05400084 	movi	r21,2
  804e24:	003cdf06 	br	8041a4 <_dtoa_r+0x3b4>
  804e28:	00800044 	movi	r2,1
  804e2c:	003ead06 	br	8048e4 <_dtoa_r+0xaf4>
  804e30:	00800044 	movi	r2,1
  804e34:	d8800715 	stw	r2,28(sp)
  804e38:	003ca506 	br	8040d0 <_dtoa_r+0x2e0>
  804e3c:	1000021e 	bne	r2,zero,804e48 <_dtoa_r+0x1058>
  804e40:	98c0004c 	andi	r3,r19,1
  804e44:	183eb41e 	bne	r3,zero,804918 <_dtoa_r+0xb28>
  804e48:	2005883a 	mov	r2,r4
  804e4c:	00000206 	br	804e58 <_dtoa_r+0x1068>
  804e50:	a8bfff83 	ldbu	r2,-2(r21)
  804e54:	182b883a 	mov	r21,r3
  804e58:	10803fcc 	andi	r2,r2,255
  804e5c:	1080201c 	xori	r2,r2,128
  804e60:	10bfe004 	addi	r2,r2,-128
  804e64:	10800c18 	cmpnei	r2,r2,48
  804e68:	a8ffffc4 	addi	r3,r21,-1
  804e6c:	103ff826 	beq	r2,zero,804e50 <_dtoa_r+0x1060>
  804e70:	003eb606 	br	80494c <_dtoa_r+0xb5c>
  804e74:	d8c00117 	ldw	r3,4(sp)
  804e78:	00800c44 	movi	r2,49
  804e7c:	18800005 	stb	r2,0(r3)
  804e80:	d8800417 	ldw	r2,16(sp)
  804e84:	10800044 	addi	r2,r2,1
  804e88:	d8800415 	stw	r2,16(sp)
  804e8c:	003eaf06 	br	80494c <_dtoa_r+0xb5c>
  804e90:	d8c00a17 	ldw	r3,40(sp)
  804e94:	18011826 	beq	r3,zero,8052f8 <_dtoa_r+0x1508>
  804e98:	d8c00617 	ldw	r3,24(sp)
  804e9c:	10810cc4 	addi	r2,r2,1075
  804ea0:	b0ad883a 	add	r22,r22,r2
  804ea4:	1885883a 	add	r2,r3,r2
  804ea8:	dd000817 	ldw	r20,32(sp)
  804eac:	1825883a 	mov	r18,r3
  804eb0:	d8800615 	stw	r2,24(sp)
  804eb4:	003e2806 	br	804758 <_dtoa_r+0x968>
  804eb8:	a809883a 	mov	r4,r21
  804ebc:	080d7180 	call	80d718 <__floatsidf>
  804ec0:	800d883a 	mov	r6,r16
  804ec4:	900f883a 	mov	r7,r18
  804ec8:	1009883a 	mov	r4,r2
  804ecc:	180b883a 	mov	r5,r3
  804ed0:	080c5e40 	call	80c5e4 <__muldf3>
  804ed4:	000d883a 	mov	r6,zero
  804ed8:	01d00734 	movhi	r7,16412
  804edc:	1009883a 	mov	r4,r2
  804ee0:	180b883a 	mov	r5,r3
  804ee4:	080b1740 	call	80b174 <__adddf3>
  804ee8:	1029883a 	mov	r20,r2
  804eec:	00bf3034 	movhi	r2,64704
  804ef0:	1885883a 	add	r2,r3,r2
  804ef4:	d8800c15 	stw	r2,48(sp)
  804ef8:	8009883a 	mov	r4,r16
  804efc:	900b883a 	mov	r5,r18
  804f00:	000d883a 	mov	r6,zero
  804f04:	01d00534 	movhi	r7,16404
  804f08:	080cd900 	call	80cd90 <__subdf3>
  804f0c:	dd400c17 	ldw	r21,48(sp)
  804f10:	a00d883a 	mov	r6,r20
  804f14:	1009883a 	mov	r4,r2
  804f18:	a80f883a 	mov	r7,r21
  804f1c:	180b883a 	mov	r5,r3
  804f20:	1025883a 	mov	r18,r2
  804f24:	1821883a 	mov	r16,r3
  804f28:	080c4140 	call	80c414 <__gedf2>
  804f2c:	00812f16 	blt	zero,r2,8053ec <_dtoa_r+0x15fc>
  804f30:	a9e0003c 	xorhi	r7,r21,32768
  804f34:	a00d883a 	mov	r6,r20
  804f38:	9009883a 	mov	r4,r18
  804f3c:	800b883a 	mov	r5,r16
  804f40:	080c4fc0 	call	80c4fc <__ledf2>
  804f44:	103d7d0e 	bge	r2,zero,80453c <_dtoa_r+0x74c>
  804f48:	0029883a 	mov	r20,zero
  804f4c:	0021883a 	mov	r16,zero
  804f50:	003d9806 	br	8045b4 <_dtoa_r+0x7c4>
  804f54:	d9800817 	ldw	r6,32(sp)
  804f58:	e00b883a 	mov	r5,fp
  804f5c:	b809883a 	mov	r4,r23
  804f60:	08070700 	call	807070 <__pow5mult>
  804f64:	1039883a 	mov	fp,r2
  804f68:	003e1e06 	br	8047e4 <_dtoa_r+0x9f4>
  804f6c:	d8800417 	ldw	r2,16(sp)
  804f70:	1000ed26 	beq	r2,zero,805328 <_dtoa_r+0x1538>
  804f74:	00a9c83a 	sub	r20,zero,r2
  804f78:	a08003cc 	andi	r2,r20,15
  804f7c:	100690fa 	slli	r3,r2,3
  804f80:	00802074 	movhi	r2,129
  804f84:	1081f404 	addi	r2,r2,2000
  804f88:	10c5883a 	add	r2,r2,r3
  804f8c:	11800017 	ldw	r6,0(r2)
  804f90:	11c00117 	ldw	r7,4(r2)
  804f94:	a029d13a 	srai	r20,r20,4
  804f98:	9809883a 	mov	r4,r19
  804f9c:	880b883a 	mov	r5,r17
  804fa0:	080c5e40 	call	80c5e4 <__muldf3>
  804fa4:	1021883a 	mov	r16,r2
  804fa8:	1825883a 	mov	r18,r3
  804fac:	a0013826 	beq	r20,zero,805490 <_dtoa_r+0x16a0>
  804fb0:	02002074 	movhi	r8,129
  804fb4:	05400084 	movi	r21,2
  804fb8:	4201ea04 	addi	r8,r8,1960
  804fbc:	1009883a 	mov	r4,r2
  804fc0:	9805883a 	mov	r2,r19
  804fc4:	180b883a 	mov	r5,r3
  804fc8:	dc000c15 	stw	r16,48(sp)
  804fcc:	8827883a 	mov	r19,r17
  804fd0:	0007883a 	mov	r3,zero
  804fd4:	a823883a 	mov	r17,r21
  804fd8:	4021883a 	mov	r16,r8
  804fdc:	102b883a 	mov	r21,r2
  804fe0:	a180004c 	andi	r6,r20,1
  804fe4:	30000726 	beq	r6,zero,805004 <_dtoa_r+0x1214>
  804fe8:	81800017 	ldw	r6,0(r16)
  804fec:	81c00117 	ldw	r7,4(r16)
  804ff0:	8c400044 	addi	r17,r17,1
  804ff4:	080c5e40 	call	80c5e4 <__muldf3>
  804ff8:	180b883a 	mov	r5,r3
  804ffc:	1009883a 	mov	r4,r2
  805000:	00c00044 	movi	r3,1
  805004:	a029d07a 	srai	r20,r20,1
  805008:	84000204 	addi	r16,r16,8
  80500c:	a03ff41e 	bne	r20,zero,804fe0 <_dtoa_r+0x11f0>
  805010:	a805883a 	mov	r2,r21
  805014:	18c03fcc 	andi	r3,r3,255
  805018:	882b883a 	mov	r21,r17
  80501c:	dc000c17 	ldw	r16,48(sp)
  805020:	9823883a 	mov	r17,r19
  805024:	1027883a 	mov	r19,r2
  805028:	183c7726 	beq	r3,zero,804208 <_dtoa_r+0x418>
  80502c:	2021883a 	mov	r16,r4
  805030:	2825883a 	mov	r18,r5
  805034:	003c7406 	br	804208 <_dtoa_r+0x418>
  805038:	983eae1e 	bne	r19,zero,804af4 <_dtoa_r+0xd04>
  80503c:	00800434 	movhi	r2,16
  805040:	10bfffc4 	addi	r2,r2,-1
  805044:	8884703a 	and	r2,r17,r2
  805048:	103f4126 	beq	r2,zero,804d50 <_dtoa_r+0xf60>
  80504c:	003ea906 	br	804af4 <_dtoa_r+0xd04>
  805050:	9807883a 	mov	r3,r19
  805054:	a827883a 	mov	r19,r21
  805058:	182b883a 	mov	r21,r3
  80505c:	d8c00417 	ldw	r3,16(sp)
  805060:	18c00044 	addi	r3,r3,1
  805064:	d8c00415 	stw	r3,16(sp)
  805068:	00800d0e 	bge	zero,r2,8050a0 <_dtoa_r+0x12b0>
  80506c:	e00b883a 	mov	r5,fp
  805070:	b809883a 	mov	r4,r23
  805074:	01800044 	movi	r6,1
  805078:	08071b80 	call	8071b8 <__lshift>
  80507c:	a00b883a 	mov	r5,r20
  805080:	1009883a 	mov	r4,r2
  805084:	1039883a 	mov	fp,r2
  805088:	08073400 	call	807340 <__mcmp>
  80508c:	0080df0e 	bge	zero,r2,80540c <_dtoa_r+0x161c>
  805090:	98c00e60 	cmpeqi	r3,r19,57
  805094:	1800ce1e 	bne	r3,zero,8053d0 <_dtoa_r+0x15e0>
  805098:	d8800617 	ldw	r2,24(sp)
  80509c:	14c00c44 	addi	r19,r2,49
  8050a0:	8023883a 	mov	r17,r16
  8050a4:	b4c00005 	stb	r19,0(r22)
  8050a8:	9021883a 	mov	r16,r18
  8050ac:	003e2706 	br	80494c <_dtoa_r+0xb5c>
  8050b0:	b82b883a 	mov	r21,r23
  8050b4:	ddc00217 	ldw	r23,8(sp)
  8050b8:	200d883a 	mov	r6,r4
  8050bc:	280f883a 	mov	r7,r5
  8050c0:	080b1740 	call	80b174 <__adddf3>
  8050c4:	180b883a 	mov	r5,r3
  8050c8:	800d883a 	mov	r6,r16
  8050cc:	900f883a 	mov	r7,r18
  8050d0:	1009883a 	mov	r4,r2
  8050d4:	1823883a 	mov	r17,r3
  8050d8:	1027883a 	mov	r19,r2
  8050dc:	080c4140 	call	80c414 <__gedf2>
  8050e0:	d8c00417 	ldw	r3,16(sp)
  8050e4:	18c00044 	addi	r3,r3,1
  8050e8:	d8c00415 	stw	r3,16(sp)
  8050ec:	00808c16 	blt	zero,r2,805320 <_dtoa_r+0x1530>
  8050f0:	800d883a 	mov	r6,r16
  8050f4:	900f883a 	mov	r7,r18
  8050f8:	9809883a 	mov	r4,r19
  8050fc:	880b883a 	mov	r5,r17
  805100:	080c3940 	call	80c394 <__eqdf2>
  805104:	1000021e 	bne	r2,zero,805110 <_dtoa_r+0x1320>
  805108:	ad40004c 	andi	r21,r21,1
  80510c:	a800841e 	bne	r21,zero,805320 <_dtoa_r+0x1530>
  805110:	a02b883a 	mov	r21,r20
  805114:	003e1906 	br	80497c <_dtoa_r+0xb8c>
  805118:	81400117 	ldw	r5,4(r16)
  80511c:	b809883a 	mov	r4,r23
  805120:	080688c0 	call	80688c <_Balloc>
  805124:	1023883a 	mov	r17,r2
  805128:	1000f326 	beq	r2,zero,8054f8 <_dtoa_r+0x1708>
  80512c:	81800417 	ldw	r6,16(r16)
  805130:	81400304 	addi	r5,r16,12
  805134:	11000304 	addi	r4,r2,12
  805138:	31800084 	addi	r6,r6,2
  80513c:	300c90ba 	slli	r6,r6,2
  805140:	08066600 	call	806660 <memcpy>
  805144:	01800044 	movi	r6,1
  805148:	880b883a 	mov	r5,r17
  80514c:	b809883a 	mov	r4,r23
  805150:	08071b80 	call	8071b8 <__lshift>
  805154:	1025883a 	mov	r18,r2
  805158:	003e7d06 	br	804b50 <_dtoa_r+0xd60>
  80515c:	e00b883a 	mov	r5,fp
  805160:	b809883a 	mov	r4,r23
  805164:	08070700 	call	807070 <__pow5mult>
  805168:	1039883a 	mov	fp,r2
  80516c:	003d9d06 	br	8047e4 <_dtoa_r+0x9f4>
  805170:	d8800617 	ldw	r2,24(sp)
  805174:	d8c00517 	ldw	r3,20(sp)
  805178:	10e5c83a 	sub	r18,r2,r3
  80517c:	003d7606 	br	804758 <_dtoa_r+0x968>
  805180:	d8c00417 	ldw	r3,16(sp)
  805184:	9805883a 	mov	r2,r19
  805188:	a827883a 	mov	r19,r21
  80518c:	18c00044 	addi	r3,r3,1
  805190:	102b883a 	mov	r21,r2
  805194:	d8c00415 	stw	r3,16(sp)
  805198:	98800e58 	cmpnei	r2,r19,57
  80519c:	10008c26 	beq	r2,zero,8053d0 <_dtoa_r+0x15e0>
  8051a0:	98c00044 	addi	r3,r19,1
  8051a4:	8023883a 	mov	r17,r16
  8051a8:	b0c00005 	stb	r3,0(r22)
  8051ac:	9021883a 	mov	r16,r18
  8051b0:	003de606 	br	80494c <_dtoa_r+0xb5c>
  8051b4:	9805883a 	mov	r2,r19
  8051b8:	a827883a 	mov	r19,r21
  8051bc:	102b883a 	mov	r21,r2
  8051c0:	d8800417 	ldw	r2,16(sp)
  8051c4:	8023883a 	mov	r17,r16
  8051c8:	9021883a 	mov	r16,r18
  8051cc:	10800044 	addi	r2,r2,1
  8051d0:	d8800415 	stw	r2,16(sp)
  8051d4:	003dc606 	br	8048f0 <_dtoa_r+0xb00>
  8051d8:	d9400c17 	ldw	r5,48(sp)
  8051dc:	a009883a 	mov	r4,r20
  8051e0:	080c5e40 	call	80c5e4 <__muldf3>
  8051e4:	d9800d17 	ldw	r6,52(sp)
  8051e8:	d9400117 	ldw	r5,4(sp)
  8051ec:	d9001017 	ldw	r4,64(sp)
  8051f0:	d8800c15 	stw	r2,48(sp)
  8051f4:	d8c00d15 	stw	r3,52(sp)
  8051f8:	29000005 	stb	r4,0(r5)
  8051fc:	31000058 	cmpnei	r4,r6,1
  805200:	29a9883a 	add	r20,r5,r6
  805204:	2000a026 	beq	r4,zero,805488 <_dtoa_r+0x1698>
  805208:	dc400e15 	stw	r17,56(sp)
  80520c:	8009883a 	mov	r4,r16
  805210:	900b883a 	mov	r5,r18
  805214:	a823883a 	mov	r17,r21
  805218:	000d883a 	mov	r6,zero
  80521c:	01d00934 	movhi	r7,16420
  805220:	080c5e40 	call	80c5e4 <__muldf3>
  805224:	180b883a 	mov	r5,r3
  805228:	1009883a 	mov	r4,r2
  80522c:	1825883a 	mov	r18,r3
  805230:	102b883a 	mov	r21,r2
  805234:	080d6980 	call	80d698 <__fixdfsi>
  805238:	1009883a 	mov	r4,r2
  80523c:	1021883a 	mov	r16,r2
  805240:	080d7180 	call	80d718 <__floatsidf>
  805244:	a809883a 	mov	r4,r21
  805248:	900b883a 	mov	r5,r18
  80524c:	100d883a 	mov	r6,r2
  805250:	180f883a 	mov	r7,r3
  805254:	8c400044 	addi	r17,r17,1
  805258:	84000c04 	addi	r16,r16,48
  80525c:	080cd900 	call	80cd90 <__subdf3>
  805260:	8c3fffc5 	stb	r16,-1(r17)
  805264:	1009883a 	mov	r4,r2
  805268:	180b883a 	mov	r5,r3
  80526c:	a47fea1e 	bne	r20,r17,805218 <_dtoa_r+0x1428>
  805270:	dc400e17 	ldw	r17,56(sp)
  805274:	1021883a 	mov	r16,r2
  805278:	1825883a 	mov	r18,r3
  80527c:	d9000c17 	ldw	r4,48(sp)
  805280:	d9400d17 	ldw	r5,52(sp)
  805284:	000d883a 	mov	r6,zero
  805288:	01cff834 	movhi	r7,16352
  80528c:	080b1740 	call	80b174 <__adddf3>
  805290:	800d883a 	mov	r6,r16
  805294:	900f883a 	mov	r7,r18
  805298:	1009883a 	mov	r4,r2
  80529c:	180b883a 	mov	r5,r3
  8052a0:	080c4fc0 	call	80c4fc <__ledf2>
  8052a4:	10005416 	blt	r2,zero,8053f8 <_dtoa_r+0x1608>
  8052a8:	d9800c17 	ldw	r6,48(sp)
  8052ac:	d9c00d17 	ldw	r7,52(sp)
  8052b0:	0009883a 	mov	r4,zero
  8052b4:	014ff834 	movhi	r5,16352
  8052b8:	080cd900 	call	80cd90 <__subdf3>
  8052bc:	800d883a 	mov	r6,r16
  8052c0:	900f883a 	mov	r7,r18
  8052c4:	1009883a 	mov	r4,r2
  8052c8:	180b883a 	mov	r5,r3
  8052cc:	080c4140 	call	80c414 <__gedf2>
  8052d0:	00bc9a0e 	bge	zero,r2,80453c <_dtoa_r+0x74c>
  8052d4:	a0bfffc7 	ldb	r2,-1(r20)
  8052d8:	a02b883a 	mov	r21,r20
  8052dc:	a53fffc4 	addi	r20,r20,-1
  8052e0:	10800c20 	cmpeqi	r2,r2,48
  8052e4:	103ffb1e 	bne	r2,zero,8052d4 <_dtoa_r+0x14e4>
  8052e8:	d8801117 	ldw	r2,68(sp)
  8052ec:	10800044 	addi	r2,r2,1
  8052f0:	d8800415 	stw	r2,16(sp)
  8052f4:	003da106 	br	80497c <_dtoa_r+0xb8c>
  8052f8:	d8c01217 	ldw	r3,72(sp)
  8052fc:	d9000617 	ldw	r4,24(sp)
  805300:	00800d84 	movi	r2,54
  805304:	10c5c83a 	sub	r2,r2,r3
  805308:	b0ad883a 	add	r22,r22,r2
  80530c:	2085883a 	add	r2,r4,r2
  805310:	dd000817 	ldw	r20,32(sp)
  805314:	2025883a 	mov	r18,r4
  805318:	d8800615 	stw	r2,24(sp)
  80531c:	003d0e06 	br	804758 <_dtoa_r+0x968>
  805320:	d9000117 	ldw	r4,4(sp)
  805324:	003c4b06 	br	804454 <_dtoa_r+0x664>
  805328:	9821883a 	mov	r16,r19
  80532c:	8825883a 	mov	r18,r17
  805330:	05400084 	movi	r21,2
  805334:	003bb406 	br	804208 <_dtoa_r+0x418>
  805338:	d8800517 	ldw	r2,20(sp)
  80533c:	103ede26 	beq	r2,zero,804eb8 <_dtoa_r+0x10c8>
  805340:	d8800b17 	ldw	r2,44(sp)
  805344:	00bc7d0e 	bge	zero,r2,80453c <_dtoa_r+0x74c>
  805348:	900b883a 	mov	r5,r18
  80534c:	8009883a 	mov	r4,r16
  805350:	000d883a 	mov	r6,zero
  805354:	01d00934 	movhi	r7,16420
  805358:	080c5e40 	call	80c5e4 <__muldf3>
  80535c:	a9000044 	addi	r4,r21,1
  805360:	1021883a 	mov	r16,r2
  805364:	1825883a 	mov	r18,r3
  805368:	080d7180 	call	80d718 <__floatsidf>
  80536c:	800d883a 	mov	r6,r16
  805370:	900f883a 	mov	r7,r18
  805374:	1009883a 	mov	r4,r2
  805378:	180b883a 	mov	r5,r3
  80537c:	080c5e40 	call	80c5e4 <__muldf3>
  805380:	1009883a 	mov	r4,r2
  805384:	000d883a 	mov	r6,zero
  805388:	01d00734 	movhi	r7,16412
  80538c:	180b883a 	mov	r5,r3
  805390:	080b1740 	call	80b174 <__adddf3>
  805394:	d9000417 	ldw	r4,16(sp)
  805398:	1029883a 	mov	r20,r2
  80539c:	00bf3034 	movhi	r2,64704
  8053a0:	1887883a 	add	r3,r3,r2
  8053a4:	d8800b17 	ldw	r2,44(sp)
  8053a8:	213fffc4 	addi	r4,r4,-1
  8053ac:	d9001115 	stw	r4,68(sp)
  8053b0:	d8c00c15 	stw	r3,48(sp)
  8053b4:	d8800d15 	stw	r2,52(sp)
  8053b8:	003bb106 	br	804280 <_dtoa_r+0x490>
  8053bc:	d8800417 	ldw	r2,16(sp)
  8053c0:	00c00c44 	movi	r3,49
  8053c4:	10800044 	addi	r2,r2,1
  8053c8:	d8800415 	stw	r2,16(sp)
  8053cc:	003c2a06 	br	804478 <_dtoa_r+0x688>
  8053d0:	00800e44 	movi	r2,57
  8053d4:	8023883a 	mov	r17,r16
  8053d8:	d9400117 	ldw	r5,4(sp)
  8053dc:	b0800005 	stb	r2,0(r22)
  8053e0:	9021883a 	mov	r16,r18
  8053e4:	01000e44 	movi	r4,57
  8053e8:	003d5006 	br	80492c <_dtoa_r+0xb3c>
  8053ec:	0029883a 	mov	r20,zero
  8053f0:	0021883a 	mov	r16,zero
  8053f4:	003e7106 	br	804dbc <_dtoa_r+0xfcc>
  8053f8:	d8801117 	ldw	r2,68(sp)
  8053fc:	d9000117 	ldw	r4,4(sp)
  805400:	10800044 	addi	r2,r2,1
  805404:	d8800415 	stw	r2,16(sp)
  805408:	003c1206 	br	804454 <_dtoa_r+0x664>
  80540c:	103f241e 	bne	r2,zero,8050a0 <_dtoa_r+0x12b0>
  805410:	9880004c 	andi	r2,r19,1
  805414:	103f1e1e 	bne	r2,zero,805090 <_dtoa_r+0x12a0>
  805418:	003f2106 	br	8050a0 <_dtoa_r+0x12b0>
  80541c:	d8801117 	ldw	r2,68(sp)
  805420:	ddc00d17 	ldw	r23,52(sp)
  805424:	10800044 	addi	r2,r2,1
  805428:	d8800415 	stw	r2,16(sp)
  80542c:	003d5306 	br	80497c <_dtoa_r+0xb8c>
  805430:	d8c00417 	ldw	r3,16(sp)
  805434:	a8800e60 	cmpeqi	r2,r21,57
  805438:	a827883a 	mov	r19,r21
  80543c:	18c00044 	addi	r3,r3,1
  805440:	d8c00415 	stw	r3,16(sp)
  805444:	b5400044 	addi	r21,r22,1
  805448:	103fe11e 	bne	r2,zero,8053d0 <_dtoa_r+0x15e0>
  80544c:	047f1216 	blt	zero,r17,805098 <_dtoa_r+0x12a8>
  805450:	003f1306 	br	8050a0 <_dtoa_r+0x12b0>
  805454:	d8800217 	ldw	r2,8(sp)
  805458:	108000c8 	cmpgei	r2,r2,3
  80545c:	103e481e 	bne	r2,zero,804d80 <_dtoa_r+0xf90>
  805460:	dd400415 	stw	r21,16(sp)
  805464:	003e0d06 	br	804c9c <_dtoa_r+0xeac>
  805468:	d8800217 	ldw	r2,8(sp)
  80546c:	108000c8 	cmpgei	r2,r2,3
  805470:	103e431e 	bne	r2,zero,804d80 <_dtoa_r+0xf90>
  805474:	d8800b17 	ldw	r2,44(sp)
  805478:	dd400415 	stw	r21,16(sp)
  80547c:	d8800515 	stw	r2,20(sp)
  805480:	04bdb10e 	bge	zero,r18,804b48 <_dtoa_r+0xd58>
  805484:	003e5c06 	br	804df8 <_dtoa_r+0x1008>
  805488:	a829883a 	mov	r20,r21
  80548c:	003f7b06 	br	80527c <_dtoa_r+0x148c>
  805490:	05400084 	movi	r21,2
  805494:	003b5c06 	br	804208 <_dtoa_r+0x418>
  805498:	01c02074 	movhi	r7,129
  80549c:	01002074 	movhi	r4,129
  8054a0:	39c1b804 	addi	r7,r7,1760
  8054a4:	000d883a 	mov	r6,zero
  8054a8:	01406a84 	movi	r5,426
  8054ac:	2101bd04 	addi	r4,r4,1780
  8054b0:	08095700 	call	809570 <__assert_func>
  8054b4:	000b883a 	mov	r5,zero
  8054b8:	003b1506 	br	804110 <_dtoa_r+0x320>
  8054bc:	b8001115 	stw	zero,68(r23)
  8054c0:	000b883a 	mov	r5,zero
  8054c4:	b809883a 	mov	r4,r23
  8054c8:	080688c0 	call	80688c <_Balloc>
  8054cc:	d8800115 	stw	r2,4(sp)
  8054d0:	103ff126 	beq	r2,zero,805498 <_dtoa_r+0x16a8>
  8054d4:	d8800117 	ldw	r2,4(sp)
  8054d8:	d8001e15 	stw	zero,120(sp)
  8054dc:	b8801015 	stw	r2,64(r23)
  8054e0:	00bfffc4 	movi	r2,-1
  8054e4:	d8800515 	stw	r2,20(sp)
  8054e8:	d8800b15 	stw	r2,44(sp)
  8054ec:	00800044 	movi	r2,1
  8054f0:	d8800715 	stw	r2,28(sp)
  8054f4:	003c1106 	br	80453c <_dtoa_r+0x74c>
  8054f8:	01c02074 	movhi	r7,129
  8054fc:	01002074 	movhi	r4,129
  805500:	39c1b804 	addi	r7,r7,1760
  805504:	000d883a 	mov	r6,zero
  805508:	0140ba84 	movi	r5,746
  80550c:	2101bd04 	addi	r4,r4,1780
  805510:	08095700 	call	809570 <__assert_func>
  805514:	00802074 	movhi	r2,129
  805518:	1081b504 	addi	r2,r2,1748
  80551c:	d8800115 	stw	r2,4(sp)
  805520:	003a6506 	br	803eb8 <_dtoa_r+0xc8>
  805524:	18c00120 	cmpeqi	r3,r3,4
  805528:	183cc91e 	bne	r3,zero,804850 <_dtoa_r+0xa60>
  80552c:	00c00f04 	movi	r3,60
  805530:	1885c83a 	sub	r2,r3,r2
  805534:	003cc106 	br	80483c <_dtoa_r+0xa4c>

00805538 <_fclose_r.part.0>:
  805538:	defffc04 	addi	sp,sp,-16
  80553c:	dc800215 	stw	r18,8(sp)
  805540:	dc400115 	stw	r17,4(sp)
  805544:	dc000015 	stw	r16,0(sp)
  805548:	dfc00315 	stw	ra,12(sp)
  80554c:	2821883a 	mov	r16,r5
  805550:	2023883a 	mov	r17,r4
  805554:	08056d80 	call	8056d8 <__sflush_r>
  805558:	80c00b17 	ldw	r3,44(r16)
  80555c:	1025883a 	mov	r18,r2
  805560:	18000426 	beq	r3,zero,805574 <_fclose_r.part.0+0x3c>
  805564:	81400717 	ldw	r5,28(r16)
  805568:	8809883a 	mov	r4,r17
  80556c:	183ee83a 	callr	r3
  805570:	10001916 	blt	r2,zero,8055d8 <_fclose_r.part.0+0xa0>
  805574:	8080030b 	ldhu	r2,12(r16)
  805578:	1080200c 	andi	r2,r2,128
  80557c:	10001a1e 	bne	r2,zero,8055e8 <_fclose_r.part.0+0xb0>
  805580:	81400c17 	ldw	r5,48(r16)
  805584:	28000526 	beq	r5,zero,80559c <_fclose_r.part.0+0x64>
  805588:	80801004 	addi	r2,r16,64
  80558c:	28800226 	beq	r5,r2,805598 <_fclose_r.part.0+0x60>
  805590:	8809883a 	mov	r4,r17
  805594:	0805b000 	call	805b00 <_free_r>
  805598:	80000c15 	stw	zero,48(r16)
  80559c:	81401117 	ldw	r5,68(r16)
  8055a0:	28000326 	beq	r5,zero,8055b0 <_fclose_r.part.0+0x78>
  8055a4:	8809883a 	mov	r4,r17
  8055a8:	0805b000 	call	805b00 <_free_r>
  8055ac:	80001115 	stw	zero,68(r16)
  8055b0:	08009780 	call	800978 <__sfp_lock_acquire>
  8055b4:	8000030d 	sth	zero,12(r16)
  8055b8:	080097c0 	call	80097c <__sfp_lock_release>
  8055bc:	9005883a 	mov	r2,r18
  8055c0:	dfc00317 	ldw	ra,12(sp)
  8055c4:	dc800217 	ldw	r18,8(sp)
  8055c8:	dc400117 	ldw	r17,4(sp)
  8055cc:	dc000017 	ldw	r16,0(sp)
  8055d0:	dec00404 	addi	sp,sp,16
  8055d4:	f800283a 	ret
  8055d8:	8080030b 	ldhu	r2,12(r16)
  8055dc:	04bfffc4 	movi	r18,-1
  8055e0:	1080200c 	andi	r2,r2,128
  8055e4:	103fe626 	beq	r2,zero,805580 <_fclose_r.part.0+0x48>
  8055e8:	81400417 	ldw	r5,16(r16)
  8055ec:	8809883a 	mov	r4,r17
  8055f0:	0805b000 	call	805b00 <_free_r>
  8055f4:	003fe206 	br	805580 <_fclose_r.part.0+0x48>

008055f8 <_fclose_r>:
  8055f8:	28001926 	beq	r5,zero,805660 <_fclose_r+0x68>
  8055fc:	defffd04 	addi	sp,sp,-12
  805600:	dc000115 	stw	r16,4(sp)
  805604:	dfc00215 	stw	ra,8(sp)
  805608:	2021883a 	mov	r16,r4
  80560c:	20000226 	beq	r4,zero,805618 <_fclose_r+0x20>
  805610:	20800e17 	ldw	r2,56(r4)
  805614:	10000c26 	beq	r2,zero,805648 <_fclose_r+0x50>
  805618:	2880030f 	ldh	r2,12(r5)
  80561c:	1000051e 	bne	r2,zero,805634 <_fclose_r+0x3c>
  805620:	0005883a 	mov	r2,zero
  805624:	dfc00217 	ldw	ra,8(sp)
  805628:	dc000117 	ldw	r16,4(sp)
  80562c:	dec00304 	addi	sp,sp,12
  805630:	f800283a 	ret
  805634:	8009883a 	mov	r4,r16
  805638:	dfc00217 	ldw	ra,8(sp)
  80563c:	dc000117 	ldw	r16,4(sp)
  805640:	dec00304 	addi	sp,sp,12
  805644:	08055381 	jmpi	805538 <_fclose_r.part.0>
  805648:	d9400015 	stw	r5,0(sp)
  80564c:	08009680 	call	800968 <__sinit>
  805650:	d9400017 	ldw	r5,0(sp)
  805654:	2880030f 	ldh	r2,12(r5)
  805658:	103ff126 	beq	r2,zero,805620 <_fclose_r+0x28>
  80565c:	003ff506 	br	805634 <_fclose_r+0x3c>
  805660:	0005883a 	mov	r2,zero
  805664:	f800283a 	ret

00805668 <fclose>:
  805668:	20000826 	beq	r4,zero,80568c <fclose+0x24>
  80566c:	00802074 	movhi	r2,129
  805670:	200b883a 	mov	r5,r4
  805674:	110a2c17 	ldw	r4,10416(r2)
  805678:	20000226 	beq	r4,zero,805684 <fclose+0x1c>
  80567c:	20800e17 	ldw	r2,56(r4)
  805680:	10000526 	beq	r2,zero,805698 <fclose+0x30>
  805684:	2880030f 	ldh	r2,12(r5)
  805688:	1000021e 	bne	r2,zero,805694 <fclose+0x2c>
  80568c:	0005883a 	mov	r2,zero
  805690:	f800283a 	ret
  805694:	08055381 	jmpi	805538 <_fclose_r.part.0>
  805698:	defffd04 	addi	sp,sp,-12
  80569c:	d9400115 	stw	r5,4(sp)
  8056a0:	d9000015 	stw	r4,0(sp)
  8056a4:	dfc00215 	stw	ra,8(sp)
  8056a8:	08009680 	call	800968 <__sinit>
  8056ac:	d9400117 	ldw	r5,4(sp)
  8056b0:	d9000017 	ldw	r4,0(sp)
  8056b4:	2880030f 	ldh	r2,12(r5)
  8056b8:	10000326 	beq	r2,zero,8056c8 <fclose+0x60>
  8056bc:	dfc00217 	ldw	ra,8(sp)
  8056c0:	dec00304 	addi	sp,sp,12
  8056c4:	08055381 	jmpi	805538 <_fclose_r.part.0>
  8056c8:	0005883a 	mov	r2,zero
  8056cc:	dfc00217 	ldw	ra,8(sp)
  8056d0:	dec00304 	addi	sp,sp,12
  8056d4:	f800283a 	ret

008056d8 <__sflush_r>:
  8056d8:	2880030b 	ldhu	r2,12(r5)
  8056dc:	defffb04 	addi	sp,sp,-20
  8056e0:	dcc00315 	stw	r19,12(sp)
  8056e4:	dc000015 	stw	r16,0(sp)
  8056e8:	dfc00415 	stw	ra,16(sp)
  8056ec:	dc800215 	stw	r18,8(sp)
  8056f0:	dc400115 	stw	r17,4(sp)
  8056f4:	10c0020c 	andi	r3,r2,8
  8056f8:	2821883a 	mov	r16,r5
  8056fc:	2027883a 	mov	r19,r4
  805700:	18003f1e 	bne	r3,zero,805800 <__sflush_r+0x128>
  805704:	28c00117 	ldw	r3,4(r5)
  805708:	10820014 	ori	r2,r2,2048
  80570c:	2880030d 	sth	r2,12(r5)
  805710:	00c0550e 	bge	zero,r3,805868 <__sflush_r+0x190>
  805714:	82000a17 	ldw	r8,40(r16)
  805718:	40003126 	beq	r8,zero,8057e0 <__sflush_r+0x108>
  80571c:	9c400017 	ldw	r17,0(r19)
  805720:	1104000c 	andi	r4,r2,4096
  805724:	98000015 	stw	zero,0(r19)
  805728:	81400717 	ldw	r5,28(r16)
  80572c:	1007883a 	mov	r3,r2
  805730:	2000521e 	bne	r4,zero,80587c <__sflush_r+0x1a4>
  805734:	01c00044 	movi	r7,1
  805738:	000d883a 	mov	r6,zero
  80573c:	9809883a 	mov	r4,r19
  805740:	403ee83a 	callr	r8
  805744:	10ffffd8 	cmpnei	r3,r2,-1
  805748:	18005826 	beq	r3,zero,8058ac <__sflush_r+0x1d4>
  80574c:	80c0030b 	ldhu	r3,12(r16)
  805750:	82000a17 	ldw	r8,40(r16)
  805754:	81400717 	ldw	r5,28(r16)
  805758:	18c0010c 	andi	r3,r3,4
  80575c:	18000626 	beq	r3,zero,805778 <__sflush_r+0xa0>
  805760:	81000117 	ldw	r4,4(r16)
  805764:	80c00c17 	ldw	r3,48(r16)
  805768:	1105c83a 	sub	r2,r2,r4
  80576c:	18000226 	beq	r3,zero,805778 <__sflush_r+0xa0>
  805770:	80c00f17 	ldw	r3,60(r16)
  805774:	10c5c83a 	sub	r2,r2,r3
  805778:	100d883a 	mov	r6,r2
  80577c:	000f883a 	mov	r7,zero
  805780:	9809883a 	mov	r4,r19
  805784:	403ee83a 	callr	r8
  805788:	10ffffd8 	cmpnei	r3,r2,-1
  80578c:	18003d1e 	bne	r3,zero,805884 <__sflush_r+0x1ac>
  805790:	99000017 	ldw	r4,0(r19)
  805794:	80c0030b 	ldhu	r3,12(r16)
  805798:	20004e26 	beq	r4,zero,8058d4 <__sflush_r+0x1fc>
  80579c:	21400760 	cmpeqi	r5,r4,29
  8057a0:	2800021e 	bne	r5,zero,8057ac <__sflush_r+0xd4>
  8057a4:	210005a0 	cmpeqi	r4,r4,22
  8057a8:	20002c26 	beq	r4,zero,80585c <__sflush_r+0x184>
  8057ac:	80800417 	ldw	r2,16(r16)
  8057b0:	18fdffcc 	andi	r3,r3,63487
  8057b4:	80c0030d 	sth	r3,12(r16)
  8057b8:	80000115 	stw	zero,4(r16)
  8057bc:	80800015 	stw	r2,0(r16)
  8057c0:	81400c17 	ldw	r5,48(r16)
  8057c4:	9c400015 	stw	r17,0(r19)
  8057c8:	28000526 	beq	r5,zero,8057e0 <__sflush_r+0x108>
  8057cc:	80801004 	addi	r2,r16,64
  8057d0:	28800226 	beq	r5,r2,8057dc <__sflush_r+0x104>
  8057d4:	9809883a 	mov	r4,r19
  8057d8:	0805b000 	call	805b00 <_free_r>
  8057dc:	80000c15 	stw	zero,48(r16)
  8057e0:	0005883a 	mov	r2,zero
  8057e4:	dfc00417 	ldw	ra,16(sp)
  8057e8:	dcc00317 	ldw	r19,12(sp)
  8057ec:	dc800217 	ldw	r18,8(sp)
  8057f0:	dc400117 	ldw	r17,4(sp)
  8057f4:	dc000017 	ldw	r16,0(sp)
  8057f8:	dec00504 	addi	sp,sp,20
  8057fc:	f800283a 	ret
  805800:	2c800417 	ldw	r18,16(r5)
  805804:	903ff626 	beq	r18,zero,8057e0 <__sflush_r+0x108>
  805808:	2c400017 	ldw	r17,0(r5)
  80580c:	108000cc 	andi	r2,r2,3
  805810:	2c800015 	stw	r18,0(r5)
  805814:	8ca3c83a 	sub	r17,r17,r18
  805818:	1000161e 	bne	r2,zero,805874 <__sflush_r+0x19c>
  80581c:	28800517 	ldw	r2,20(r5)
  805820:	80800215 	stw	r2,8(r16)
  805824:	04400316 	blt	zero,r17,805834 <__sflush_r+0x15c>
  805828:	003fed06 	br	8057e0 <__sflush_r+0x108>
  80582c:	90a5883a 	add	r18,r18,r2
  805830:	047feb0e 	bge	zero,r17,8057e0 <__sflush_r+0x108>
  805834:	80800917 	ldw	r2,36(r16)
  805838:	81400717 	ldw	r5,28(r16)
  80583c:	880f883a 	mov	r7,r17
  805840:	900d883a 	mov	r6,r18
  805844:	9809883a 	mov	r4,r19
  805848:	103ee83a 	callr	r2
  80584c:	88a3c83a 	sub	r17,r17,r2
  805850:	00bff616 	blt	zero,r2,80582c <__sflush_r+0x154>
  805854:	80c0030b 	ldhu	r3,12(r16)
  805858:	00bfffc4 	movi	r2,-1
  80585c:	18c01014 	ori	r3,r3,64
  805860:	80c0030d 	sth	r3,12(r16)
  805864:	003fdf06 	br	8057e4 <__sflush_r+0x10c>
  805868:	28c00f17 	ldw	r3,60(r5)
  80586c:	00ffa916 	blt	zero,r3,805714 <__sflush_r+0x3c>
  805870:	003fdb06 	br	8057e0 <__sflush_r+0x108>
  805874:	0005883a 	mov	r2,zero
  805878:	003fe906 	br	805820 <__sflush_r+0x148>
  80587c:	80801417 	ldw	r2,80(r16)
  805880:	003fb506 	br	805758 <__sflush_r+0x80>
  805884:	80c0030b 	ldhu	r3,12(r16)
  805888:	81000417 	ldw	r4,16(r16)
  80588c:	80000115 	stw	zero,4(r16)
  805890:	197dffcc 	andi	r5,r3,63487
  805894:	8140030d 	sth	r5,12(r16)
  805898:	81000015 	stw	r4,0(r16)
  80589c:	18c4000c 	andi	r3,r3,4096
  8058a0:	183fc726 	beq	r3,zero,8057c0 <__sflush_r+0xe8>
  8058a4:	80801415 	stw	r2,80(r16)
  8058a8:	003fc506 	br	8057c0 <__sflush_r+0xe8>
  8058ac:	98c00017 	ldw	r3,0(r19)
  8058b0:	183fa626 	beq	r3,zero,80574c <__sflush_r+0x74>
  8058b4:	19000760 	cmpeqi	r4,r3,29
  8058b8:	20000e1e 	bne	r4,zero,8058f4 <__sflush_r+0x21c>
  8058bc:	18c00598 	cmpnei	r3,r3,22
  8058c0:	18000c26 	beq	r3,zero,8058f4 <__sflush_r+0x21c>
  8058c4:	80c0030b 	ldhu	r3,12(r16)
  8058c8:	18c01014 	ori	r3,r3,64
  8058cc:	80c0030d 	sth	r3,12(r16)
  8058d0:	003fc406 	br	8057e4 <__sflush_r+0x10c>
  8058d4:	81000417 	ldw	r4,16(r16)
  8058d8:	197dffcc 	andi	r5,r3,63487
  8058dc:	8140030d 	sth	r5,12(r16)
  8058e0:	80000115 	stw	zero,4(r16)
  8058e4:	81000015 	stw	r4,0(r16)
  8058e8:	18c4000c 	andi	r3,r3,4096
  8058ec:	183fb426 	beq	r3,zero,8057c0 <__sflush_r+0xe8>
  8058f0:	003fec06 	br	8058a4 <__sflush_r+0x1cc>
  8058f4:	9c400015 	stw	r17,0(r19)
  8058f8:	0005883a 	mov	r2,zero
  8058fc:	003fb906 	br	8057e4 <__sflush_r+0x10c>

00805900 <_fflush_r>:
  805900:	defffd04 	addi	sp,sp,-12
  805904:	dc000115 	stw	r16,4(sp)
  805908:	dfc00215 	stw	ra,8(sp)
  80590c:	2021883a 	mov	r16,r4
  805910:	20000226 	beq	r4,zero,80591c <_fflush_r+0x1c>
  805914:	20800e17 	ldw	r2,56(r4)
  805918:	10000726 	beq	r2,zero,805938 <_fflush_r+0x38>
  80591c:	2880030f 	ldh	r2,12(r5)
  805920:	10000a1e 	bne	r2,zero,80594c <_fflush_r+0x4c>
  805924:	0005883a 	mov	r2,zero
  805928:	dfc00217 	ldw	ra,8(sp)
  80592c:	dc000117 	ldw	r16,4(sp)
  805930:	dec00304 	addi	sp,sp,12
  805934:	f800283a 	ret
  805938:	d9400015 	stw	r5,0(sp)
  80593c:	08009680 	call	800968 <__sinit>
  805940:	d9400017 	ldw	r5,0(sp)
  805944:	2880030f 	ldh	r2,12(r5)
  805948:	103ff626 	beq	r2,zero,805924 <_fflush_r+0x24>
  80594c:	8009883a 	mov	r4,r16
  805950:	dfc00217 	ldw	ra,8(sp)
  805954:	dc000117 	ldw	r16,4(sp)
  805958:	dec00304 	addi	sp,sp,12
  80595c:	08056d81 	jmpi	8056d8 <__sflush_r>

00805960 <fflush>:
  805960:	20001726 	beq	r4,zero,8059c0 <fflush+0x60>
  805964:	00802074 	movhi	r2,129
  805968:	200b883a 	mov	r5,r4
  80596c:	110a2c17 	ldw	r4,10416(r2)
  805970:	20000226 	beq	r4,zero,80597c <fflush+0x1c>
  805974:	20800e17 	ldw	r2,56(r4)
  805978:	10000526 	beq	r2,zero,805990 <fflush+0x30>
  80597c:	2880030f 	ldh	r2,12(r5)
  805980:	1000021e 	bne	r2,zero,80598c <fflush+0x2c>
  805984:	0005883a 	mov	r2,zero
  805988:	f800283a 	ret
  80598c:	08056d81 	jmpi	8056d8 <__sflush_r>
  805990:	defffd04 	addi	sp,sp,-12
  805994:	d9400115 	stw	r5,4(sp)
  805998:	d9000015 	stw	r4,0(sp)
  80599c:	dfc00215 	stw	ra,8(sp)
  8059a0:	08009680 	call	800968 <__sinit>
  8059a4:	d9400117 	ldw	r5,4(sp)
  8059a8:	d9000017 	ldw	r4,0(sp)
  8059ac:	2880030f 	ldh	r2,12(r5)
  8059b0:	10000826 	beq	r2,zero,8059d4 <fflush+0x74>
  8059b4:	dfc00217 	ldw	ra,8(sp)
  8059b8:	dec00304 	addi	sp,sp,12
  8059bc:	08056d81 	jmpi	8056d8 <__sflush_r>
  8059c0:	00802074 	movhi	r2,129
  8059c4:	110a2b17 	ldw	r4,10412(r2)
  8059c8:	01402034 	movhi	r5,128
  8059cc:	29564004 	addi	r5,r5,22784
  8059d0:	0800b4c1 	jmpi	800b4c <_fwalk_reent>
  8059d4:	0005883a 	mov	r2,zero
  8059d8:	dfc00217 	ldw	ra,8(sp)
  8059dc:	dec00304 	addi	sp,sp,12
  8059e0:	f800283a 	ret

008059e4 <_malloc_trim_r>:
  8059e4:	defffb04 	addi	sp,sp,-20
  8059e8:	dcc00315 	stw	r19,12(sp)
  8059ec:	04c02074 	movhi	r19,129
  8059f0:	dc800215 	stw	r18,8(sp)
  8059f4:	dc400115 	stw	r17,4(sp)
  8059f8:	dc000015 	stw	r16,0(sp)
  8059fc:	dfc00415 	stw	ra,16(sp)
  805a00:	2821883a 	mov	r16,r5
  805a04:	9cc44004 	addi	r19,r19,4352
  805a08:	2025883a 	mov	r18,r4
  805a0c:	080e0200 	call	80e020 <__malloc_lock>
  805a10:	98800217 	ldw	r2,8(r19)
  805a14:	14400117 	ldw	r17,4(r2)
  805a18:	00bfff04 	movi	r2,-4
  805a1c:	88a2703a 	and	r17,r17,r2
  805a20:	8c21c83a 	sub	r16,r17,r16
  805a24:	8403fbc4 	addi	r16,r16,4079
  805a28:	8020d33a 	srli	r16,r16,12
  805a2c:	843fffc4 	addi	r16,r16,-1
  805a30:	8020933a 	slli	r16,r16,12
  805a34:	80840008 	cmpgei	r2,r16,4096
  805a38:	10000626 	beq	r2,zero,805a54 <_malloc_trim_r+0x70>
  805a3c:	000b883a 	mov	r5,zero
  805a40:	9009883a 	mov	r4,r18
  805a44:	08015a00 	call	8015a0 <_sbrk_r>
  805a48:	98c00217 	ldw	r3,8(r19)
  805a4c:	1c47883a 	add	r3,r3,r17
  805a50:	10c00a26 	beq	r2,r3,805a7c <_malloc_trim_r+0x98>
  805a54:	9009883a 	mov	r4,r18
  805a58:	080e0440 	call	80e044 <__malloc_unlock>
  805a5c:	0005883a 	mov	r2,zero
  805a60:	dfc00417 	ldw	ra,16(sp)
  805a64:	dcc00317 	ldw	r19,12(sp)
  805a68:	dc800217 	ldw	r18,8(sp)
  805a6c:	dc400117 	ldw	r17,4(sp)
  805a70:	dc000017 	ldw	r16,0(sp)
  805a74:	dec00504 	addi	sp,sp,20
  805a78:	f800283a 	ret
  805a7c:	040bc83a 	sub	r5,zero,r16
  805a80:	9009883a 	mov	r4,r18
  805a84:	08015a00 	call	8015a0 <_sbrk_r>
  805a88:	10bfffd8 	cmpnei	r2,r2,-1
  805a8c:	10000d26 	beq	r2,zero,805ac4 <_malloc_trim_r+0xe0>
  805a90:	00802074 	movhi	r2,129
  805a94:	10914e17 	ldw	r2,17720(r2)
  805a98:	98c00217 	ldw	r3,8(r19)
  805a9c:	8c23c83a 	sub	r17,r17,r16
  805aa0:	8c400054 	ori	r17,r17,1
  805aa4:	1421c83a 	sub	r16,r2,r16
  805aa8:	1c400115 	stw	r17,4(r3)
  805aac:	00802074 	movhi	r2,129
  805ab0:	9009883a 	mov	r4,r18
  805ab4:	14114e15 	stw	r16,17720(r2)
  805ab8:	080e0440 	call	80e044 <__malloc_unlock>
  805abc:	00800044 	movi	r2,1
  805ac0:	003fe706 	br	805a60 <_malloc_trim_r+0x7c>
  805ac4:	000b883a 	mov	r5,zero
  805ac8:	9009883a 	mov	r4,r18
  805acc:	08015a00 	call	8015a0 <_sbrk_r>
  805ad0:	99000217 	ldw	r4,8(r19)
  805ad4:	1107c83a 	sub	r3,r2,r4
  805ad8:	19400410 	cmplti	r5,r3,16
  805adc:	283fdd1e 	bne	r5,zero,805a54 <_malloc_trim_r+0x70>
  805ae0:	01402074 	movhi	r5,129
  805ae4:	294a2d17 	ldw	r5,10420(r5)
  805ae8:	18c00054 	ori	r3,r3,1
  805aec:	20c00115 	stw	r3,4(r4)
  805af0:	1145c83a 	sub	r2,r2,r5
  805af4:	01402074 	movhi	r5,129
  805af8:	28914e15 	stw	r2,17720(r5)
  805afc:	003fd506 	br	805a54 <_malloc_trim_r+0x70>

00805b00 <_free_r>:
  805b00:	28004f26 	beq	r5,zero,805c40 <_free_r+0x140>
  805b04:	defffd04 	addi	sp,sp,-12
  805b08:	dc400115 	stw	r17,4(sp)
  805b0c:	dc000015 	stw	r16,0(sp)
  805b10:	2023883a 	mov	r17,r4
  805b14:	2821883a 	mov	r16,r5
  805b18:	dfc00215 	stw	ra,8(sp)
  805b1c:	080e0200 	call	80e020 <__malloc_lock>
  805b20:	81ffff17 	ldw	r7,-4(r16)
  805b24:	00bfff84 	movi	r2,-2
  805b28:	80fffe04 	addi	r3,r16,-8
  805b2c:	3884703a 	and	r2,r7,r2
  805b30:	01002074 	movhi	r4,129
  805b34:	188d883a 	add	r6,r3,r2
  805b38:	21044004 	addi	r4,r4,4352
  805b3c:	31400117 	ldw	r5,4(r6)
  805b40:	22000217 	ldw	r8,8(r4)
  805b44:	027fff04 	movi	r9,-4
  805b48:	2a4a703a 	and	r5,r5,r9
  805b4c:	41806426 	beq	r8,r6,805ce0 <_free_r+0x1e0>
  805b50:	31400115 	stw	r5,4(r6)
  805b54:	39c0004c 	andi	r7,r7,1
  805b58:	3151883a 	add	r8,r6,r5
  805b5c:	3800281e 	bne	r7,zero,805c00 <_free_r+0x100>
  805b60:	82bffe17 	ldw	r10,-8(r16)
  805b64:	42000117 	ldw	r8,4(r8)
  805b68:	01c02074 	movhi	r7,129
  805b6c:	1a87c83a 	sub	r3,r3,r10
  805b70:	1a400217 	ldw	r9,8(r3)
  805b74:	39c44204 	addi	r7,r7,4360
  805b78:	1285883a 	add	r2,r2,r10
  805b7c:	4200004c 	andi	r8,r8,1
  805b80:	49c04c26 	beq	r9,r7,805cb4 <_free_r+0x1b4>
  805b84:	1a800317 	ldw	r10,12(r3)
  805b88:	4a800315 	stw	r10,12(r9)
  805b8c:	52400215 	stw	r9,8(r10)
  805b90:	40007126 	beq	r8,zero,805d58 <_free_r+0x258>
  805b94:	11400054 	ori	r5,r2,1
  805b98:	19400115 	stw	r5,4(r3)
  805b9c:	30800015 	stw	r2,0(r6)
  805ba0:	11408028 	cmpgeui	r5,r2,512
  805ba4:	28002c1e 	bne	r5,zero,805c58 <_free_r+0x158>
  805ba8:	100ad0fa 	srli	r5,r2,3
  805bac:	100cd17a 	srli	r6,r2,5
  805bb0:	00800044 	movi	r2,1
  805bb4:	29400044 	addi	r5,r5,1
  805bb8:	280a90fa 	slli	r5,r5,3
  805bbc:	21c00117 	ldw	r7,4(r4)
  805bc0:	1184983a 	sll	r2,r2,r6
  805bc4:	214b883a 	add	r5,r4,r5
  805bc8:	29800017 	ldw	r6,0(r5)
  805bcc:	11c4b03a 	or	r2,r2,r7
  805bd0:	29fffe04 	addi	r7,r5,-8
  805bd4:	19c00315 	stw	r7,12(r3)
  805bd8:	19800215 	stw	r6,8(r3)
  805bdc:	20800115 	stw	r2,4(r4)
  805be0:	28c00015 	stw	r3,0(r5)
  805be4:	30c00315 	stw	r3,12(r6)
  805be8:	8809883a 	mov	r4,r17
  805bec:	dfc00217 	ldw	ra,8(sp)
  805bf0:	dc400117 	ldw	r17,4(sp)
  805bf4:	dc000017 	ldw	r16,0(sp)
  805bf8:	dec00304 	addi	sp,sp,12
  805bfc:	080e0441 	jmpi	80e044 <__malloc_unlock>
  805c00:	41c00117 	ldw	r7,4(r8)
  805c04:	39c0004c 	andi	r7,r7,1
  805c08:	38000e1e 	bne	r7,zero,805c44 <_free_r+0x144>
  805c0c:	01c02074 	movhi	r7,129
  805c10:	1145883a 	add	r2,r2,r5
  805c14:	39c44204 	addi	r7,r7,4360
  805c18:	31400217 	ldw	r5,8(r6)
  805c1c:	12400054 	ori	r9,r2,1
  805c20:	1891883a 	add	r8,r3,r2
  805c24:	29c05226 	beq	r5,r7,805d70 <_free_r+0x270>
  805c28:	31800317 	ldw	r6,12(r6)
  805c2c:	29800315 	stw	r6,12(r5)
  805c30:	31400215 	stw	r5,8(r6)
  805c34:	1a400115 	stw	r9,4(r3)
  805c38:	40800015 	stw	r2,0(r8)
  805c3c:	003fd806 	br	805ba0 <_free_r+0xa0>
  805c40:	f800283a 	ret
  805c44:	11400054 	ori	r5,r2,1
  805c48:	817fff15 	stw	r5,-4(r16)
  805c4c:	30800015 	stw	r2,0(r6)
  805c50:	11408028 	cmpgeui	r5,r2,512
  805c54:	283fd426 	beq	r5,zero,805ba8 <_free_r+0xa8>
  805c58:	100ad27a 	srli	r5,r2,9
  805c5c:	29800168 	cmpgeui	r6,r5,5
  805c60:	3000341e 	bne	r6,zero,805d34 <_free_r+0x234>
  805c64:	100ad1ba 	srli	r5,r2,6
  805c68:	29800e44 	addi	r6,r5,57
  805c6c:	300c90fa 	slli	r6,r6,3
  805c70:	29c00e04 	addi	r7,r5,56
  805c74:	218d883a 	add	r6,r4,r6
  805c78:	31400017 	ldw	r5,0(r6)
  805c7c:	31bffe04 	addi	r6,r6,-8
  805c80:	31404226 	beq	r6,r5,805d8c <_free_r+0x28c>
  805c84:	01ffff04 	movi	r7,-4
  805c88:	29000117 	ldw	r4,4(r5)
  805c8c:	21c8703a 	and	r4,r4,r7
  805c90:	1100022e 	bgeu	r2,r4,805c9c <_free_r+0x19c>
  805c94:	29400217 	ldw	r5,8(r5)
  805c98:	317ffb1e 	bne	r6,r5,805c88 <_free_r+0x188>
  805c9c:	29800317 	ldw	r6,12(r5)
  805ca0:	19800315 	stw	r6,12(r3)
  805ca4:	19400215 	stw	r5,8(r3)
  805ca8:	30c00215 	stw	r3,8(r6)
  805cac:	28c00315 	stw	r3,12(r5)
  805cb0:	003fcd06 	br	805be8 <_free_r+0xe8>
  805cb4:	40004d1e 	bne	r8,zero,805dec <_free_r+0x2ec>
  805cb8:	31000317 	ldw	r4,12(r6)
  805cbc:	31800217 	ldw	r6,8(r6)
  805cc0:	2885883a 	add	r2,r5,r2
  805cc4:	11400054 	ori	r5,r2,1
  805cc8:	31000315 	stw	r4,12(r6)
  805ccc:	21800215 	stw	r6,8(r4)
  805cd0:	19400115 	stw	r5,4(r3)
  805cd4:	1887883a 	add	r3,r3,r2
  805cd8:	18800015 	stw	r2,0(r3)
  805cdc:	003fc206 	br	805be8 <_free_r+0xe8>
  805ce0:	39c0004c 	andi	r7,r7,1
  805ce4:	1145883a 	add	r2,r2,r5
  805ce8:	3800071e 	bne	r7,zero,805d08 <_free_r+0x208>
  805cec:	81fffe17 	ldw	r7,-8(r16)
  805cf0:	19c7c83a 	sub	r3,r3,r7
  805cf4:	19400317 	ldw	r5,12(r3)
  805cf8:	19800217 	ldw	r6,8(r3)
  805cfc:	11c5883a 	add	r2,r2,r7
  805d00:	31400315 	stw	r5,12(r6)
  805d04:	29800215 	stw	r6,8(r5)
  805d08:	01402074 	movhi	r5,129
  805d0c:	11800054 	ori	r6,r2,1
  805d10:	294a2e17 	ldw	r5,10424(r5)
  805d14:	19800115 	stw	r6,4(r3)
  805d18:	20c00215 	stw	r3,8(r4)
  805d1c:	117fb236 	bltu	r2,r5,805be8 <_free_r+0xe8>
  805d20:	00802074 	movhi	r2,129
  805d24:	11514417 	ldw	r5,17680(r2)
  805d28:	8809883a 	mov	r4,r17
  805d2c:	08059e40 	call	8059e4 <_malloc_trim_r>
  805d30:	003fad06 	br	805be8 <_free_r+0xe8>
  805d34:	29800568 	cmpgeui	r6,r5,21
  805d38:	30000926 	beq	r6,zero,805d60 <_free_r+0x260>
  805d3c:	29801568 	cmpgeui	r6,r5,85
  805d40:	3000191e 	bne	r6,zero,805da8 <_free_r+0x2a8>
  805d44:	100ad33a 	srli	r5,r2,12
  805d48:	29801bc4 	addi	r6,r5,111
  805d4c:	300c90fa 	slli	r6,r6,3
  805d50:	29c01b84 	addi	r7,r5,110
  805d54:	003fc706 	br	805c74 <_free_r+0x174>
  805d58:	1145883a 	add	r2,r2,r5
  805d5c:	003fae06 	br	805c18 <_free_r+0x118>
  805d60:	29801704 	addi	r6,r5,92
  805d64:	300c90fa 	slli	r6,r6,3
  805d68:	29c016c4 	addi	r7,r5,91
  805d6c:	003fc106 	br	805c74 <_free_r+0x174>
  805d70:	20c00515 	stw	r3,20(r4)
  805d74:	20c00415 	stw	r3,16(r4)
  805d78:	19c00315 	stw	r7,12(r3)
  805d7c:	19c00215 	stw	r7,8(r3)
  805d80:	1a400115 	stw	r9,4(r3)
  805d84:	40800015 	stw	r2,0(r8)
  805d88:	003f9706 	br	805be8 <_free_r+0xe8>
  805d8c:	380fd0ba 	srai	r7,r7,2
  805d90:	00800044 	movi	r2,1
  805d94:	22000117 	ldw	r8,4(r4)
  805d98:	11ce983a 	sll	r7,r2,r7
  805d9c:	3a0eb03a 	or	r7,r7,r8
  805da0:	21c00115 	stw	r7,4(r4)
  805da4:	003fbe06 	br	805ca0 <_free_r+0x1a0>
  805da8:	29805568 	cmpgeui	r6,r5,341
  805dac:	3000051e 	bne	r6,zero,805dc4 <_free_r+0x2c4>
  805db0:	100ad3fa 	srli	r5,r2,15
  805db4:	29801e04 	addi	r6,r5,120
  805db8:	300c90fa 	slli	r6,r6,3
  805dbc:	29c01dc4 	addi	r7,r5,119
  805dc0:	003fac06 	br	805c74 <_free_r+0x174>
  805dc4:	29415568 	cmpgeui	r5,r5,1365
  805dc8:	2800051e 	bne	r5,zero,805de0 <_free_r+0x2e0>
  805dcc:	100ad4ba 	srli	r5,r2,18
  805dd0:	29801f44 	addi	r6,r5,125
  805dd4:	300c90fa 	slli	r6,r6,3
  805dd8:	29c01f04 	addi	r7,r5,124
  805ddc:	003fa506 	br	805c74 <_free_r+0x174>
  805de0:	0180fe04 	movi	r6,1016
  805de4:	01c01f84 	movi	r7,126
  805de8:	003fa206 	br	805c74 <_free_r+0x174>
  805dec:	11000054 	ori	r4,r2,1
  805df0:	19000115 	stw	r4,4(r3)
  805df4:	30800015 	stw	r2,0(r6)
  805df8:	003f7b06 	br	805be8 <_free_r+0xe8>

00805dfc <__sfvwrite_r>:
  805dfc:	30800217 	ldw	r2,8(r6)
  805e00:	1000a326 	beq	r2,zero,806090 <__sfvwrite_r+0x294>
  805e04:	29c0030b 	ldhu	r7,12(r5)
  805e08:	defff404 	addi	sp,sp,-48
  805e0c:	ddc00915 	stw	r23,36(sp)
  805e10:	dd400715 	stw	r21,28(sp)
  805e14:	dc000215 	stw	r16,8(sp)
  805e18:	dfc00b15 	stw	ra,44(sp)
  805e1c:	df000a15 	stw	fp,40(sp)
  805e20:	dd800815 	stw	r22,32(sp)
  805e24:	dd000615 	stw	r20,24(sp)
  805e28:	dcc00515 	stw	r19,20(sp)
  805e2c:	dc800415 	stw	r18,16(sp)
  805e30:	dc400315 	stw	r17,12(sp)
  805e34:	3880020c 	andi	r2,r7,8
  805e38:	302f883a 	mov	r23,r6
  805e3c:	202b883a 	mov	r21,r4
  805e40:	2821883a 	mov	r16,r5
  805e44:	10002226 	beq	r2,zero,805ed0 <__sfvwrite_r+0xd4>
  805e48:	28800417 	ldw	r2,16(r5)
  805e4c:	10002026 	beq	r2,zero,805ed0 <__sfvwrite_r+0xd4>
  805e50:	3880008c 	andi	r2,r7,2
  805e54:	bc400017 	ldw	r17,0(r23)
  805e58:	10002526 	beq	r2,zero,805ef0 <__sfvwrite_r+0xf4>
  805e5c:	80800917 	ldw	r2,36(r16)
  805e60:	81400717 	ldw	r5,28(r16)
  805e64:	05200034 	movhi	r20,32768
  805e68:	0027883a 	mov	r19,zero
  805e6c:	0025883a 	mov	r18,zero
  805e70:	a53f0004 	addi	r20,r20,-1024
  805e74:	980d883a 	mov	r6,r19
  805e78:	a809883a 	mov	r4,r21
  805e7c:	90001026 	beq	r18,zero,805ec0 <__sfvwrite_r+0xc4>
  805e80:	900f883a 	mov	r7,r18
  805e84:	a480012e 	bgeu	r20,r18,805e8c <__sfvwrite_r+0x90>
  805e88:	a00f883a 	mov	r7,r20
  805e8c:	103ee83a 	callr	r2
  805e90:	00807a0e 	bge	zero,r2,80607c <__sfvwrite_r+0x280>
  805e94:	b9000217 	ldw	r4,8(r23)
  805e98:	98a7883a 	add	r19,r19,r2
  805e9c:	90a5c83a 	sub	r18,r18,r2
  805ea0:	2085c83a 	sub	r2,r4,r2
  805ea4:	b8800215 	stw	r2,8(r23)
  805ea8:	10006326 	beq	r2,zero,806038 <__sfvwrite_r+0x23c>
  805eac:	80800917 	ldw	r2,36(r16)
  805eb0:	81400717 	ldw	r5,28(r16)
  805eb4:	980d883a 	mov	r6,r19
  805eb8:	a809883a 	mov	r4,r21
  805ebc:	903ff01e 	bne	r18,zero,805e80 <__sfvwrite_r+0x84>
  805ec0:	8cc00017 	ldw	r19,0(r17)
  805ec4:	8c800117 	ldw	r18,4(r17)
  805ec8:	8c400204 	addi	r17,r17,8
  805ecc:	003fe906 	br	805e74 <__sfvwrite_r+0x78>
  805ed0:	800b883a 	mov	r5,r16
  805ed4:	a809883a 	mov	r4,r21
  805ed8:	0803a140 	call	803a14 <__swsetup_r>
  805edc:	1000f71e 	bne	r2,zero,8062bc <__sfvwrite_r+0x4c0>
  805ee0:	81c0030b 	ldhu	r7,12(r16)
  805ee4:	bc400017 	ldw	r17,0(r23)
  805ee8:	3880008c 	andi	r2,r7,2
  805eec:	103fdb1e 	bne	r2,zero,805e5c <__sfvwrite_r+0x60>
  805ef0:	3880004c 	andi	r2,r7,1
  805ef4:	84800217 	ldw	r18,8(r16)
  805ef8:	82000017 	ldw	r8,0(r16)
  805efc:	1000661e 	bne	r2,zero,806098 <__sfvwrite_r+0x29c>
  805f00:	00a00034 	movhi	r2,32768
  805f04:	10bfff84 	addi	r2,r2,-2
  805f08:	00e00034 	movhi	r3,32768
  805f0c:	d8800015 	stw	r2,0(sp)
  805f10:	18bfffc4 	addi	r2,r3,-1
  805f14:	0039883a 	mov	fp,zero
  805f18:	0027883a 	mov	r19,zero
  805f1c:	d8800115 	stw	r2,4(sp)
  805f20:	98004126 	beq	r19,zero,806028 <__sfvwrite_r+0x22c>
  805f24:	3880800c 	andi	r2,r7,512
  805f28:	10009726 	beq	r2,zero,806188 <__sfvwrite_r+0x38c>
  805f2c:	902d883a 	mov	r22,r18
  805f30:	9c80be36 	bltu	r19,r18,80622c <__sfvwrite_r+0x430>
  805f34:	3881200c 	andi	r2,r7,1152
  805f38:	10002626 	beq	r2,zero,805fd4 <__sfvwrite_r+0x1d8>
  805f3c:	81800517 	ldw	r6,20(r16)
  805f40:	81400417 	ldw	r5,16(r16)
  805f44:	98800044 	addi	r2,r19,1
  805f48:	3189883a 	add	r4,r6,r6
  805f4c:	2189883a 	add	r4,r4,r6
  805f50:	2028d7fa 	srli	r20,r4,31
  805f54:	4165c83a 	sub	r18,r8,r5
  805f58:	1485883a 	add	r2,r2,r18
  805f5c:	a109883a 	add	r4,r20,r4
  805f60:	2029d07a 	srai	r20,r4,1
  805f64:	a00d883a 	mov	r6,r20
  805f68:	a080022e 	bgeu	r20,r2,805f74 <__sfvwrite_r+0x178>
  805f6c:	1029883a 	mov	r20,r2
  805f70:	100d883a 	mov	r6,r2
  805f74:	39c1000c 	andi	r7,r7,1024
  805f78:	3800c026 	beq	r7,zero,80627c <__sfvwrite_r+0x480>
  805f7c:	a809883a 	mov	r4,r21
  805f80:	300b883a 	mov	r5,r6
  805f84:	0800bf40 	call	800bf4 <_malloc_r>
  805f88:	1009883a 	mov	r4,r2
  805f8c:	1000c726 	beq	r2,zero,8062ac <__sfvwrite_r+0x4b0>
  805f90:	81400417 	ldw	r5,16(r16)
  805f94:	900d883a 	mov	r6,r18
  805f98:	08066600 	call	806660 <memcpy>
  805f9c:	1009883a 	mov	r4,r2
  805fa0:	8080030b 	ldhu	r2,12(r16)
  805fa4:	00fedfc4 	movi	r3,-1153
  805fa8:	10c4703a 	and	r2,r2,r3
  805fac:	10802014 	ori	r2,r2,128
  805fb0:	8080030d 	sth	r2,12(r16)
  805fb4:	2491883a 	add	r8,r4,r18
  805fb8:	a485c83a 	sub	r2,r20,r18
  805fbc:	81000415 	stw	r4,16(r16)
  805fc0:	82000015 	stw	r8,0(r16)
  805fc4:	85000515 	stw	r20,20(r16)
  805fc8:	9825883a 	mov	r18,r19
  805fcc:	80800215 	stw	r2,8(r16)
  805fd0:	982d883a 	mov	r22,r19
  805fd4:	4009883a 	mov	r4,r8
  805fd8:	b00d883a 	mov	r6,r22
  805fdc:	e00b883a 	mov	r5,fp
  805fe0:	08067600 	call	806760 <memmove>
  805fe4:	81000217 	ldw	r4,8(r16)
  805fe8:	80800017 	ldw	r2,0(r16)
  805fec:	9829883a 	mov	r20,r19
  805ff0:	24a5c83a 	sub	r18,r4,r18
  805ff4:	1585883a 	add	r2,r2,r22
  805ff8:	84800215 	stw	r18,8(r16)
  805ffc:	80800015 	stw	r2,0(r16)
  806000:	0027883a 	mov	r19,zero
  806004:	b8800217 	ldw	r2,8(r23)
  806008:	e539883a 	add	fp,fp,r20
  80600c:	1529c83a 	sub	r20,r2,r20
  806010:	bd000215 	stw	r20,8(r23)
  806014:	a0000826 	beq	r20,zero,806038 <__sfvwrite_r+0x23c>
  806018:	81c0030b 	ldhu	r7,12(r16)
  80601c:	84800217 	ldw	r18,8(r16)
  806020:	82000017 	ldw	r8,0(r16)
  806024:	983fbf1e 	bne	r19,zero,805f24 <__sfvwrite_r+0x128>
  806028:	8f000017 	ldw	fp,0(r17)
  80602c:	8cc00117 	ldw	r19,4(r17)
  806030:	8c400204 	addi	r17,r17,8
  806034:	003fba06 	br	805f20 <__sfvwrite_r+0x124>
  806038:	0005883a 	mov	r2,zero
  80603c:	dfc00b17 	ldw	ra,44(sp)
  806040:	df000a17 	ldw	fp,40(sp)
  806044:	ddc00917 	ldw	r23,36(sp)
  806048:	dd800817 	ldw	r22,32(sp)
  80604c:	dd400717 	ldw	r21,28(sp)
  806050:	dd000617 	ldw	r20,24(sp)
  806054:	dcc00517 	ldw	r19,20(sp)
  806058:	dc800417 	ldw	r18,16(sp)
  80605c:	dc400317 	ldw	r17,12(sp)
  806060:	dc000217 	ldw	r16,8(sp)
  806064:	dec00c04 	addi	sp,sp,48
  806068:	f800283a 	ret
  80606c:	800b883a 	mov	r5,r16
  806070:	a809883a 	mov	r4,r21
  806074:	08059000 	call	805900 <_fflush_r>
  806078:	10002026 	beq	r2,zero,8060fc <__sfvwrite_r+0x300>
  80607c:	8080030b 	ldhu	r2,12(r16)
  806080:	10801014 	ori	r2,r2,64
  806084:	8080030d 	sth	r2,12(r16)
  806088:	00bfffc4 	movi	r2,-1
  80608c:	003feb06 	br	80603c <__sfvwrite_r+0x240>
  806090:	0005883a 	mov	r2,zero
  806094:	f800283a 	ret
  806098:	002d883a 	mov	r22,zero
  80609c:	0027883a 	mov	r19,zero
  8060a0:	0005883a 	mov	r2,zero
  8060a4:	0039883a 	mov	fp,zero
  8060a8:	b0001d26 	beq	r22,zero,806120 <__sfvwrite_r+0x324>
  8060ac:	10002026 	beq	r2,zero,806130 <__sfvwrite_r+0x334>
  8060b0:	9829883a 	mov	r20,r19
  8060b4:	b500012e 	bgeu	r22,r20,8060bc <__sfvwrite_r+0x2c0>
  8060b8:	b029883a 	mov	r20,r22
  8060bc:	80800417 	ldw	r2,16(r16)
  8060c0:	81c00517 	ldw	r7,20(r16)
  8060c4:	1200022e 	bgeu	r2,r8,8060d0 <__sfvwrite_r+0x2d4>
  8060c8:	3ca5883a 	add	r18,r7,r18
  8060cc:	95002216 	blt	r18,r20,806158 <__sfvwrite_r+0x35c>
  8060d0:	a1c05916 	blt	r20,r7,806238 <__sfvwrite_r+0x43c>
  8060d4:	80800917 	ldw	r2,36(r16)
  8060d8:	81400717 	ldw	r5,28(r16)
  8060dc:	e00d883a 	mov	r6,fp
  8060e0:	a809883a 	mov	r4,r21
  8060e4:	103ee83a 	callr	r2
  8060e8:	1025883a 	mov	r18,r2
  8060ec:	00bfe30e 	bge	zero,r2,80607c <__sfvwrite_r+0x280>
  8060f0:	9ca7c83a 	sub	r19,r19,r18
  8060f4:	983fdd26 	beq	r19,zero,80606c <__sfvwrite_r+0x270>
  8060f8:	00800044 	movi	r2,1
  8060fc:	b9800217 	ldw	r6,8(r23)
  806100:	e4b9883a 	add	fp,fp,r18
  806104:	b4adc83a 	sub	r22,r22,r18
  806108:	34a5c83a 	sub	r18,r6,r18
  80610c:	bc800215 	stw	r18,8(r23)
  806110:	903fc926 	beq	r18,zero,806038 <__sfvwrite_r+0x23c>
  806114:	84800217 	ldw	r18,8(r16)
  806118:	82000017 	ldw	r8,0(r16)
  80611c:	b03fe31e 	bne	r22,zero,8060ac <__sfvwrite_r+0x2b0>
  806120:	8d800117 	ldw	r22,4(r17)
  806124:	8f000017 	ldw	fp,0(r17)
  806128:	8c400204 	addi	r17,r17,8
  80612c:	b03ffc26 	beq	r22,zero,806120 <__sfvwrite_r+0x324>
  806130:	b00d883a 	mov	r6,r22
  806134:	01400284 	movi	r5,10
  806138:	e009883a 	mov	r4,fp
  80613c:	da000015 	stw	r8,0(sp)
  806140:	08065900 	call	806590 <memchr>
  806144:	da000017 	ldw	r8,0(sp)
  806148:	10004926 	beq	r2,zero,806270 <__sfvwrite_r+0x474>
  80614c:	10800044 	addi	r2,r2,1
  806150:	1727c83a 	sub	r19,r2,fp
  806154:	003fd606 	br	8060b0 <__sfvwrite_r+0x2b4>
  806158:	e00b883a 	mov	r5,fp
  80615c:	4009883a 	mov	r4,r8
  806160:	900d883a 	mov	r6,r18
  806164:	08067600 	call	806760 <memmove>
  806168:	80800017 	ldw	r2,0(r16)
  80616c:	800b883a 	mov	r5,r16
  806170:	a809883a 	mov	r4,r21
  806174:	1485883a 	add	r2,r2,r18
  806178:	80800015 	stw	r2,0(r16)
  80617c:	08059000 	call	805900 <_fflush_r>
  806180:	103fdb26 	beq	r2,zero,8060f0 <__sfvwrite_r+0x2f4>
  806184:	003fbd06 	br	80607c <__sfvwrite_r+0x280>
  806188:	80800417 	ldw	r2,16(r16)
  80618c:	12001436 	bltu	r2,r8,8061e0 <__sfvwrite_r+0x3e4>
  806190:	85000517 	ldw	r20,20(r16)
  806194:	9d001236 	bltu	r19,r20,8061e0 <__sfvwrite_r+0x3e4>
  806198:	d8800017 	ldw	r2,0(sp)
  80619c:	14c0322e 	bgeu	r2,r19,806268 <__sfvwrite_r+0x46c>
  8061a0:	d9000117 	ldw	r4,4(sp)
  8061a4:	a00b883a 	mov	r5,r20
  8061a8:	080af980 	call	80af98 <__divsi3>
  8061ac:	a00b883a 	mov	r5,r20
  8061b0:	1009883a 	mov	r4,r2
  8061b4:	080b14c0 	call	80b14c <__mulsi3>
  8061b8:	82000917 	ldw	r8,36(r16)
  8061bc:	81400717 	ldw	r5,28(r16)
  8061c0:	100f883a 	mov	r7,r2
  8061c4:	e00d883a 	mov	r6,fp
  8061c8:	a809883a 	mov	r4,r21
  8061cc:	403ee83a 	callr	r8
  8061d0:	1029883a 	mov	r20,r2
  8061d4:	00bfa90e 	bge	zero,r2,80607c <__sfvwrite_r+0x280>
  8061d8:	9d27c83a 	sub	r19,r19,r20
  8061dc:	003f8906 	br	806004 <__sfvwrite_r+0x208>
  8061e0:	9029883a 	mov	r20,r18
  8061e4:	9c80012e 	bgeu	r19,r18,8061ec <__sfvwrite_r+0x3f0>
  8061e8:	9829883a 	mov	r20,r19
  8061ec:	4009883a 	mov	r4,r8
  8061f0:	a00d883a 	mov	r6,r20
  8061f4:	e00b883a 	mov	r5,fp
  8061f8:	08067600 	call	806760 <memmove>
  8061fc:	80800217 	ldw	r2,8(r16)
  806200:	81000017 	ldw	r4,0(r16)
  806204:	1505c83a 	sub	r2,r2,r20
  806208:	2509883a 	add	r4,r4,r20
  80620c:	80800215 	stw	r2,8(r16)
  806210:	81000015 	stw	r4,0(r16)
  806214:	103ff01e 	bne	r2,zero,8061d8 <__sfvwrite_r+0x3dc>
  806218:	800b883a 	mov	r5,r16
  80621c:	a809883a 	mov	r4,r21
  806220:	08059000 	call	805900 <_fflush_r>
  806224:	103fec26 	beq	r2,zero,8061d8 <__sfvwrite_r+0x3dc>
  806228:	003f9406 	br	80607c <__sfvwrite_r+0x280>
  80622c:	9825883a 	mov	r18,r19
  806230:	982d883a 	mov	r22,r19
  806234:	003f6706 	br	805fd4 <__sfvwrite_r+0x1d8>
  806238:	4009883a 	mov	r4,r8
  80623c:	a00d883a 	mov	r6,r20
  806240:	e00b883a 	mov	r5,fp
  806244:	08067600 	call	806760 <memmove>
  806248:	81000217 	ldw	r4,8(r16)
  80624c:	80800017 	ldw	r2,0(r16)
  806250:	a025883a 	mov	r18,r20
  806254:	2509c83a 	sub	r4,r4,r20
  806258:	1505883a 	add	r2,r2,r20
  80625c:	81000215 	stw	r4,8(r16)
  806260:	80800015 	stw	r2,0(r16)
  806264:	003fa206 	br	8060f0 <__sfvwrite_r+0x2f4>
  806268:	9809883a 	mov	r4,r19
  80626c:	003fcd06 	br	8061a4 <__sfvwrite_r+0x3a8>
  806270:	b5000044 	addi	r20,r22,1
  806274:	a027883a 	mov	r19,r20
  806278:	003f8e06 	br	8060b4 <__sfvwrite_r+0x2b8>
  80627c:	a809883a 	mov	r4,r21
  806280:	0807ae00 	call	807ae0 <_realloc_r>
  806284:	1009883a 	mov	r4,r2
  806288:	103f4a1e 	bne	r2,zero,805fb4 <__sfvwrite_r+0x1b8>
  80628c:	81400417 	ldw	r5,16(r16)
  806290:	a809883a 	mov	r4,r21
  806294:	0805b000 	call	805b00 <_free_r>
  806298:	8080030b 	ldhu	r2,12(r16)
  80629c:	00c00304 	movi	r3,12
  8062a0:	a8c00015 	stw	r3,0(r21)
  8062a4:	10bfdfcc 	andi	r2,r2,65407
  8062a8:	003f7506 	br	806080 <__sfvwrite_r+0x284>
  8062ac:	00c00304 	movi	r3,12
  8062b0:	8080030b 	ldhu	r2,12(r16)
  8062b4:	a8c00015 	stw	r3,0(r21)
  8062b8:	003f7106 	br	806080 <__sfvwrite_r+0x284>
  8062bc:	00bfffc4 	movi	r2,-1
  8062c0:	003f5e06 	br	80603c <__sfvwrite_r+0x240>

008062c4 <__localeconv_l>:
  8062c4:	20803c04 	addi	r2,r4,240
  8062c8:	f800283a 	ret

008062cc <_localeconv_r>:
  8062cc:	00802074 	movhi	r2,129
  8062d0:	10857e04 	addi	r2,r2,5624
  8062d4:	f800283a 	ret

008062d8 <localeconv>:
  8062d8:	00802074 	movhi	r2,129
  8062dc:	10857e04 	addi	r2,r2,5624
  8062e0:	f800283a 	ret

008062e4 <_lseek_r>:
  8062e4:	2807883a 	mov	r3,r5
  8062e8:	defffe04 	addi	sp,sp,-8
  8062ec:	dc000015 	stw	r16,0(sp)
  8062f0:	300b883a 	mov	r5,r6
  8062f4:	00802074 	movhi	r2,129
  8062f8:	380d883a 	mov	r6,r7
  8062fc:	2021883a 	mov	r16,r4
  806300:	1809883a 	mov	r4,r3
  806304:	dfc00115 	stw	ra,4(sp)
  806308:	10114515 	stw	zero,17684(r2)
  80630c:	080dec40 	call	80dec4 <lseek>
  806310:	10ffffd8 	cmpnei	r3,r2,-1
  806314:	18000426 	beq	r3,zero,806328 <_lseek_r+0x44>
  806318:	dfc00117 	ldw	ra,4(sp)
  80631c:	dc000017 	ldw	r16,0(sp)
  806320:	dec00204 	addi	sp,sp,8
  806324:	f800283a 	ret
  806328:	00c02074 	movhi	r3,129
  80632c:	18d14517 	ldw	r3,17684(r3)
  806330:	183ff926 	beq	r3,zero,806318 <_lseek_r+0x34>
  806334:	80c00015 	stw	r3,0(r16)
  806338:	dfc00117 	ldw	ra,4(sp)
  80633c:	dc000017 	ldw	r16,0(sp)
  806340:	dec00204 	addi	sp,sp,8
  806344:	f800283a 	ret

00806348 <__smakebuf_r>:
  806348:	2880030b 	ldhu	r2,12(r5)
  80634c:	deffe804 	addi	sp,sp,-96
  806350:	dc001215 	stw	r16,72(sp)
  806354:	dfc01715 	stw	ra,92(sp)
  806358:	dd001615 	stw	r20,88(sp)
  80635c:	dcc01515 	stw	r19,84(sp)
  806360:	dc801415 	stw	r18,80(sp)
  806364:	dc401315 	stw	r17,76(sp)
  806368:	10c0008c 	andi	r3,r2,2
  80636c:	2821883a 	mov	r16,r5
  806370:	18000d26 	beq	r3,zero,8063a8 <__smakebuf_r+0x60>
  806374:	288010c4 	addi	r2,r5,67
  806378:	28800015 	stw	r2,0(r5)
  80637c:	28800415 	stw	r2,16(r5)
  806380:	00800044 	movi	r2,1
  806384:	28800515 	stw	r2,20(r5)
  806388:	dfc01717 	ldw	ra,92(sp)
  80638c:	dd001617 	ldw	r20,88(sp)
  806390:	dcc01517 	ldw	r19,84(sp)
  806394:	dc801417 	ldw	r18,80(sp)
  806398:	dc401317 	ldw	r17,76(sp)
  80639c:	dc001217 	ldw	r16,72(sp)
  8063a0:	dec01804 	addi	sp,sp,96
  8063a4:	f800283a 	ret
  8063a8:	2940038f 	ldh	r5,14(r5)
  8063ac:	2023883a 	mov	r17,r4
  8063b0:	28002816 	blt	r5,zero,806454 <__smakebuf_r+0x10c>
  8063b4:	d80d883a 	mov	r6,sp
  8063b8:	08099040 	call	809904 <_fstat_r>
  8063bc:	10002416 	blt	r2,zero,806450 <__smakebuf_r+0x108>
  8063c0:	d8800117 	ldw	r2,4(sp)
  8063c4:	10bc000c 	andi	r2,r2,61440
  8063c8:	10880018 	cmpnei	r2,r2,8192
  8063cc:	1000461e 	bne	r2,zero,8064e8 <__smakebuf_r+0x1a0>
  8063d0:	8140038f 	ldh	r5,14(r16)
  8063d4:	8809883a 	mov	r4,r17
  8063d8:	08099640 	call	809964 <_isatty_r>
  8063dc:	10003e26 	beq	r2,zero,8064d8 <__smakebuf_r+0x190>
  8063e0:	8080030b 	ldhu	r2,12(r16)
  8063e4:	80c010c4 	addi	r3,r16,67
  8063e8:	80c00015 	stw	r3,0(r16)
  8063ec:	10800054 	ori	r2,r2,1
  8063f0:	8080030d 	sth	r2,12(r16)
  8063f4:	00800044 	movi	r2,1
  8063f8:	80c00415 	stw	r3,16(r16)
  8063fc:	80800515 	stw	r2,20(r16)
  806400:	04c00044 	movi	r19,1
  806404:	05010004 	movi	r20,1024
  806408:	04820004 	movi	r18,2048
  80640c:	a00b883a 	mov	r5,r20
  806410:	8809883a 	mov	r4,r17
  806414:	0800bf40 	call	800bf4 <_malloc_r>
  806418:	10001726 	beq	r2,zero,806478 <__smakebuf_r+0x130>
  80641c:	80c0030b 	ldhu	r3,12(r16)
  806420:	01002034 	movhi	r4,128
  806424:	21018304 	addi	r4,r4,1548
  806428:	89000f15 	stw	r4,60(r17)
  80642c:	18c02014 	ori	r3,r3,128
  806430:	80c0030d 	sth	r3,12(r16)
  806434:	80800015 	stw	r2,0(r16)
  806438:	80800415 	stw	r2,16(r16)
  80643c:	85000515 	stw	r20,20(r16)
  806440:	98001d1e 	bne	r19,zero,8064b8 <__smakebuf_r+0x170>
  806444:	90c6b03a 	or	r3,r18,r3
  806448:	80c0030d 	sth	r3,12(r16)
  80644c:	003fce06 	br	806388 <__smakebuf_r+0x40>
  806450:	8080030b 	ldhu	r2,12(r16)
  806454:	1080200c 	andi	r2,r2,128
  806458:	0027883a 	mov	r19,zero
  80645c:	10001326 	beq	r2,zero,8064ac <__smakebuf_r+0x164>
  806460:	05001004 	movi	r20,64
  806464:	a00b883a 	mov	r5,r20
  806468:	8809883a 	mov	r4,r17
  80646c:	0025883a 	mov	r18,zero
  806470:	0800bf40 	call	800bf4 <_malloc_r>
  806474:	103fe91e 	bne	r2,zero,80641c <__smakebuf_r+0xd4>
  806478:	8080030b 	ldhu	r2,12(r16)
  80647c:	10c0800c 	andi	r3,r2,512
  806480:	183fc11e 	bne	r3,zero,806388 <__smakebuf_r+0x40>
  806484:	00ffff04 	movi	r3,-4
  806488:	10c4703a 	and	r2,r2,r3
  80648c:	10800094 	ori	r2,r2,2
  806490:	80c010c4 	addi	r3,r16,67
  806494:	8080030d 	sth	r2,12(r16)
  806498:	00800044 	movi	r2,1
  80649c:	80c00015 	stw	r3,0(r16)
  8064a0:	80c00415 	stw	r3,16(r16)
  8064a4:	80800515 	stw	r2,20(r16)
  8064a8:	003fb706 	br	806388 <__smakebuf_r+0x40>
  8064ac:	05010004 	movi	r20,1024
  8064b0:	0025883a 	mov	r18,zero
  8064b4:	003fd506 	br	80640c <__smakebuf_r+0xc4>
  8064b8:	8140038f 	ldh	r5,14(r16)
  8064bc:	8809883a 	mov	r4,r17
  8064c0:	08099640 	call	809964 <_isatty_r>
  8064c4:	80c0030b 	ldhu	r3,12(r16)
  8064c8:	103fde26 	beq	r2,zero,806444 <__smakebuf_r+0xfc>
  8064cc:	18ffff0c 	andi	r3,r3,65532
  8064d0:	18c00054 	ori	r3,r3,1
  8064d4:	003fdb06 	br	806444 <__smakebuf_r+0xfc>
  8064d8:	04c00044 	movi	r19,1
  8064dc:	05010004 	movi	r20,1024
  8064e0:	04820004 	movi	r18,2048
  8064e4:	003fc906 	br	80640c <__smakebuf_r+0xc4>
  8064e8:	0027883a 	mov	r19,zero
  8064ec:	05010004 	movi	r20,1024
  8064f0:	04820004 	movi	r18,2048
  8064f4:	003fc506 	br	80640c <__smakebuf_r+0xc4>

008064f8 <__swhatbuf_r>:
  8064f8:	deffea04 	addi	sp,sp,-88
  8064fc:	dc001215 	stw	r16,72(sp)
  806500:	2821883a 	mov	r16,r5
  806504:	2940038f 	ldh	r5,14(r5)
  806508:	dc801415 	stw	r18,80(sp)
  80650c:	dc401315 	stw	r17,76(sp)
  806510:	dfc01515 	stw	ra,84(sp)
  806514:	3023883a 	mov	r17,r6
  806518:	3825883a 	mov	r18,r7
  80651c:	28001016 	blt	r5,zero,806560 <__swhatbuf_r+0x68>
  806520:	d80d883a 	mov	r6,sp
  806524:	08099040 	call	809904 <_fstat_r>
  806528:	10000d16 	blt	r2,zero,806560 <__swhatbuf_r+0x68>
  80652c:	d8c00117 	ldw	r3,4(sp)
  806530:	00820004 	movi	r2,2048
  806534:	18fc000c 	andi	r3,r3,61440
  806538:	18c80020 	cmpeqi	r3,r3,8192
  80653c:	90c00015 	stw	r3,0(r18)
  806540:	00c10004 	movi	r3,1024
  806544:	88c00015 	stw	r3,0(r17)
  806548:	dfc01517 	ldw	ra,84(sp)
  80654c:	dc801417 	ldw	r18,80(sp)
  806550:	dc401317 	ldw	r17,76(sp)
  806554:	dc001217 	ldw	r16,72(sp)
  806558:	dec01604 	addi	sp,sp,88
  80655c:	f800283a 	ret
  806560:	8080030b 	ldhu	r2,12(r16)
  806564:	90000015 	stw	zero,0(r18)
  806568:	1080200c 	andi	r2,r2,128
  80656c:	10000426 	beq	r2,zero,806580 <__swhatbuf_r+0x88>
  806570:	00801004 	movi	r2,64
  806574:	88800015 	stw	r2,0(r17)
  806578:	0005883a 	mov	r2,zero
  80657c:	003ff206 	br	806548 <__swhatbuf_r+0x50>
  806580:	00810004 	movi	r2,1024
  806584:	88800015 	stw	r2,0(r17)
  806588:	0005883a 	mov	r2,zero
  80658c:	003fee06 	br	806548 <__swhatbuf_r+0x50>

00806590 <memchr>:
  806590:	208000cc 	andi	r2,r4,3
  806594:	280f883a 	mov	r7,r5
  806598:	10000e26 	beq	r2,zero,8065d4 <memchr+0x44>
  80659c:	30bfffc4 	addi	r2,r6,-1
  8065a0:	30001726 	beq	r6,zero,806600 <memchr+0x70>
  8065a4:	29803fcc 	andi	r6,r5,255
  8065a8:	00000606 	br	8065c4 <memchr+0x34>
  8065ac:	21000044 	addi	r4,r4,1
  8065b0:	20c000cc 	andi	r3,r4,3
  8065b4:	18000826 	beq	r3,zero,8065d8 <memchr+0x48>
  8065b8:	10bfffc4 	addi	r2,r2,-1
  8065bc:	10ffffe0 	cmpeqi	r3,r2,-1
  8065c0:	18000f1e 	bne	r3,zero,806600 <memchr+0x70>
  8065c4:	20c00003 	ldbu	r3,0(r4)
  8065c8:	19bff81e 	bne	r3,r6,8065ac <memchr+0x1c>
  8065cc:	2005883a 	mov	r2,r4
  8065d0:	f800283a 	ret
  8065d4:	3005883a 	mov	r2,r6
  8065d8:	10c00128 	cmpgeui	r3,r2,4
  8065dc:	18000a1e 	bne	r3,zero,806608 <memchr+0x78>
  8065e0:	10001e26 	beq	r2,zero,80665c <memchr+0xcc>
  8065e4:	2087883a 	add	r3,r4,r2
  8065e8:	39803fcc 	andi	r6,r7,255
  8065ec:	2005883a 	mov	r2,r4
  8065f0:	11000003 	ldbu	r4,0(r2)
  8065f4:	21bff626 	beq	r4,r6,8065d0 <memchr+0x40>
  8065f8:	10800044 	addi	r2,r2,1
  8065fc:	18bffc1e 	bne	r3,r2,8065f0 <memchr+0x60>
  806600:	0005883a 	mov	r2,zero
  806604:	f800283a 	ret
  806608:	29403fcc 	andi	r5,r5,255
  80660c:	280c923a 	slli	r6,r5,8
  806610:	027fbff4 	movhi	r9,65279
  806614:	02202074 	movhi	r8,32897
  806618:	314ab03a 	or	r5,r6,r5
  80661c:	280c943a 	slli	r6,r5,16
  806620:	4a7fbfc4 	addi	r9,r9,-257
  806624:	42202004 	addi	r8,r8,-32640
  806628:	314cb03a 	or	r6,r6,r5
  80662c:	20c00017 	ldw	r3,0(r4)
  806630:	30c6f03a 	xor	r3,r6,r3
  806634:	1a4b883a 	add	r5,r3,r9
  806638:	00c6303a 	nor	r3,zero,r3
  80663c:	28c6703a 	and	r3,r5,r3
  806640:	1a06703a 	and	r3,r3,r8
  806644:	183fe71e 	bne	r3,zero,8065e4 <memchr+0x54>
  806648:	10bfff04 	addi	r2,r2,-4
  80664c:	10c00128 	cmpgeui	r3,r2,4
  806650:	21000104 	addi	r4,r4,4
  806654:	183ff51e 	bne	r3,zero,80662c <memchr+0x9c>
  806658:	003fe106 	br	8065e0 <memchr+0x50>
  80665c:	f800283a 	ret

00806660 <memcpy>:
  806660:	30c00430 	cmpltui	r3,r6,16
  806664:	2005883a 	mov	r2,r4
  806668:	18002d1e 	bne	r3,zero,806720 <memcpy+0xc0>
  80666c:	2906b03a 	or	r3,r5,r4
  806670:	18c000cc 	andi	r3,r3,3
  806674:	1800351e 	bne	r3,zero,80674c <memcpy+0xec>
  806678:	32fffc04 	addi	r11,r6,-16
  80667c:	5816d13a 	srli	r11,r11,4
  806680:	280f883a 	mov	r7,r5
  806684:	2007883a 	mov	r3,r4
  806688:	5ac00044 	addi	r11,r11,1
  80668c:	5816913a 	slli	r11,r11,4
  806690:	22d5883a 	add	r10,r4,r11
  806694:	39000117 	ldw	r4,4(r7)
  806698:	3a400017 	ldw	r9,0(r7)
  80669c:	3a000217 	ldw	r8,8(r7)
  8066a0:	19000115 	stw	r4,4(r3)
  8066a4:	39000317 	ldw	r4,12(r7)
  8066a8:	1a400015 	stw	r9,0(r3)
  8066ac:	1a000215 	stw	r8,8(r3)
  8066b0:	19000315 	stw	r4,12(r3)
  8066b4:	18c00404 	addi	r3,r3,16
  8066b8:	39c00404 	addi	r7,r7,16
  8066bc:	50fff51e 	bne	r10,r3,806694 <memcpy+0x34>
  8066c0:	3100030c 	andi	r4,r6,12
  8066c4:	2acb883a 	add	r5,r5,r11
  8066c8:	320003cc 	andi	r8,r6,15
  8066cc:	20002226 	beq	r4,zero,806758 <memcpy+0xf8>
  8066d0:	280f883a 	mov	r7,r5
  8066d4:	1813883a 	mov	r9,r3
  8066d8:	39c00104 	addi	r7,r7,4
  8066dc:	3abfff17 	ldw	r10,-4(r7)
  8066e0:	41c9c83a 	sub	r4,r8,r7
  8066e4:	2909883a 	add	r4,r5,r4
  8066e8:	4a800015 	stw	r10,0(r9)
  8066ec:	21000128 	cmpgeui	r4,r4,4
  8066f0:	4a400104 	addi	r9,r9,4
  8066f4:	203ff81e 	bne	r4,zero,8066d8 <memcpy+0x78>
  8066f8:	413fff04 	addi	r4,r8,-4
  8066fc:	2008d0ba 	srli	r4,r4,2
  806700:	318000cc 	andi	r6,r6,3
  806704:	31ffffc4 	addi	r7,r6,-1
  806708:	21000044 	addi	r4,r4,1
  80670c:	200890ba 	slli	r4,r4,2
  806710:	1907883a 	add	r3,r3,r4
  806714:	290b883a 	add	r5,r5,r4
  806718:	3000041e 	bne	r6,zero,80672c <memcpy+0xcc>
  80671c:	f800283a 	ret
  806720:	2007883a 	mov	r3,r4
  806724:	31ffffc4 	addi	r7,r6,-1
  806728:	303ffc26 	beq	r6,zero,80671c <memcpy+0xbc>
  80672c:	39c00044 	addi	r7,r7,1
  806730:	19cf883a 	add	r7,r3,r7
  806734:	29800003 	ldbu	r6,0(r5)
  806738:	18c00044 	addi	r3,r3,1
  80673c:	29400044 	addi	r5,r5,1
  806740:	19bfffc5 	stb	r6,-1(r3)
  806744:	38fffb1e 	bne	r7,r3,806734 <memcpy+0xd4>
  806748:	f800283a 	ret
  80674c:	31ffffc4 	addi	r7,r6,-1
  806750:	2007883a 	mov	r3,r4
  806754:	003ff506 	br	80672c <memcpy+0xcc>
  806758:	400d883a 	mov	r6,r8
  80675c:	003ff106 	br	806724 <memcpy+0xc4>

00806760 <memmove>:
  806760:	2005883a 	mov	r2,r4
  806764:	29000a2e 	bgeu	r5,r4,806790 <memmove+0x30>
  806768:	2989883a 	add	r4,r5,r6
  80676c:	1100082e 	bgeu	r2,r4,806790 <memmove+0x30>
  806770:	1187883a 	add	r3,r2,r6
  806774:	30003e26 	beq	r6,zero,806870 <memmove+0x110>
  806778:	217fffc3 	ldbu	r5,-1(r4)
  80677c:	18ffffc4 	addi	r3,r3,-1
  806780:	213fffc4 	addi	r4,r4,-1
  806784:	19400005 	stb	r5,0(r3)
  806788:	10fffb1e 	bne	r2,r3,806778 <memmove+0x18>
  80678c:	f800283a 	ret
  806790:	30c00430 	cmpltui	r3,r6,16
  806794:	18000b26 	beq	r3,zero,8067c4 <memmove+0x64>
  806798:	1007883a 	mov	r3,r2
  80679c:	31ffffc4 	addi	r7,r6,-1
  8067a0:	30003726 	beq	r6,zero,806880 <memmove+0x120>
  8067a4:	39c00044 	addi	r7,r7,1
  8067a8:	29cf883a 	add	r7,r5,r7
  8067ac:	29800003 	ldbu	r6,0(r5)
  8067b0:	29400044 	addi	r5,r5,1
  8067b4:	18c00044 	addi	r3,r3,1
  8067b8:	19bfffc5 	stb	r6,-1(r3)
  8067bc:	29fffb1e 	bne	r5,r7,8067ac <memmove+0x4c>
  8067c0:	f800283a 	ret
  8067c4:	2886b03a 	or	r3,r5,r2
  8067c8:	18c000cc 	andi	r3,r3,3
  8067cc:	1800291e 	bne	r3,zero,806874 <memmove+0x114>
  8067d0:	327ffc04 	addi	r9,r6,-16
  8067d4:	4812d13a 	srli	r9,r9,4
  8067d8:	280f883a 	mov	r7,r5
  8067dc:	1007883a 	mov	r3,r2
  8067e0:	4a400044 	addi	r9,r9,1
  8067e4:	4812913a 	slli	r9,r9,4
  8067e8:	1251883a 	add	r8,r2,r9
  8067ec:	39000017 	ldw	r4,0(r7)
  8067f0:	39c00404 	addi	r7,r7,16
  8067f4:	18c00404 	addi	r3,r3,16
  8067f8:	193ffc15 	stw	r4,-16(r3)
  8067fc:	393ffd17 	ldw	r4,-12(r7)
  806800:	193ffd15 	stw	r4,-12(r3)
  806804:	393ffe17 	ldw	r4,-8(r7)
  806808:	193ffe15 	stw	r4,-8(r3)
  80680c:	393fff17 	ldw	r4,-4(r7)
  806810:	193fff15 	stw	r4,-4(r3)
  806814:	40fff51e 	bne	r8,r3,8067ec <memmove+0x8c>
  806818:	3100030c 	andi	r4,r6,12
  80681c:	2a4b883a 	add	r5,r5,r9
  806820:	320003cc 	andi	r8,r6,15
  806824:	20001726 	beq	r4,zero,806884 <memmove+0x124>
  806828:	2813883a 	mov	r9,r5
  80682c:	180f883a 	mov	r7,r3
  806830:	4a800017 	ldw	r10,0(r9)
  806834:	39c00104 	addi	r7,r7,4
  806838:	41c9c83a 	sub	r4,r8,r7
  80683c:	1909883a 	add	r4,r3,r4
  806840:	21000128 	cmpgeui	r4,r4,4
  806844:	3abfff15 	stw	r10,-4(r7)
  806848:	4a400104 	addi	r9,r9,4
  80684c:	203ff81e 	bne	r4,zero,806830 <memmove+0xd0>
  806850:	413fff04 	addi	r4,r8,-4
  806854:	2008d0ba 	srli	r4,r4,2
  806858:	318000cc 	andi	r6,r6,3
  80685c:	21000044 	addi	r4,r4,1
  806860:	200890ba 	slli	r4,r4,2
  806864:	1907883a 	add	r3,r3,r4
  806868:	290b883a 	add	r5,r5,r4
  80686c:	003fcb06 	br	80679c <memmove+0x3c>
  806870:	f800283a 	ret
  806874:	31ffffc4 	addi	r7,r6,-1
  806878:	1007883a 	mov	r3,r2
  80687c:	003fc906 	br	8067a4 <memmove+0x44>
  806880:	f800283a 	ret
  806884:	400d883a 	mov	r6,r8
  806888:	003fc406 	br	80679c <memmove+0x3c>

0080688c <_Balloc>:
  80688c:	20801317 	ldw	r2,76(r4)
  806890:	defffc04 	addi	sp,sp,-16
  806894:	dc400115 	stw	r17,4(sp)
  806898:	dc000015 	stw	r16,0(sp)
  80689c:	dfc00315 	stw	ra,12(sp)
  8068a0:	dc800215 	stw	r18,8(sp)
  8068a4:	2021883a 	mov	r16,r4
  8068a8:	2823883a 	mov	r17,r5
  8068ac:	10000e26 	beq	r2,zero,8068e8 <_Balloc+0x5c>
  8068b0:	880690ba 	slli	r3,r17,2
  8068b4:	10c7883a 	add	r3,r2,r3
  8068b8:	18800017 	ldw	r2,0(r3)
  8068bc:	10001126 	beq	r2,zero,806904 <_Balloc+0x78>
  8068c0:	11000017 	ldw	r4,0(r2)
  8068c4:	19000015 	stw	r4,0(r3)
  8068c8:	10000415 	stw	zero,16(r2)
  8068cc:	10000315 	stw	zero,12(r2)
  8068d0:	dfc00317 	ldw	ra,12(sp)
  8068d4:	dc800217 	ldw	r18,8(sp)
  8068d8:	dc400117 	ldw	r17,4(sp)
  8068dc:	dc000017 	ldw	r16,0(sp)
  8068e0:	dec00404 	addi	sp,sp,16
  8068e4:	f800283a 	ret
  8068e8:	01800844 	movi	r6,33
  8068ec:	01400104 	movi	r5,4
  8068f0:	08095e80 	call	8095e8 <_calloc_r>
  8068f4:	80801315 	stw	r2,76(r16)
  8068f8:	103fed1e 	bne	r2,zero,8068b0 <_Balloc+0x24>
  8068fc:	0005883a 	mov	r2,zero
  806900:	003ff306 	br	8068d0 <_Balloc+0x44>
  806904:	04800044 	movi	r18,1
  806908:	9464983a 	sll	r18,r18,r17
  80690c:	01400044 	movi	r5,1
  806910:	8009883a 	mov	r4,r16
  806914:	91800144 	addi	r6,r18,5
  806918:	300c90ba 	slli	r6,r6,2
  80691c:	08095e80 	call	8095e8 <_calloc_r>
  806920:	103ff626 	beq	r2,zero,8068fc <_Balloc+0x70>
  806924:	14400115 	stw	r17,4(r2)
  806928:	14800215 	stw	r18,8(r2)
  80692c:	003fe606 	br	8068c8 <_Balloc+0x3c>

00806930 <_Bfree>:
  806930:	28000726 	beq	r5,zero,806950 <_Bfree+0x20>
  806934:	28c00117 	ldw	r3,4(r5)
  806938:	20801317 	ldw	r2,76(r4)
  80693c:	180690ba 	slli	r3,r3,2
  806940:	10c5883a 	add	r2,r2,r3
  806944:	10c00017 	ldw	r3,0(r2)
  806948:	28c00015 	stw	r3,0(r5)
  80694c:	11400015 	stw	r5,0(r2)
  806950:	f800283a 	ret

00806954 <__multadd>:
  806954:	defff704 	addi	sp,sp,-36
  806958:	dc800215 	stw	r18,8(sp)
  80695c:	2c800417 	ldw	r18,16(r5)
  806960:	ddc00715 	stw	r23,28(sp)
  806964:	dd800615 	stw	r22,24(sp)
  806968:	dd400515 	stw	r21,20(sp)
  80696c:	dd000415 	stw	r20,16(sp)
  806970:	dcc00315 	stw	r19,12(sp)
  806974:	dc400115 	stw	r17,4(sp)
  806978:	dfc00815 	stw	ra,32(sp)
  80697c:	dc000015 	stw	r16,0(sp)
  806980:	2827883a 	mov	r19,r5
  806984:	2029883a 	mov	r20,r4
  806988:	302b883a 	mov	r21,r6
  80698c:	3823883a 	mov	r17,r7
  806990:	2d800504 	addi	r22,r5,20
  806994:	002f883a 	mov	r23,zero
  806998:	b4000017 	ldw	r16,0(r22)
  80699c:	a80b883a 	mov	r5,r21
  8069a0:	b5800104 	addi	r22,r22,4
  8069a4:	813fffcc 	andi	r4,r16,65535
  8069a8:	080b14c0 	call	80b14c <__mulsi3>
  8069ac:	8008d43a 	srli	r4,r16,16
  8069b0:	a80b883a 	mov	r5,r21
  8069b4:	1461883a 	add	r16,r2,r17
  8069b8:	080b14c0 	call	80b14c <__mulsi3>
  8069bc:	800ed43a 	srli	r7,r16,16
  8069c0:	843fffcc 	andi	r16,r16,65535
  8069c4:	bdc00044 	addi	r23,r23,1
  8069c8:	11c5883a 	add	r2,r2,r7
  8069cc:	1006943a 	slli	r3,r2,16
  8069d0:	1022d43a 	srli	r17,r2,16
  8069d4:	1c21883a 	add	r16,r3,r16
  8069d8:	b43fff15 	stw	r16,-4(r22)
  8069dc:	bcbfee16 	blt	r23,r18,806998 <__multadd+0x44>
  8069e0:	88000826 	beq	r17,zero,806a04 <__multadd+0xb0>
  8069e4:	98800217 	ldw	r2,8(r19)
  8069e8:	9080120e 	bge	r18,r2,806a34 <__multadd+0xe0>
  8069ec:	90800144 	addi	r2,r18,5
  8069f0:	100490ba 	slli	r2,r2,2
  8069f4:	94800044 	addi	r18,r18,1
  8069f8:	9885883a 	add	r2,r19,r2
  8069fc:	14400015 	stw	r17,0(r2)
  806a00:	9c800415 	stw	r18,16(r19)
  806a04:	9805883a 	mov	r2,r19
  806a08:	dfc00817 	ldw	ra,32(sp)
  806a0c:	ddc00717 	ldw	r23,28(sp)
  806a10:	dd800617 	ldw	r22,24(sp)
  806a14:	dd400517 	ldw	r21,20(sp)
  806a18:	dd000417 	ldw	r20,16(sp)
  806a1c:	dcc00317 	ldw	r19,12(sp)
  806a20:	dc800217 	ldw	r18,8(sp)
  806a24:	dc400117 	ldw	r17,4(sp)
  806a28:	dc000017 	ldw	r16,0(sp)
  806a2c:	dec00904 	addi	sp,sp,36
  806a30:	f800283a 	ret
  806a34:	99400117 	ldw	r5,4(r19)
  806a38:	a009883a 	mov	r4,r20
  806a3c:	29400044 	addi	r5,r5,1
  806a40:	080688c0 	call	80688c <_Balloc>
  806a44:	1021883a 	mov	r16,r2
  806a48:	10001226 	beq	r2,zero,806a94 <__multadd+0x140>
  806a4c:	99800417 	ldw	r6,16(r19)
  806a50:	99400304 	addi	r5,r19,12
  806a54:	11000304 	addi	r4,r2,12
  806a58:	31800084 	addi	r6,r6,2
  806a5c:	300c90ba 	slli	r6,r6,2
  806a60:	08066600 	call	806660 <memcpy>
  806a64:	98000926 	beq	r19,zero,806a8c <__multadd+0x138>
  806a68:	98c00117 	ldw	r3,4(r19)
  806a6c:	a0801317 	ldw	r2,76(r20)
  806a70:	180690ba 	slli	r3,r3,2
  806a74:	10c5883a 	add	r2,r2,r3
  806a78:	10c00017 	ldw	r3,0(r2)
  806a7c:	98c00015 	stw	r3,0(r19)
  806a80:	14c00015 	stw	r19,0(r2)
  806a84:	8027883a 	mov	r19,r16
  806a88:	003fd806 	br	8069ec <__multadd+0x98>
  806a8c:	8027883a 	mov	r19,r16
  806a90:	003fd606 	br	8069ec <__multadd+0x98>
  806a94:	01c02074 	movhi	r7,129
  806a98:	01002074 	movhi	r4,129
  806a9c:	39c1b804 	addi	r7,r7,1760
  806aa0:	000d883a 	mov	r6,zero
  806aa4:	01402d44 	movi	r5,181
  806aa8:	2101cd04 	addi	r4,r4,1844
  806aac:	08095700 	call	809570 <__assert_func>

00806ab0 <__s2b>:
  806ab0:	defff904 	addi	sp,sp,-28
  806ab4:	dc800215 	stw	r18,8(sp)
  806ab8:	dc000015 	stw	r16,0(sp)
  806abc:	2025883a 	mov	r18,r4
  806ac0:	2821883a 	mov	r16,r5
  806ac4:	39000204 	addi	r4,r7,8
  806ac8:	01400244 	movi	r5,9
  806acc:	dcc00315 	stw	r19,12(sp)
  806ad0:	dc400115 	stw	r17,4(sp)
  806ad4:	dfc00615 	stw	ra,24(sp)
  806ad8:	3823883a 	mov	r17,r7
  806adc:	dd400515 	stw	r21,20(sp)
  806ae0:	dd000415 	stw	r20,16(sp)
  806ae4:	3027883a 	mov	r19,r6
  806ae8:	080af980 	call	80af98 <__divsi3>
  806aec:	88c00290 	cmplti	r3,r17,10
  806af0:	1800341e 	bne	r3,zero,806bc4 <__s2b+0x114>
  806af4:	00c00044 	movi	r3,1
  806af8:	000b883a 	mov	r5,zero
  806afc:	18c7883a 	add	r3,r3,r3
  806b00:	29400044 	addi	r5,r5,1
  806b04:	18bffd16 	blt	r3,r2,806afc <__s2b+0x4c>
  806b08:	9009883a 	mov	r4,r18
  806b0c:	080688c0 	call	80688c <_Balloc>
  806b10:	100b883a 	mov	r5,r2
  806b14:	10002d26 	beq	r2,zero,806bcc <__s2b+0x11c>
  806b18:	d8800717 	ldw	r2,28(sp)
  806b1c:	28800515 	stw	r2,20(r5)
  806b20:	00800044 	movi	r2,1
  806b24:	28800415 	stw	r2,16(r5)
  806b28:	98800290 	cmplti	r2,r19,10
  806b2c:	1000221e 	bne	r2,zero,806bb8 <__s2b+0x108>
  806b30:	85400244 	addi	r21,r16,9
  806b34:	a829883a 	mov	r20,r21
  806b38:	84e1883a 	add	r16,r16,r19
  806b3c:	a1c00007 	ldb	r7,0(r20)
  806b40:	01800284 	movi	r6,10
  806b44:	9009883a 	mov	r4,r18
  806b48:	39fff404 	addi	r7,r7,-48
  806b4c:	08069540 	call	806954 <__multadd>
  806b50:	a5000044 	addi	r20,r20,1
  806b54:	100b883a 	mov	r5,r2
  806b58:	a43ff81e 	bne	r20,r16,806b3c <__s2b+0x8c>
  806b5c:	9c3ffe04 	addi	r16,r19,-8
  806b60:	ac21883a 	add	r16,r21,r16
  806b64:	9c400a0e 	bge	r19,r17,806b90 <__s2b+0xe0>
  806b68:	8ce3c83a 	sub	r17,r17,r19
  806b6c:	8463883a 	add	r17,r16,r17
  806b70:	81c00007 	ldb	r7,0(r16)
  806b74:	01800284 	movi	r6,10
  806b78:	9009883a 	mov	r4,r18
  806b7c:	39fff404 	addi	r7,r7,-48
  806b80:	08069540 	call	806954 <__multadd>
  806b84:	84000044 	addi	r16,r16,1
  806b88:	100b883a 	mov	r5,r2
  806b8c:	8c3ff81e 	bne	r17,r16,806b70 <__s2b+0xc0>
  806b90:	2805883a 	mov	r2,r5
  806b94:	dfc00617 	ldw	ra,24(sp)
  806b98:	dd400517 	ldw	r21,20(sp)
  806b9c:	dd000417 	ldw	r20,16(sp)
  806ba0:	dcc00317 	ldw	r19,12(sp)
  806ba4:	dc800217 	ldw	r18,8(sp)
  806ba8:	dc400117 	ldw	r17,4(sp)
  806bac:	dc000017 	ldw	r16,0(sp)
  806bb0:	dec00704 	addi	sp,sp,28
  806bb4:	f800283a 	ret
  806bb8:	84000284 	addi	r16,r16,10
  806bbc:	04c00244 	movi	r19,9
  806bc0:	003fe806 	br	806b64 <__s2b+0xb4>
  806bc4:	000b883a 	mov	r5,zero
  806bc8:	003fcf06 	br	806b08 <__s2b+0x58>
  806bcc:	01c02074 	movhi	r7,129
  806bd0:	01002074 	movhi	r4,129
  806bd4:	39c1b804 	addi	r7,r7,1760
  806bd8:	000d883a 	mov	r6,zero
  806bdc:	01403384 	movi	r5,206
  806be0:	2101cd04 	addi	r4,r4,1844
  806be4:	08095700 	call	809570 <__assert_func>

00806be8 <__hi0bits>:
  806be8:	20bfffec 	andhi	r2,r4,65535
  806bec:	1000131e 	bne	r2,zero,806c3c <__hi0bits+0x54>
  806bf0:	2008943a 	slli	r4,r4,16
  806bf4:	00800404 	movi	r2,16
  806bf8:	20ffc02c 	andhi	r3,r4,65280
  806bfc:	1800021e 	bne	r3,zero,806c08 <__hi0bits+0x20>
  806c00:	2008923a 	slli	r4,r4,8
  806c04:	10800204 	addi	r2,r2,8
  806c08:	20fc002c 	andhi	r3,r4,61440
  806c0c:	1800021e 	bne	r3,zero,806c18 <__hi0bits+0x30>
  806c10:	2008913a 	slli	r4,r4,4
  806c14:	10800104 	addi	r2,r2,4
  806c18:	20f0002c 	andhi	r3,r4,49152
  806c1c:	1800021e 	bne	r3,zero,806c28 <__hi0bits+0x40>
  806c20:	200890ba 	slli	r4,r4,2
  806c24:	10800084 	addi	r2,r2,2
  806c28:	20000316 	blt	r4,zero,806c38 <__hi0bits+0x50>
  806c2c:	2110002c 	andhi	r4,r4,16384
  806c30:	10800044 	addi	r2,r2,1
  806c34:	20000326 	beq	r4,zero,806c44 <__hi0bits+0x5c>
  806c38:	f800283a 	ret
  806c3c:	0005883a 	mov	r2,zero
  806c40:	003fed06 	br	806bf8 <__hi0bits+0x10>
  806c44:	00800804 	movi	r2,32
  806c48:	f800283a 	ret

00806c4c <__lo0bits>:
  806c4c:	20c00017 	ldw	r3,0(r4)
  806c50:	188001cc 	andi	r2,r3,7
  806c54:	10000826 	beq	r2,zero,806c78 <__lo0bits+0x2c>
  806c58:	1880004c 	andi	r2,r3,1
  806c5c:	10001f1e 	bne	r2,zero,806cdc <__lo0bits+0x90>
  806c60:	1880008c 	andi	r2,r3,2
  806c64:	10002126 	beq	r2,zero,806cec <__lo0bits+0xa0>
  806c68:	1806d07a 	srli	r3,r3,1
  806c6c:	00800044 	movi	r2,1
  806c70:	20c00015 	stw	r3,0(r4)
  806c74:	f800283a 	ret
  806c78:	18bfffcc 	andi	r2,r3,65535
  806c7c:	10001426 	beq	r2,zero,806cd0 <__lo0bits+0x84>
  806c80:	0005883a 	mov	r2,zero
  806c84:	19403fcc 	andi	r5,r3,255
  806c88:	2800021e 	bne	r5,zero,806c94 <__lo0bits+0x48>
  806c8c:	1806d23a 	srli	r3,r3,8
  806c90:	10800204 	addi	r2,r2,8
  806c94:	194003cc 	andi	r5,r3,15
  806c98:	2800021e 	bne	r5,zero,806ca4 <__lo0bits+0x58>
  806c9c:	1806d13a 	srli	r3,r3,4
  806ca0:	10800104 	addi	r2,r2,4
  806ca4:	194000cc 	andi	r5,r3,3
  806ca8:	2800021e 	bne	r5,zero,806cb4 <__lo0bits+0x68>
  806cac:	1806d0ba 	srli	r3,r3,2
  806cb0:	10800084 	addi	r2,r2,2
  806cb4:	1940004c 	andi	r5,r3,1
  806cb8:	2800031e 	bne	r5,zero,806cc8 <__lo0bits+0x7c>
  806cbc:	1806d07a 	srli	r3,r3,1
  806cc0:	10800044 	addi	r2,r2,1
  806cc4:	18000726 	beq	r3,zero,806ce4 <__lo0bits+0x98>
  806cc8:	20c00015 	stw	r3,0(r4)
  806ccc:	f800283a 	ret
  806cd0:	1806d43a 	srli	r3,r3,16
  806cd4:	00800404 	movi	r2,16
  806cd8:	003fea06 	br	806c84 <__lo0bits+0x38>
  806cdc:	0005883a 	mov	r2,zero
  806ce0:	f800283a 	ret
  806ce4:	00800804 	movi	r2,32
  806ce8:	f800283a 	ret
  806cec:	1806d0ba 	srli	r3,r3,2
  806cf0:	00800084 	movi	r2,2
  806cf4:	20c00015 	stw	r3,0(r4)
  806cf8:	f800283a 	ret

00806cfc <__i2b>:
  806cfc:	20c01317 	ldw	r3,76(r4)
  806d00:	defffd04 	addi	sp,sp,-12
  806d04:	dc400115 	stw	r17,4(sp)
  806d08:	dc000015 	stw	r16,0(sp)
  806d0c:	dfc00215 	stw	ra,8(sp)
  806d10:	2021883a 	mov	r16,r4
  806d14:	2823883a 	mov	r17,r5
  806d18:	18000d26 	beq	r3,zero,806d50 <__i2b+0x54>
  806d1c:	18800117 	ldw	r2,4(r3)
  806d20:	10001826 	beq	r2,zero,806d84 <__i2b+0x88>
  806d24:	11000017 	ldw	r4,0(r2)
  806d28:	19000115 	stw	r4,4(r3)
  806d2c:	00c00044 	movi	r3,1
  806d30:	10000315 	stw	zero,12(r2)
  806d34:	14400515 	stw	r17,20(r2)
  806d38:	10c00415 	stw	r3,16(r2)
  806d3c:	dfc00217 	ldw	ra,8(sp)
  806d40:	dc400117 	ldw	r17,4(sp)
  806d44:	dc000017 	ldw	r16,0(sp)
  806d48:	dec00304 	addi	sp,sp,12
  806d4c:	f800283a 	ret
  806d50:	01800844 	movi	r6,33
  806d54:	01400104 	movi	r5,4
  806d58:	08095e80 	call	8095e8 <_calloc_r>
  806d5c:	80801315 	stw	r2,76(r16)
  806d60:	1007883a 	mov	r3,r2
  806d64:	103fed1e 	bne	r2,zero,806d1c <__i2b+0x20>
  806d68:	01c02074 	movhi	r7,129
  806d6c:	01002074 	movhi	r4,129
  806d70:	39c1b804 	addi	r7,r7,1760
  806d74:	000d883a 	mov	r6,zero
  806d78:	01405004 	movi	r5,320
  806d7c:	2101cd04 	addi	r4,r4,1844
  806d80:	08095700 	call	809570 <__assert_func>
  806d84:	01800704 	movi	r6,28
  806d88:	01400044 	movi	r5,1
  806d8c:	8009883a 	mov	r4,r16
  806d90:	08095e80 	call	8095e8 <_calloc_r>
  806d94:	103ff426 	beq	r2,zero,806d68 <__i2b+0x6c>
  806d98:	00c00044 	movi	r3,1
  806d9c:	10c00115 	stw	r3,4(r2)
  806da0:	00c00084 	movi	r3,2
  806da4:	10c00215 	stw	r3,8(r2)
  806da8:	003fe006 	br	806d2c <__i2b+0x30>

00806dac <__multiply>:
  806dac:	defff004 	addi	sp,sp,-64
  806db0:	dd800c15 	stw	r22,48(sp)
  806db4:	dc400715 	stw	r17,28(sp)
  806db8:	2d800417 	ldw	r22,16(r5)
  806dbc:	34400417 	ldw	r17,16(r6)
  806dc0:	dc800815 	stw	r18,32(sp)
  806dc4:	dc000615 	stw	r16,24(sp)
  806dc8:	dfc00f15 	stw	ra,60(sp)
  806dcc:	df000e15 	stw	fp,56(sp)
  806dd0:	ddc00d15 	stw	r23,52(sp)
  806dd4:	dd400b15 	stw	r21,44(sp)
  806dd8:	dd000a15 	stw	r20,40(sp)
  806ddc:	dcc00915 	stw	r19,36(sp)
  806de0:	2825883a 	mov	r18,r5
  806de4:	3021883a 	mov	r16,r6
  806de8:	b4400516 	blt	r22,r17,806e00 <__multiply+0x54>
  806dec:	8807883a 	mov	r3,r17
  806df0:	2821883a 	mov	r16,r5
  806df4:	b023883a 	mov	r17,r22
  806df8:	3025883a 	mov	r18,r6
  806dfc:	182d883a 	mov	r22,r3
  806e00:	80800217 	ldw	r2,8(r16)
  806e04:	8d87883a 	add	r3,r17,r22
  806e08:	d8c00015 	stw	r3,0(sp)
  806e0c:	81400117 	ldw	r5,4(r16)
  806e10:	10c0010e 	bge	r2,r3,806e18 <__multiply+0x6c>
  806e14:	29400044 	addi	r5,r5,1
  806e18:	080688c0 	call	80688c <_Balloc>
  806e1c:	d8800515 	stw	r2,20(sp)
  806e20:	10008c26 	beq	r2,zero,807054 <__multiply+0x2a8>
  806e24:	d8800017 	ldw	r2,0(sp)
  806e28:	102690ba 	slli	r19,r2,2
  806e2c:	d8800517 	ldw	r2,20(sp)
  806e30:	15000504 	addi	r20,r2,20
  806e34:	a4c5883a 	add	r2,r20,r19
  806e38:	d8800115 	stw	r2,4(sp)
  806e3c:	a0800a2e 	bgeu	r20,r2,806e68 <__multiply+0xbc>
  806e40:	d8800117 	ldw	r2,4(sp)
  806e44:	d8c00517 	ldw	r3,20(sp)
  806e48:	000b883a 	mov	r5,zero
  806e4c:	a009883a 	mov	r4,r20
  806e50:	10cdc83a 	sub	r6,r2,r3
  806e54:	31bffac4 	addi	r6,r6,-21
  806e58:	300cd0ba 	srli	r6,r6,2
  806e5c:	31800044 	addi	r6,r6,1
  806e60:	300c90ba 	slli	r6,r6,2
  806e64:	08013d40 	call	8013d4 <memset>
  806e68:	b02c90ba 	slli	r22,r22,2
  806e6c:	882290ba 	slli	r17,r17,2
  806e70:	94800504 	addi	r18,r18,20
  806e74:	80800504 	addi	r2,r16,20
  806e78:	9587883a 	add	r3,r18,r22
  806e7c:	d8800315 	stw	r2,12(sp)
  806e80:	d8c00215 	stw	r3,8(sp)
  806e84:	1463883a 	add	r17,r2,r17
  806e88:	90c0542e 	bgeu	r18,r3,806fdc <__multiply+0x230>
  806e8c:	80800544 	addi	r2,r16,21
  806e90:	88806d36 	bltu	r17,r2,807048 <__multiply+0x29c>
  806e94:	8c05c83a 	sub	r2,r17,r16
  806e98:	10bffac4 	addi	r2,r2,-21
  806e9c:	1004d0ba 	srli	r2,r2,2
  806ea0:	10800044 	addi	r2,r2,1
  806ea4:	100490ba 	slli	r2,r2,2
  806ea8:	d8800415 	stw	r2,16(sp)
  806eac:	00000606 	br	806ec8 <__multiply+0x11c>
  806eb0:	102ad43a 	srli	r21,r2,16
  806eb4:	a800271e 	bne	r21,zero,806f54 <__multiply+0x1a8>
  806eb8:	d8800217 	ldw	r2,8(sp)
  806ebc:	94800104 	addi	r18,r18,4
  806ec0:	a5000104 	addi	r20,r20,4
  806ec4:	9080452e 	bgeu	r18,r2,806fdc <__multiply+0x230>
  806ec8:	90800017 	ldw	r2,0(r18)
  806ecc:	15ffffcc 	andi	r23,r2,65535
  806ed0:	b83ff726 	beq	r23,zero,806eb0 <__multiply+0x104>
  806ed4:	dd400317 	ldw	r21,12(sp)
  806ed8:	a02d883a 	mov	r22,r20
  806edc:	0027883a 	mov	r19,zero
  806ee0:	af000017 	ldw	fp,0(r21)
  806ee4:	b4000017 	ldw	r16,0(r22)
  806ee8:	b80b883a 	mov	r5,r23
  806eec:	e13fffcc 	andi	r4,fp,65535
  806ef0:	080b14c0 	call	80b14c <__mulsi3>
  806ef4:	e008d43a 	srli	r4,fp,16
  806ef8:	823fffcc 	andi	r8,r16,65535
  806efc:	1205883a 	add	r2,r2,r8
  806f00:	b80b883a 	mov	r5,r23
  806f04:	14e7883a 	add	r19,r2,r19
  806f08:	8020d43a 	srli	r16,r16,16
  806f0c:	080b14c0 	call	80b14c <__mulsi3>
  806f10:	9808d43a 	srli	r4,r19,16
  806f14:	1405883a 	add	r2,r2,r16
  806f18:	98ffffcc 	andi	r3,r19,65535
  806f1c:	1105883a 	add	r2,r2,r4
  806f20:	1008943a 	slli	r4,r2,16
  806f24:	b5800104 	addi	r22,r22,4
  806f28:	ad400104 	addi	r21,r21,4
  806f2c:	20c6b03a 	or	r3,r4,r3
  806f30:	b0ffff15 	stw	r3,-4(r22)
  806f34:	1026d43a 	srli	r19,r2,16
  806f38:	ac7fe936 	bltu	r21,r17,806ee0 <__multiply+0x134>
  806f3c:	d8800417 	ldw	r2,16(sp)
  806f40:	a085883a 	add	r2,r20,r2
  806f44:	14c00015 	stw	r19,0(r2)
  806f48:	90800017 	ldw	r2,0(r18)
  806f4c:	102ad43a 	srli	r21,r2,16
  806f50:	a83fd926 	beq	r21,zero,806eb8 <__multiply+0x10c>
  806f54:	a5c00017 	ldw	r23,0(r20)
  806f58:	dd800317 	ldw	r22,12(sp)
  806f5c:	a027883a 	mov	r19,r20
  806f60:	b821883a 	mov	r16,r23
  806f64:	0039883a 	mov	fp,zero
  806f68:	b100000b 	ldhu	r4,0(r22)
  806f6c:	a80b883a 	mov	r5,r21
  806f70:	9cc00104 	addi	r19,r19,4
  806f74:	080b14c0 	call	80b14c <__mulsi3>
  806f78:	800cd43a 	srli	r6,r16,16
  806f7c:	b8ffffcc 	andi	r3,r23,65535
  806f80:	b5800104 	addi	r22,r22,4
  806f84:	118d883a 	add	r6,r2,r6
  806f88:	3739883a 	add	fp,r6,fp
  806f8c:	e004943a 	slli	r2,fp,16
  806f90:	9c000017 	ldw	r16,0(r19)
  806f94:	a80b883a 	mov	r5,r21
  806f98:	10c6b03a 	or	r3,r2,r3
  806f9c:	98ffff15 	stw	r3,-4(r19)
  806fa0:	b13fff8b 	ldhu	r4,-2(r22)
  806fa4:	080b14c0 	call	80b14c <__mulsi3>
  806fa8:	e00cd43a 	srli	r6,fp,16
  806fac:	80ffffcc 	andi	r3,r16,65535
  806fb0:	10c7883a 	add	r3,r2,r3
  806fb4:	19af883a 	add	r23,r3,r6
  806fb8:	b838d43a 	srli	fp,r23,16
  806fbc:	b47fea36 	bltu	r22,r17,806f68 <__multiply+0x1bc>
  806fc0:	d8800417 	ldw	r2,16(sp)
  806fc4:	94800104 	addi	r18,r18,4
  806fc8:	a085883a 	add	r2,r20,r2
  806fcc:	15c00015 	stw	r23,0(r2)
  806fd0:	d8800217 	ldw	r2,8(sp)
  806fd4:	a5000104 	addi	r20,r20,4
  806fd8:	90bfbb36 	bltu	r18,r2,806ec8 <__multiply+0x11c>
  806fdc:	d8800017 	ldw	r2,0(sp)
  806fe0:	00800516 	blt	zero,r2,806ff8 <__multiply+0x24c>
  806fe4:	00000906 	br	80700c <__multiply+0x260>
  806fe8:	d8800017 	ldw	r2,0(sp)
  806fec:	10bfffc4 	addi	r2,r2,-1
  806ff0:	d8800015 	stw	r2,0(sp)
  806ff4:	10000526 	beq	r2,zero,80700c <__multiply+0x260>
  806ff8:	d8c00117 	ldw	r3,4(sp)
  806ffc:	18bfff17 	ldw	r2,-4(r3)
  807000:	18ffff04 	addi	r3,r3,-4
  807004:	d8c00115 	stw	r3,4(sp)
  807008:	103ff726 	beq	r2,zero,806fe8 <__multiply+0x23c>
  80700c:	d8800517 	ldw	r2,20(sp)
  807010:	d8c00017 	ldw	r3,0(sp)
  807014:	10c00415 	stw	r3,16(r2)
  807018:	dfc00f17 	ldw	ra,60(sp)
  80701c:	df000e17 	ldw	fp,56(sp)
  807020:	ddc00d17 	ldw	r23,52(sp)
  807024:	dd800c17 	ldw	r22,48(sp)
  807028:	dd400b17 	ldw	r21,44(sp)
  80702c:	dd000a17 	ldw	r20,40(sp)
  807030:	dcc00917 	ldw	r19,36(sp)
  807034:	dc800817 	ldw	r18,32(sp)
  807038:	dc400717 	ldw	r17,28(sp)
  80703c:	dc000617 	ldw	r16,24(sp)
  807040:	dec01004 	addi	sp,sp,64
  807044:	f800283a 	ret
  807048:	00800104 	movi	r2,4
  80704c:	d8800415 	stw	r2,16(sp)
  807050:	003f9d06 	br	806ec8 <__multiply+0x11c>
  807054:	01c02074 	movhi	r7,129
  807058:	01002074 	movhi	r4,129
  80705c:	39c1b804 	addi	r7,r7,1760
  807060:	000d883a 	mov	r6,zero
  807064:	01405744 	movi	r5,349
  807068:	2101cd04 	addi	r4,r4,1844
  80706c:	08095700 	call	809570 <__assert_func>

00807070 <__pow5mult>:
  807070:	defffb04 	addi	sp,sp,-20
  807074:	dcc00315 	stw	r19,12(sp)
  807078:	dc000015 	stw	r16,0(sp)
  80707c:	dfc00415 	stw	ra,16(sp)
  807080:	dc800215 	stw	r18,8(sp)
  807084:	dc400115 	stw	r17,4(sp)
  807088:	308000cc 	andi	r2,r6,3
  80708c:	3021883a 	mov	r16,r6
  807090:	2027883a 	mov	r19,r4
  807094:	10002d1e 	bne	r2,zero,80714c <__pow5mult+0xdc>
  807098:	2825883a 	mov	r18,r5
  80709c:	8021d0ba 	srai	r16,r16,2
  8070a0:	80001926 	beq	r16,zero,807108 <__pow5mult+0x98>
  8070a4:	9c401217 	ldw	r17,72(r19)
  8070a8:	8800061e 	bne	r17,zero,8070c4 <__pow5mult+0x54>
  8070ac:	00002f06 	br	80716c <__pow5mult+0xfc>
  8070b0:	8021d07a 	srai	r16,r16,1
  8070b4:	80001426 	beq	r16,zero,807108 <__pow5mult+0x98>
  8070b8:	88800017 	ldw	r2,0(r17)
  8070bc:	10001a26 	beq	r2,zero,807128 <__pow5mult+0xb8>
  8070c0:	1023883a 	mov	r17,r2
  8070c4:	8080004c 	andi	r2,r16,1
  8070c8:	103ff926 	beq	r2,zero,8070b0 <__pow5mult+0x40>
  8070cc:	880d883a 	mov	r6,r17
  8070d0:	900b883a 	mov	r5,r18
  8070d4:	9809883a 	mov	r4,r19
  8070d8:	0806dac0 	call	806dac <__multiply>
  8070dc:	90001926 	beq	r18,zero,807144 <__pow5mult+0xd4>
  8070e0:	91000117 	ldw	r4,4(r18)
  8070e4:	98c01317 	ldw	r3,76(r19)
  8070e8:	8021d07a 	srai	r16,r16,1
  8070ec:	200890ba 	slli	r4,r4,2
  8070f0:	1907883a 	add	r3,r3,r4
  8070f4:	19000017 	ldw	r4,0(r3)
  8070f8:	91000015 	stw	r4,0(r18)
  8070fc:	1c800015 	stw	r18,0(r3)
  807100:	1025883a 	mov	r18,r2
  807104:	803fec1e 	bne	r16,zero,8070b8 <__pow5mult+0x48>
  807108:	9005883a 	mov	r2,r18
  80710c:	dfc00417 	ldw	ra,16(sp)
  807110:	dcc00317 	ldw	r19,12(sp)
  807114:	dc800217 	ldw	r18,8(sp)
  807118:	dc400117 	ldw	r17,4(sp)
  80711c:	dc000017 	ldw	r16,0(sp)
  807120:	dec00504 	addi	sp,sp,20
  807124:	f800283a 	ret
  807128:	880d883a 	mov	r6,r17
  80712c:	880b883a 	mov	r5,r17
  807130:	9809883a 	mov	r4,r19
  807134:	0806dac0 	call	806dac <__multiply>
  807138:	88800015 	stw	r2,0(r17)
  80713c:	10000015 	stw	zero,0(r2)
  807140:	003fdf06 	br	8070c0 <__pow5mult+0x50>
  807144:	1025883a 	mov	r18,r2
  807148:	003fd906 	br	8070b0 <__pow5mult+0x40>
  80714c:	100490ba 	slli	r2,r2,2
  807150:	00c02074 	movhi	r3,129
  807154:	000f883a 	mov	r7,zero
  807158:	10c7883a 	add	r3,r2,r3
  80715c:	1981dc17 	ldw	r6,1904(r3)
  807160:	08069540 	call	806954 <__multadd>
  807164:	1025883a 	mov	r18,r2
  807168:	003fcc06 	br	80709c <__pow5mult+0x2c>
  80716c:	01400044 	movi	r5,1
  807170:	9809883a 	mov	r4,r19
  807174:	080688c0 	call	80688c <_Balloc>
  807178:	1023883a 	mov	r17,r2
  80717c:	10000726 	beq	r2,zero,80719c <__pow5mult+0x12c>
  807180:	00809c44 	movi	r2,625
  807184:	88800515 	stw	r2,20(r17)
  807188:	00800044 	movi	r2,1
  80718c:	88800415 	stw	r2,16(r17)
  807190:	9c401215 	stw	r17,72(r19)
  807194:	88000015 	stw	zero,0(r17)
  807198:	003fca06 	br	8070c4 <__pow5mult+0x54>
  80719c:	01c02074 	movhi	r7,129
  8071a0:	01002074 	movhi	r4,129
  8071a4:	39c1b804 	addi	r7,r7,1760
  8071a8:	000d883a 	mov	r6,zero
  8071ac:	01405004 	movi	r5,320
  8071b0:	2101cd04 	addi	r4,r4,1844
  8071b4:	08095700 	call	809570 <__assert_func>

008071b8 <__lshift>:
  8071b8:	defff804 	addi	sp,sp,-32
  8071bc:	dd800615 	stw	r22,24(sp)
  8071c0:	dc000015 	stw	r16,0(sp)
  8071c4:	302dd17a 	srai	r22,r6,5
  8071c8:	2c000417 	ldw	r16,16(r5)
  8071cc:	28800217 	ldw	r2,8(r5)
  8071d0:	dd000415 	stw	r20,16(sp)
  8071d4:	b421883a 	add	r16,r22,r16
  8071d8:	dcc00315 	stw	r19,12(sp)
  8071dc:	dc800215 	stw	r18,8(sp)
  8071e0:	dc400115 	stw	r17,4(sp)
  8071e4:	dfc00715 	stw	ra,28(sp)
  8071e8:	dd400515 	stw	r21,20(sp)
  8071ec:	85000044 	addi	r20,r16,1
  8071f0:	2827883a 	mov	r19,r5
  8071f4:	3025883a 	mov	r18,r6
  8071f8:	29400117 	ldw	r5,4(r5)
  8071fc:	2023883a 	mov	r17,r4
  807200:	1500030e 	bge	r2,r20,807210 <__lshift+0x58>
  807204:	1085883a 	add	r2,r2,r2
  807208:	29400044 	addi	r5,r5,1
  80720c:	153ffd16 	blt	r2,r20,807204 <__lshift+0x4c>
  807210:	8809883a 	mov	r4,r17
  807214:	080688c0 	call	80688c <_Balloc>
  807218:	102b883a 	mov	r21,r2
  80721c:	10004126 	beq	r2,zero,807324 <__lshift+0x16c>
  807220:	11000504 	addi	r4,r2,20
  807224:	0580050e 	bge	zero,r22,80723c <__lshift+0x84>
  807228:	b02c90ba 	slli	r22,r22,2
  80722c:	000b883a 	mov	r5,zero
  807230:	b00d883a 	mov	r6,r22
  807234:	08013d40 	call	8013d4 <memset>
  807238:	1589883a 	add	r4,r2,r22
  80723c:	9a000417 	ldw	r8,16(r19)
  807240:	98c00504 	addi	r3,r19,20
  807244:	948007cc 	andi	r18,r18,31
  807248:	401090ba 	slli	r8,r8,2
  80724c:	1a11883a 	add	r8,r3,r8
  807250:	90002c26 	beq	r18,zero,807304 <__lshift+0x14c>
  807254:	01400804 	movi	r5,32
  807258:	2c8bc83a 	sub	r5,r5,r18
  80725c:	2005883a 	mov	r2,r4
  807260:	000f883a 	mov	r7,zero
  807264:	19800017 	ldw	r6,0(r3)
  807268:	10800104 	addi	r2,r2,4
  80726c:	18c00104 	addi	r3,r3,4
  807270:	348c983a 	sll	r6,r6,r18
  807274:	31ccb03a 	or	r6,r6,r7
  807278:	11bfff15 	stw	r6,-4(r2)
  80727c:	19bfff17 	ldw	r6,-4(r3)
  807280:	314ed83a 	srl	r7,r6,r5
  807284:	1a3ff736 	bltu	r3,r8,807264 <__lshift+0xac>
  807288:	98800544 	addi	r2,r19,21
  80728c:	40802336 	bltu	r8,r2,80731c <__lshift+0x164>
  807290:	44c7c83a 	sub	r3,r8,r19
  807294:	18fffac4 	addi	r3,r3,-21
  807298:	1806d0ba 	srli	r3,r3,2
  80729c:	18c00044 	addi	r3,r3,1
  8072a0:	180690ba 	slli	r3,r3,2
  8072a4:	20c9883a 	add	r4,r4,r3
  8072a8:	21c00015 	stw	r7,0(r4)
  8072ac:	38000126 	beq	r7,zero,8072b4 <__lshift+0xfc>
  8072b0:	a021883a 	mov	r16,r20
  8072b4:	ac000415 	stw	r16,16(r21)
  8072b8:	98000726 	beq	r19,zero,8072d8 <__lshift+0x120>
  8072bc:	98c00117 	ldw	r3,4(r19)
  8072c0:	88801317 	ldw	r2,76(r17)
  8072c4:	180690ba 	slli	r3,r3,2
  8072c8:	10c5883a 	add	r2,r2,r3
  8072cc:	10c00017 	ldw	r3,0(r2)
  8072d0:	98c00015 	stw	r3,0(r19)
  8072d4:	14c00015 	stw	r19,0(r2)
  8072d8:	a805883a 	mov	r2,r21
  8072dc:	dfc00717 	ldw	ra,28(sp)
  8072e0:	dd800617 	ldw	r22,24(sp)
  8072e4:	dd400517 	ldw	r21,20(sp)
  8072e8:	dd000417 	ldw	r20,16(sp)
  8072ec:	dcc00317 	ldw	r19,12(sp)
  8072f0:	dc800217 	ldw	r18,8(sp)
  8072f4:	dc400117 	ldw	r17,4(sp)
  8072f8:	dc000017 	ldw	r16,0(sp)
  8072fc:	dec00804 	addi	sp,sp,32
  807300:	f800283a 	ret
  807304:	18800017 	ldw	r2,0(r3)
  807308:	18c00104 	addi	r3,r3,4
  80730c:	21000104 	addi	r4,r4,4
  807310:	20bfff15 	stw	r2,-4(r4)
  807314:	1a3ffb36 	bltu	r3,r8,807304 <__lshift+0x14c>
  807318:	003fe606 	br	8072b4 <__lshift+0xfc>
  80731c:	00c00104 	movi	r3,4
  807320:	003fe006 	br	8072a4 <__lshift+0xec>
  807324:	01c02074 	movhi	r7,129
  807328:	01002074 	movhi	r4,129
  80732c:	39c1b804 	addi	r7,r7,1760
  807330:	000d883a 	mov	r6,zero
  807334:	01407644 	movi	r5,473
  807338:	2101cd04 	addi	r4,r4,1844
  80733c:	08095700 	call	809570 <__assert_func>

00807340 <__mcmp>:
  807340:	21800417 	ldw	r6,16(r4)
  807344:	28c00417 	ldw	r3,16(r5)
  807348:	30c5c83a 	sub	r2,r6,r3
  80734c:	30c00e1e 	bne	r6,r3,807388 <__mcmp+0x48>
  807350:	180690ba 	slli	r3,r3,2
  807354:	21c00504 	addi	r7,r4,20
  807358:	29400504 	addi	r5,r5,20
  80735c:	38c9883a 	add	r4,r7,r3
  807360:	28c7883a 	add	r3,r5,r3
  807364:	00000106 	br	80736c <__mcmp+0x2c>
  807368:	3900082e 	bgeu	r7,r4,80738c <__mcmp+0x4c>
  80736c:	21bfff17 	ldw	r6,-4(r4)
  807370:	197fff17 	ldw	r5,-4(r3)
  807374:	213fff04 	addi	r4,r4,-4
  807378:	18ffff04 	addi	r3,r3,-4
  80737c:	317ffa26 	beq	r6,r5,807368 <__mcmp+0x28>
  807380:	3140032e 	bgeu	r6,r5,807390 <__mcmp+0x50>
  807384:	00bfffc4 	movi	r2,-1
  807388:	f800283a 	ret
  80738c:	f800283a 	ret
  807390:	00800044 	movi	r2,1
  807394:	f800283a 	ret

00807398 <__mdiff>:
  807398:	28800417 	ldw	r2,16(r5)
  80739c:	30c00417 	ldw	r3,16(r6)
  8073a0:	defffc04 	addi	sp,sp,-16
  8073a4:	dc800215 	stw	r18,8(sp)
  8073a8:	dc400115 	stw	r17,4(sp)
  8073ac:	dc000015 	stw	r16,0(sp)
  8073b0:	dfc00315 	stw	ra,12(sp)
  8073b4:	2823883a 	mov	r17,r5
  8073b8:	3021883a 	mov	r16,r6
  8073bc:	10e5c83a 	sub	r18,r2,r3
  8073c0:	10c0641e 	bne	r2,r3,807554 <__mdiff+0x1bc>
  8073c4:	180c90ba 	slli	r6,r3,2
  8073c8:	29400504 	addi	r5,r5,20
  8073cc:	80c00504 	addi	r3,r16,20
  8073d0:	2985883a 	add	r2,r5,r6
  8073d4:	1987883a 	add	r3,r3,r6
  8073d8:	00000106 	br	8073e0 <__mdiff+0x48>
  8073dc:	2880642e 	bgeu	r5,r2,807570 <__mdiff+0x1d8>
  8073e0:	11bfff17 	ldw	r6,-4(r2)
  8073e4:	19ffff17 	ldw	r7,-4(r3)
  8073e8:	10bfff04 	addi	r2,r2,-4
  8073ec:	18ffff04 	addi	r3,r3,-4
  8073f0:	31fffa26 	beq	r6,r7,8073dc <__mdiff+0x44>
  8073f4:	31c05236 	bltu	r6,r7,807540 <__mdiff+0x1a8>
  8073f8:	89400117 	ldw	r5,4(r17)
  8073fc:	080688c0 	call	80688c <_Balloc>
  807400:	10006226 	beq	r2,zero,80758c <__mdiff+0x1f4>
  807404:	8a400417 	ldw	r9,16(r17)
  807408:	83000417 	ldw	r12,16(r16)
  80740c:	8ac00504 	addi	r11,r17,20
  807410:	481090ba 	slli	r8,r9,2
  807414:	601890ba 	slli	r12,r12,2
  807418:	81800504 	addi	r6,r16,20
  80741c:	13400504 	addi	r13,r2,20
  807420:	14800315 	stw	r18,12(r2)
  807424:	5a11883a 	add	r8,r11,r8
  807428:	3319883a 	add	r12,r6,r12
  80742c:	681d883a 	mov	r14,r13
  807430:	5815883a 	mov	r10,r11
  807434:	0007883a 	mov	r3,zero
  807438:	51000017 	ldw	r4,0(r10)
  80743c:	31c00017 	ldw	r7,0(r6)
  807440:	73800104 	addi	r14,r14,4
  807444:	217fffcc 	andi	r5,r4,65535
  807448:	28cb883a 	add	r5,r5,r3
  80744c:	38ffffcc 	andi	r3,r7,65535
  807450:	28cbc83a 	sub	r5,r5,r3
  807454:	380ed43a 	srli	r7,r7,16
  807458:	2006d43a 	srli	r3,r4,16
  80745c:	2809d43a 	srai	r4,r5,16
  807460:	297fffcc 	andi	r5,r5,65535
  807464:	19c7c83a 	sub	r3,r3,r7
  807468:	1907883a 	add	r3,r3,r4
  80746c:	1808943a 	slli	r4,r3,16
  807470:	31800104 	addi	r6,r6,4
  807474:	1807d43a 	srai	r3,r3,16
  807478:	214ab03a 	or	r5,r4,r5
  80747c:	717fff15 	stw	r5,-4(r14)
  807480:	52800104 	addi	r10,r10,4
  807484:	333fec36 	bltu	r6,r12,807438 <__mdiff+0xa0>
  807488:	640fc83a 	sub	r7,r12,r16
  80748c:	39fffac4 	addi	r7,r7,-21
  807490:	84000544 	addi	r16,r16,21
  807494:	380ed0ba 	srli	r7,r7,2
  807498:	64003336 	bltu	r12,r16,807568 <__mdiff+0x1d0>
  80749c:	380890ba 	slli	r4,r7,2
  8074a0:	6909883a 	add	r4,r13,r4
  8074a4:	64002e36 	bltu	r12,r16,807560 <__mdiff+0x1c8>
  8074a8:	39800044 	addi	r6,r7,1
  8074ac:	300c90ba 	slli	r6,r6,2
  8074b0:	5997883a 	add	r11,r11,r6
  8074b4:	699b883a 	add	r13,r13,r6
  8074b8:	5a00152e 	bgeu	r11,r8,807510 <__mdiff+0x178>
  8074bc:	680f883a 	mov	r7,r13
  8074c0:	580d883a 	mov	r6,r11
  8074c4:	31000017 	ldw	r4,0(r6)
  8074c8:	39c00104 	addi	r7,r7,4
  8074cc:	31800104 	addi	r6,r6,4
  8074d0:	217fffcc 	andi	r5,r4,65535
  8074d4:	28cb883a 	add	r5,r5,r3
  8074d8:	2815d43a 	srai	r10,r5,16
  8074dc:	2006d43a 	srli	r3,r4,16
  8074e0:	297fffcc 	andi	r5,r5,65535
  8074e4:	1a87883a 	add	r3,r3,r10
  8074e8:	1814943a 	slli	r10,r3,16
  8074ec:	1807d43a 	srai	r3,r3,16
  8074f0:	514ab03a 	or	r5,r10,r5
  8074f4:	397fff15 	stw	r5,-4(r7)
  8074f8:	323ff236 	bltu	r6,r8,8074c4 <__mdiff+0x12c>
  8074fc:	413fffc4 	addi	r4,r8,-1
  807500:	22c9c83a 	sub	r4,r4,r11
  807504:	2008d0ba 	srli	r4,r4,2
  807508:	200890ba 	slli	r4,r4,2
  80750c:	6909883a 	add	r4,r13,r4
  807510:	2800041e 	bne	r5,zero,807524 <__mdiff+0x18c>
  807514:	20ffff17 	ldw	r3,-4(r4)
  807518:	4a7fffc4 	addi	r9,r9,-1
  80751c:	213fff04 	addi	r4,r4,-4
  807520:	183ffc26 	beq	r3,zero,807514 <__mdiff+0x17c>
  807524:	12400415 	stw	r9,16(r2)
  807528:	dfc00317 	ldw	ra,12(sp)
  80752c:	dc800217 	ldw	r18,8(sp)
  807530:	dc400117 	ldw	r17,4(sp)
  807534:	dc000017 	ldw	r16,0(sp)
  807538:	dec00404 	addi	sp,sp,16
  80753c:	f800283a 	ret
  807540:	8805883a 	mov	r2,r17
  807544:	04800044 	movi	r18,1
  807548:	8023883a 	mov	r17,r16
  80754c:	1021883a 	mov	r16,r2
  807550:	003fa906 	br	8073f8 <__mdiff+0x60>
  807554:	903ffa16 	blt	r18,zero,807540 <__mdiff+0x1a8>
  807558:	0025883a 	mov	r18,zero
  80755c:	003fa606 	br	8073f8 <__mdiff+0x60>
  807560:	01800104 	movi	r6,4
  807564:	003fd206 	br	8074b0 <__mdiff+0x118>
  807568:	0009883a 	mov	r4,zero
  80756c:	003fcc06 	br	8074a0 <__mdiff+0x108>
  807570:	000b883a 	mov	r5,zero
  807574:	080688c0 	call	80688c <_Balloc>
  807578:	10000b26 	beq	r2,zero,8075a8 <__mdiff+0x210>
  80757c:	00c00044 	movi	r3,1
  807580:	10c00415 	stw	r3,16(r2)
  807584:	10000515 	stw	zero,20(r2)
  807588:	003fe706 	br	807528 <__mdiff+0x190>
  80758c:	01c02074 	movhi	r7,129
  807590:	01002074 	movhi	r4,129
  807594:	39c1b804 	addi	r7,r7,1760
  807598:	000d883a 	mov	r6,zero
  80759c:	01409004 	movi	r5,576
  8075a0:	2101cd04 	addi	r4,r4,1844
  8075a4:	08095700 	call	809570 <__assert_func>
  8075a8:	01c02074 	movhi	r7,129
  8075ac:	01002074 	movhi	r4,129
  8075b0:	39c1b804 	addi	r7,r7,1760
  8075b4:	000d883a 	mov	r6,zero
  8075b8:	01408c84 	movi	r5,562
  8075bc:	2101cd04 	addi	r4,r4,1844
  8075c0:	08095700 	call	809570 <__assert_func>

008075c4 <__ulp>:
  8075c4:	28dffc2c 	andhi	r3,r5,32752
  8075c8:	017f3034 	movhi	r5,64704
  8075cc:	1947883a 	add	r3,r3,r5
  8075d0:	00c0020e 	bge	zero,r3,8075dc <__ulp+0x18>
  8075d4:	0005883a 	mov	r2,zero
  8075d8:	f800283a 	ret
  8075dc:	00c7c83a 	sub	r3,zero,r3
  8075e0:	1807d53a 	srai	r3,r3,20
  8075e4:	18800508 	cmpgei	r2,r3,20
  8075e8:	1000041e 	bne	r2,zero,8075fc <__ulp+0x38>
  8075ec:	00800234 	movhi	r2,8
  8075f0:	10c7d83a 	sra	r3,r2,r3
  8075f4:	0005883a 	mov	r2,zero
  8075f8:	f800283a 	ret
  8075fc:	193ffb04 	addi	r4,r3,-20
  807600:	208007c8 	cmpgei	r2,r4,31
  807604:	0007883a 	mov	r3,zero
  807608:	1000031e 	bne	r2,zero,807618 <__ulp+0x54>
  80760c:	00a00034 	movhi	r2,32768
  807610:	1104d83a 	srl	r2,r2,r4
  807614:	f800283a 	ret
  807618:	00800044 	movi	r2,1
  80761c:	f800283a 	ret

00807620 <__b2d>:
  807620:	defffa04 	addi	sp,sp,-24
  807624:	dc400115 	stw	r17,4(sp)
  807628:	24400417 	ldw	r17,16(r4)
  80762c:	dc000015 	stw	r16,0(sp)
  807630:	24000504 	addi	r16,r4,20
  807634:	882290ba 	slli	r17,r17,2
  807638:	dc800215 	stw	r18,8(sp)
  80763c:	dd000415 	stw	r20,16(sp)
  807640:	8463883a 	add	r17,r16,r17
  807644:	8cbfff17 	ldw	r18,-4(r17)
  807648:	dcc00315 	stw	r19,12(sp)
  80764c:	dfc00515 	stw	ra,20(sp)
  807650:	9009883a 	mov	r4,r18
  807654:	2827883a 	mov	r19,r5
  807658:	0806be80 	call	806be8 <__hi0bits>
  80765c:	00c00804 	movi	r3,32
  807660:	1889c83a 	sub	r4,r3,r2
  807664:	99000015 	stw	r4,0(r19)
  807668:	110002c8 	cmpgei	r4,r2,11
  80766c:	8d3fff04 	addi	r20,r17,-4
  807670:	20002026 	beq	r4,zero,8076f4 <__b2d+0xd4>
  807674:	10bffd44 	addi	r2,r2,-11
  807678:	85000e2e 	bgeu	r16,r20,8076b4 <__b2d+0x94>
  80767c:	897ffe17 	ldw	r5,-8(r17)
  807680:	10001226 	beq	r2,zero,8076cc <__b2d+0xac>
  807684:	1889c83a 	sub	r4,r3,r2
  807688:	90a4983a 	sll	r18,r18,r2
  80768c:	2906d83a 	srl	r3,r5,r4
  807690:	89bffe04 	addi	r6,r17,-8
  807694:	2884983a 	sll	r2,r5,r2
  807698:	90e4b03a 	or	r18,r18,r3
  80769c:	90cffc34 	orhi	r3,r18,16368
  8076a0:	81800c2e 	bgeu	r16,r6,8076d4 <__b2d+0xb4>
  8076a4:	897ffd17 	ldw	r5,-12(r17)
  8076a8:	2908d83a 	srl	r4,r5,r4
  8076ac:	1104b03a 	or	r2,r2,r4
  8076b0:	00000806 	br	8076d4 <__b2d+0xb4>
  8076b4:	10000426 	beq	r2,zero,8076c8 <__b2d+0xa8>
  8076b8:	90a4983a 	sll	r18,r18,r2
  8076bc:	0005883a 	mov	r2,zero
  8076c0:	90cffc34 	orhi	r3,r18,16368
  8076c4:	00000306 	br	8076d4 <__b2d+0xb4>
  8076c8:	000b883a 	mov	r5,zero
  8076cc:	90cffc34 	orhi	r3,r18,16368
  8076d0:	2805883a 	mov	r2,r5
  8076d4:	dfc00517 	ldw	ra,20(sp)
  8076d8:	dd000417 	ldw	r20,16(sp)
  8076dc:	dcc00317 	ldw	r19,12(sp)
  8076e0:	dc800217 	ldw	r18,8(sp)
  8076e4:	dc400117 	ldw	r17,4(sp)
  8076e8:	dc000017 	ldw	r16,0(sp)
  8076ec:	dec00604 	addi	sp,sp,24
  8076f0:	f800283a 	ret
  8076f4:	014002c4 	movi	r5,11
  8076f8:	2889c83a 	sub	r4,r5,r2
  8076fc:	9106d83a 	srl	r3,r18,r4
  807700:	18cffc34 	orhi	r3,r3,16368
  807704:	85000536 	bltu	r16,r20,80771c <__b2d+0xfc>
  807708:	000b883a 	mov	r5,zero
  80770c:	10800544 	addi	r2,r2,21
  807710:	9084983a 	sll	r2,r18,r2
  807714:	1144b03a 	or	r2,r2,r5
  807718:	003fee06 	br	8076d4 <__b2d+0xb4>
  80771c:	897ffe17 	ldw	r5,-8(r17)
  807720:	290ad83a 	srl	r5,r5,r4
  807724:	003ff906 	br	80770c <__b2d+0xec>

00807728 <__d2b>:
  807728:	defff804 	addi	sp,sp,-32
  80772c:	dd000615 	stw	r20,24(sp)
  807730:	2829883a 	mov	r20,r5
  807734:	01400044 	movi	r5,1
  807738:	dcc00515 	stw	r19,20(sp)
  80773c:	dc000215 	stw	r16,8(sp)
  807740:	dfc00715 	stw	ra,28(sp)
  807744:	dc800415 	stw	r18,16(sp)
  807748:	dc400315 	stw	r17,12(sp)
  80774c:	3021883a 	mov	r16,r6
  807750:	3827883a 	mov	r19,r7
  807754:	080688c0 	call	80688c <_Balloc>
  807758:	10004526 	beq	r2,zero,807870 <__d2b+0x148>
  80775c:	8024d53a 	srli	r18,r16,20
  807760:	01800434 	movhi	r6,16
  807764:	31bfffc4 	addi	r6,r6,-1
  807768:	9481ffcc 	andi	r18,r18,2047
  80776c:	1023883a 	mov	r17,r2
  807770:	81a0703a 	and	r16,r16,r6
  807774:	90000126 	beq	r18,zero,80777c <__d2b+0x54>
  807778:	84000434 	orhi	r16,r16,16
  80777c:	dc000115 	stw	r16,4(sp)
  807780:	a0002226 	beq	r20,zero,80780c <__d2b+0xe4>
  807784:	d809883a 	mov	r4,sp
  807788:	dd000015 	stw	r20,0(sp)
  80778c:	0806c4c0 	call	806c4c <__lo0bits>
  807790:	d8c00117 	ldw	r3,4(sp)
  807794:	10003326 	beq	r2,zero,807864 <__d2b+0x13c>
  807798:	01000804 	movi	r4,32
  80779c:	2089c83a 	sub	r4,r4,r2
  8077a0:	1908983a 	sll	r4,r3,r4
  8077a4:	d9400017 	ldw	r5,0(sp)
  8077a8:	1886d83a 	srl	r3,r3,r2
  8077ac:	2148b03a 	or	r4,r4,r5
  8077b0:	89000515 	stw	r4,20(r17)
  8077b4:	d8c00115 	stw	r3,4(sp)
  8077b8:	88c00615 	stw	r3,24(r17)
  8077bc:	1800271e 	bne	r3,zero,80785c <__d2b+0x134>
  8077c0:	04000044 	movi	r16,1
  8077c4:	8c000415 	stw	r16,16(r17)
  8077c8:	90001926 	beq	r18,zero,807830 <__d2b+0x108>
  8077cc:	00c00d44 	movi	r3,53
  8077d0:	94bef344 	addi	r18,r18,-1075
  8077d4:	90a5883a 	add	r18,r18,r2
  8077d8:	1885c83a 	sub	r2,r3,r2
  8077dc:	d8c00817 	ldw	r3,32(sp)
  8077e0:	9c800015 	stw	r18,0(r19)
  8077e4:	18800015 	stw	r2,0(r3)
  8077e8:	8805883a 	mov	r2,r17
  8077ec:	dfc00717 	ldw	ra,28(sp)
  8077f0:	dd000617 	ldw	r20,24(sp)
  8077f4:	dcc00517 	ldw	r19,20(sp)
  8077f8:	dc800417 	ldw	r18,16(sp)
  8077fc:	dc400317 	ldw	r17,12(sp)
  807800:	dc000217 	ldw	r16,8(sp)
  807804:	dec00804 	addi	sp,sp,32
  807808:	f800283a 	ret
  80780c:	d9000104 	addi	r4,sp,4
  807810:	0806c4c0 	call	806c4c <__lo0bits>
  807814:	00c00044 	movi	r3,1
  807818:	88c00415 	stw	r3,16(r17)
  80781c:	d8c00117 	ldw	r3,4(sp)
  807820:	10800804 	addi	r2,r2,32
  807824:	04000044 	movi	r16,1
  807828:	88c00515 	stw	r3,20(r17)
  80782c:	903fe71e 	bne	r18,zero,8077cc <__d2b+0xa4>
  807830:	800690ba 	slli	r3,r16,2
  807834:	10bef384 	addi	r2,r2,-1074
  807838:	98800015 	stw	r2,0(r19)
  80783c:	88c5883a 	add	r2,r17,r3
  807840:	11000417 	ldw	r4,16(r2)
  807844:	8020917a 	slli	r16,r16,5
  807848:	0806be80 	call	806be8 <__hi0bits>
  80784c:	80a1c83a 	sub	r16,r16,r2
  807850:	d8800817 	ldw	r2,32(sp)
  807854:	14000015 	stw	r16,0(r2)
  807858:	003fe306 	br	8077e8 <__d2b+0xc0>
  80785c:	04000084 	movi	r16,2
  807860:	003fd806 	br	8077c4 <__d2b+0x9c>
  807864:	d9000017 	ldw	r4,0(sp)
  807868:	89000515 	stw	r4,20(r17)
  80786c:	003fd206 	br	8077b8 <__d2b+0x90>
  807870:	01c02074 	movhi	r7,129
  807874:	01002074 	movhi	r4,129
  807878:	39c1b804 	addi	r7,r7,1760
  80787c:	000d883a 	mov	r6,zero
  807880:	0140c284 	movi	r5,778
  807884:	2101cd04 	addi	r4,r4,1844
  807888:	08095700 	call	809570 <__assert_func>

0080788c <__ratio>:
  80788c:	defff904 	addi	sp,sp,-28
  807890:	dc400315 	stw	r17,12(sp)
  807894:	2823883a 	mov	r17,r5
  807898:	d80b883a 	mov	r5,sp
  80789c:	dfc00615 	stw	ra,24(sp)
  8078a0:	dcc00515 	stw	r19,20(sp)
  8078a4:	dc800415 	stw	r18,16(sp)
  8078a8:	2027883a 	mov	r19,r4
  8078ac:	dc000215 	stw	r16,8(sp)
  8078b0:	08076200 	call	807620 <__b2d>
  8078b4:	d9400104 	addi	r5,sp,4
  8078b8:	8809883a 	mov	r4,r17
  8078bc:	1025883a 	mov	r18,r2
  8078c0:	1821883a 	mov	r16,r3
  8078c4:	08076200 	call	807620 <__b2d>
  8078c8:	89000417 	ldw	r4,16(r17)
  8078cc:	9a000417 	ldw	r8,16(r19)
  8078d0:	d9400117 	ldw	r5,4(sp)
  8078d4:	100d883a 	mov	r6,r2
  8078d8:	4111c83a 	sub	r8,r8,r4
  8078dc:	d9000017 	ldw	r4,0(sp)
  8078e0:	4010917a 	slli	r8,r8,5
  8078e4:	180f883a 	mov	r7,r3
  8078e8:	2149c83a 	sub	r4,r4,r5
  8078ec:	4111883a 	add	r8,r8,r4
  8078f0:	02000c0e 	bge	zero,r8,807924 <__ratio+0x98>
  8078f4:	4010953a 	slli	r8,r8,20
  8078f8:	4421883a 	add	r16,r8,r16
  8078fc:	9009883a 	mov	r4,r18
  807900:	800b883a 	mov	r5,r16
  807904:	080ba640 	call	80ba64 <__divdf3>
  807908:	dfc00617 	ldw	ra,24(sp)
  80790c:	dcc00517 	ldw	r19,20(sp)
  807910:	dc800417 	ldw	r18,16(sp)
  807914:	dc400317 	ldw	r17,12(sp)
  807918:	dc000217 	ldw	r16,8(sp)
  80791c:	dec00704 	addi	sp,sp,28
  807920:	f800283a 	ret
  807924:	4010953a 	slli	r8,r8,20
  807928:	1a0fc83a 	sub	r7,r3,r8
  80792c:	003ff306 	br	8078fc <__ratio+0x70>

00807930 <_mprec_log10>:
  807930:	defffe04 	addi	sp,sp,-8
  807934:	dc000015 	stw	r16,0(sp)
  807938:	dfc00115 	stw	ra,4(sp)
  80793c:	20800608 	cmpgei	r2,r4,24
  807940:	2021883a 	mov	r16,r4
  807944:	10000f26 	beq	r2,zero,807984 <_mprec_log10+0x54>
  807948:	0009883a 	mov	r4,zero
  80794c:	014ffc34 	movhi	r5,16368
  807950:	000d883a 	mov	r6,zero
  807954:	01d00934 	movhi	r7,16420
  807958:	080c5e40 	call	80c5e4 <__muldf3>
  80795c:	843fffc4 	addi	r16,r16,-1
  807960:	1009883a 	mov	r4,r2
  807964:	180b883a 	mov	r5,r3
  807968:	803ff91e 	bne	r16,zero,807950 <_mprec_log10+0x20>
  80796c:	2005883a 	mov	r2,r4
  807970:	2807883a 	mov	r3,r5
  807974:	dfc00117 	ldw	ra,4(sp)
  807978:	dc000017 	ldw	r16,0(sp)
  80797c:	dec00204 	addi	sp,sp,8
  807980:	f800283a 	ret
  807984:	202090fa 	slli	r16,r4,3
  807988:	00802074 	movhi	r2,129
  80798c:	1081f404 	addi	r2,r2,2000
  807990:	1421883a 	add	r16,r2,r16
  807994:	81000017 	ldw	r4,0(r16)
  807998:	81400117 	ldw	r5,4(r16)
  80799c:	003ff306 	br	80796c <_mprec_log10+0x3c>

008079a0 <__copybits>:
  8079a0:	297fffc4 	addi	r5,r5,-1
  8079a4:	280fd17a 	srai	r7,r5,5
  8079a8:	31400417 	ldw	r5,16(r6)
  8079ac:	30800504 	addi	r2,r6,20
  8079b0:	39c00044 	addi	r7,r7,1
  8079b4:	280a90ba 	slli	r5,r5,2
  8079b8:	380e90ba 	slli	r7,r7,2
  8079bc:	114b883a 	add	r5,r2,r5
  8079c0:	21cf883a 	add	r7,r4,r7
  8079c4:	11400c2e 	bgeu	r2,r5,8079f8 <__copybits+0x58>
  8079c8:	2007883a 	mov	r3,r4
  8079cc:	12000017 	ldw	r8,0(r2)
  8079d0:	10800104 	addi	r2,r2,4
  8079d4:	18c00104 	addi	r3,r3,4
  8079d8:	1a3fff15 	stw	r8,-4(r3)
  8079dc:	117ffb36 	bltu	r2,r5,8079cc <__copybits+0x2c>
  8079e0:	2985c83a 	sub	r2,r5,r6
  8079e4:	10bffac4 	addi	r2,r2,-21
  8079e8:	1004d0ba 	srli	r2,r2,2
  8079ec:	10800044 	addi	r2,r2,1
  8079f0:	100490ba 	slli	r2,r2,2
  8079f4:	2089883a 	add	r4,r4,r2
  8079f8:	21c0072e 	bgeu	r4,r7,807a18 <__copybits+0x78>
  8079fc:	39bfffc4 	addi	r6,r7,-1
  807a00:	310dc83a 	sub	r6,r6,r4
  807a04:	300cd0ba 	srli	r6,r6,2
  807a08:	000b883a 	mov	r5,zero
  807a0c:	31800044 	addi	r6,r6,1
  807a10:	300c90ba 	slli	r6,r6,2
  807a14:	08013d41 	jmpi	8013d4 <memset>
  807a18:	f800283a 	ret

00807a1c <__any_on>:
  807a1c:	20c00417 	ldw	r3,16(r4)
  807a20:	280dd17a 	srai	r6,r5,5
  807a24:	21000504 	addi	r4,r4,20
  807a28:	1980080e 	bge	r3,r6,807a4c <__any_on+0x30>
  807a2c:	180490ba 	slli	r2,r3,2
  807a30:	2085883a 	add	r2,r4,r2
  807a34:	20800f2e 	bgeu	r4,r2,807a74 <__any_on+0x58>
  807a38:	10ffff17 	ldw	r3,-4(r2)
  807a3c:	10bfff04 	addi	r2,r2,-4
  807a40:	183ffc26 	beq	r3,zero,807a34 <__any_on+0x18>
  807a44:	00800044 	movi	r2,1
  807a48:	f800283a 	ret
  807a4c:	300490ba 	slli	r2,r6,2
  807a50:	2085883a 	add	r2,r4,r2
  807a54:	30fff70e 	bge	r6,r3,807a34 <__any_on+0x18>
  807a58:	294007cc 	andi	r5,r5,31
  807a5c:	283ff526 	beq	r5,zero,807a34 <__any_on+0x18>
  807a60:	11800017 	ldw	r6,0(r2)
  807a64:	3146d83a 	srl	r3,r6,r5
  807a68:	194a983a 	sll	r5,r3,r5
  807a6c:	317ff51e 	bne	r6,r5,807a44 <__any_on+0x28>
  807a70:	003ff006 	br	807a34 <__any_on+0x18>
  807a74:	0005883a 	mov	r2,zero
  807a78:	f800283a 	ret

00807a7c <_read_r>:
  807a7c:	2807883a 	mov	r3,r5
  807a80:	defffe04 	addi	sp,sp,-8
  807a84:	dc000015 	stw	r16,0(sp)
  807a88:	300b883a 	mov	r5,r6
  807a8c:	00802074 	movhi	r2,129
  807a90:	380d883a 	mov	r6,r7
  807a94:	2021883a 	mov	r16,r4
  807a98:	1809883a 	mov	r4,r3
  807a9c:	dfc00115 	stw	ra,4(sp)
  807aa0:	10114515 	stw	zero,17684(r2)
  807aa4:	080e31c0 	call	80e31c <read>
  807aa8:	10ffffd8 	cmpnei	r3,r2,-1
  807aac:	18000426 	beq	r3,zero,807ac0 <_read_r+0x44>
  807ab0:	dfc00117 	ldw	ra,4(sp)
  807ab4:	dc000017 	ldw	r16,0(sp)
  807ab8:	dec00204 	addi	sp,sp,8
  807abc:	f800283a 	ret
  807ac0:	00c02074 	movhi	r3,129
  807ac4:	18d14517 	ldw	r3,17684(r3)
  807ac8:	183ff926 	beq	r3,zero,807ab0 <_read_r+0x34>
  807acc:	80c00015 	stw	r3,0(r16)
  807ad0:	dfc00117 	ldw	ra,4(sp)
  807ad4:	dc000017 	ldw	r16,0(sp)
  807ad8:	dec00204 	addi	sp,sp,8
  807adc:	f800283a 	ret

00807ae0 <_realloc_r>:
  807ae0:	defff504 	addi	sp,sp,-44
  807ae4:	dc800315 	stw	r18,12(sp)
  807ae8:	dfc00a15 	stw	ra,40(sp)
  807aec:	df000915 	stw	fp,36(sp)
  807af0:	ddc00815 	stw	r23,32(sp)
  807af4:	dd800715 	stw	r22,28(sp)
  807af8:	dd400615 	stw	r21,24(sp)
  807afc:	dd000515 	stw	r20,20(sp)
  807b00:	dcc00415 	stw	r19,16(sp)
  807b04:	dc400215 	stw	r17,8(sp)
  807b08:	dc000115 	stw	r16,4(sp)
  807b0c:	3025883a 	mov	r18,r6
  807b10:	28008b26 	beq	r5,zero,807d40 <_realloc_r+0x260>
  807b14:	2821883a 	mov	r16,r5
  807b18:	2027883a 	mov	r19,r4
  807b1c:	944002c4 	addi	r17,r18,11
  807b20:	080e0200 	call	80e020 <__malloc_lock>
  807b24:	888005f0 	cmpltui	r2,r17,23
  807b28:	1000521e 	bne	r2,zero,807c74 <_realloc_r+0x194>
  807b2c:	017ffe04 	movi	r5,-8
  807b30:	8962703a 	and	r17,r17,r5
  807b34:	8807883a 	mov	r3,r17
  807b38:	88005116 	blt	r17,zero,807c80 <_realloc_r+0x1a0>
  807b3c:	8c805036 	bltu	r17,r18,807c80 <_realloc_r+0x1a0>
  807b40:	80bfff17 	ldw	r2,-4(r16)
  807b44:	017fff04 	movi	r5,-4
  807b48:	857ffe04 	addi	r21,r16,-8
  807b4c:	1168703a 	and	r20,r2,r5
  807b50:	ad2d883a 	add	r22,r21,r20
  807b54:	a0c0390e 	bge	r20,r3,807c3c <_realloc_r+0x15c>
  807b58:	07002074 	movhi	fp,129
  807b5c:	e7044004 	addi	fp,fp,4352
  807b60:	e2000217 	ldw	r8,8(fp)
  807b64:	b1000117 	ldw	r4,4(r22)
  807b68:	45808e26 	beq	r8,r22,807da4 <_realloc_r+0x2c4>
  807b6c:	01bfff84 	movi	r6,-2
  807b70:	218c703a 	and	r6,r4,r6
  807b74:	b18d883a 	add	r6,r22,r6
  807b78:	31800117 	ldw	r6,4(r6)
  807b7c:	3180004c 	andi	r6,r6,1
  807b80:	30004f1e 	bne	r6,zero,807cc0 <_realloc_r+0x1e0>
  807b84:	2148703a 	and	r4,r4,r5
  807b88:	a10b883a 	add	r5,r20,r4
  807b8c:	28c0bf0e 	bge	r5,r3,807e8c <_realloc_r+0x3ac>
  807b90:	1080004c 	andi	r2,r2,1
  807b94:	10004c1e 	bne	r2,zero,807cc8 <_realloc_r+0x1e8>
  807b98:	81fffe17 	ldw	r7,-8(r16)
  807b9c:	00bfff04 	movi	r2,-4
  807ba0:	a9cfc83a 	sub	r7,r21,r7
  807ba4:	39400117 	ldw	r5,4(r7)
  807ba8:	288a703a 	and	r5,r5,r2
  807bac:	b0000426 	beq	r22,zero,807bc0 <_realloc_r+0xe0>
  807bb0:	a16f883a 	add	r23,r20,r5
  807bb4:	b92f883a 	add	r23,r23,r4
  807bb8:	4580bf26 	beq	r8,r22,807eb8 <_realloc_r+0x3d8>
  807bbc:	b8c0930e 	bge	r23,r3,807e0c <_realloc_r+0x32c>
  807bc0:	38004126 	beq	r7,zero,807cc8 <_realloc_r+0x1e8>
  807bc4:	a16f883a 	add	r23,r20,r5
  807bc8:	b8c03f16 	blt	r23,r3,807cc8 <_realloc_r+0x1e8>
  807bcc:	38800317 	ldw	r2,12(r7)
  807bd0:	38c00217 	ldw	r3,8(r7)
  807bd4:	a1bfff04 	addi	r6,r20,-4
  807bd8:	31400968 	cmpgeui	r5,r6,37
  807bdc:	18800315 	stw	r2,12(r3)
  807be0:	10c00215 	stw	r3,8(r2)
  807be4:	39000204 	addi	r4,r7,8
  807be8:	3ded883a 	add	r22,r7,r23
  807bec:	2800941e 	bne	r5,zero,807e40 <_realloc_r+0x360>
  807bf0:	30800530 	cmpltui	r2,r6,20
  807bf4:	80c00017 	ldw	r3,0(r16)
  807bf8:	1000df1e 	bne	r2,zero,807f78 <_realloc_r+0x498>
  807bfc:	38c00215 	stw	r3,8(r7)
  807c00:	80c00117 	ldw	r3,4(r16)
  807c04:	30800728 	cmpgeui	r2,r6,28
  807c08:	38c00315 	stw	r3,12(r7)
  807c0c:	1000dc1e 	bne	r2,zero,807f80 <_realloc_r+0x4a0>
  807c10:	80c00217 	ldw	r3,8(r16)
  807c14:	38800404 	addi	r2,r7,16
  807c18:	84000204 	addi	r16,r16,8
  807c1c:	10c00015 	stw	r3,0(r2)
  807c20:	80c00117 	ldw	r3,4(r16)
  807c24:	b829883a 	mov	r20,r23
  807c28:	382b883a 	mov	r21,r7
  807c2c:	10c00115 	stw	r3,4(r2)
  807c30:	80c00217 	ldw	r3,8(r16)
  807c34:	2021883a 	mov	r16,r4
  807c38:	10c00215 	stw	r3,8(r2)
  807c3c:	a9800117 	ldw	r6,4(r21)
  807c40:	a445c83a 	sub	r2,r20,r17
  807c44:	10c00430 	cmpltui	r3,r2,16
  807c48:	3180004c 	andi	r6,r6,1
  807c4c:	18004926 	beq	r3,zero,807d74 <_realloc_r+0x294>
  807c50:	a18cb03a 	or	r6,r20,r6
  807c54:	a9800115 	stw	r6,4(r21)
  807c58:	b0800117 	ldw	r2,4(r22)
  807c5c:	10800054 	ori	r2,r2,1
  807c60:	b0800115 	stw	r2,4(r22)
  807c64:	9809883a 	mov	r4,r19
  807c68:	080e0440 	call	80e044 <__malloc_unlock>
  807c6c:	8025883a 	mov	r18,r16
  807c70:	00000606 	br	807c8c <_realloc_r+0x1ac>
  807c74:	04400404 	movi	r17,16
  807c78:	00c00404 	movi	r3,16
  807c7c:	8cbfb02e 	bgeu	r17,r18,807b40 <_realloc_r+0x60>
  807c80:	00800304 	movi	r2,12
  807c84:	98800015 	stw	r2,0(r19)
  807c88:	0025883a 	mov	r18,zero
  807c8c:	9005883a 	mov	r2,r18
  807c90:	dfc00a17 	ldw	ra,40(sp)
  807c94:	df000917 	ldw	fp,36(sp)
  807c98:	ddc00817 	ldw	r23,32(sp)
  807c9c:	dd800717 	ldw	r22,28(sp)
  807ca0:	dd400617 	ldw	r21,24(sp)
  807ca4:	dd000517 	ldw	r20,20(sp)
  807ca8:	dcc00417 	ldw	r19,16(sp)
  807cac:	dc800317 	ldw	r18,12(sp)
  807cb0:	dc400217 	ldw	r17,8(sp)
  807cb4:	dc000117 	ldw	r16,4(sp)
  807cb8:	dec00b04 	addi	sp,sp,44
  807cbc:	f800283a 	ret
  807cc0:	1080004c 	andi	r2,r2,1
  807cc4:	10006c26 	beq	r2,zero,807e78 <_realloc_r+0x398>
  807cc8:	900b883a 	mov	r5,r18
  807ccc:	9809883a 	mov	r4,r19
  807cd0:	0800bf40 	call	800bf4 <_malloc_r>
  807cd4:	1025883a 	mov	r18,r2
  807cd8:	10001626 	beq	r2,zero,807d34 <_realloc_r+0x254>
  807cdc:	80bfff17 	ldw	r2,-4(r16)
  807ce0:	013fff84 	movi	r4,-2
  807ce4:	90fffe04 	addi	r3,r18,-8
  807ce8:	1104703a 	and	r2,r2,r4
  807cec:	a885883a 	add	r2,r21,r2
  807cf0:	10c05b26 	beq	r2,r3,807e60 <_realloc_r+0x380>
  807cf4:	a1bfff04 	addi	r6,r20,-4
  807cf8:	30800968 	cmpgeui	r2,r6,37
  807cfc:	10006a1e 	bne	r2,zero,807ea8 <_realloc_r+0x3c8>
  807d00:	30800530 	cmpltui	r2,r6,20
  807d04:	81000017 	ldw	r4,0(r16)
  807d08:	10003726 	beq	r2,zero,807de8 <_realloc_r+0x308>
  807d0c:	9005883a 	mov	r2,r18
  807d10:	8007883a 	mov	r3,r16
  807d14:	11000015 	stw	r4,0(r2)
  807d18:	19000117 	ldw	r4,4(r3)
  807d1c:	11000115 	stw	r4,4(r2)
  807d20:	18c00217 	ldw	r3,8(r3)
  807d24:	10c00215 	stw	r3,8(r2)
  807d28:	800b883a 	mov	r5,r16
  807d2c:	9809883a 	mov	r4,r19
  807d30:	0805b000 	call	805b00 <_free_r>
  807d34:	9809883a 	mov	r4,r19
  807d38:	080e0440 	call	80e044 <__malloc_unlock>
  807d3c:	003fd306 	br	807c8c <_realloc_r+0x1ac>
  807d40:	300b883a 	mov	r5,r6
  807d44:	dfc00a17 	ldw	ra,40(sp)
  807d48:	df000917 	ldw	fp,36(sp)
  807d4c:	ddc00817 	ldw	r23,32(sp)
  807d50:	dd800717 	ldw	r22,28(sp)
  807d54:	dd400617 	ldw	r21,24(sp)
  807d58:	dd000517 	ldw	r20,20(sp)
  807d5c:	dcc00417 	ldw	r19,16(sp)
  807d60:	dc800317 	ldw	r18,12(sp)
  807d64:	dc400217 	ldw	r17,8(sp)
  807d68:	dc000117 	ldw	r16,4(sp)
  807d6c:	dec00b04 	addi	sp,sp,44
  807d70:	0800bf41 	jmpi	800bf4 <_malloc_r>
  807d74:	344cb03a 	or	r6,r6,r17
  807d78:	a9800115 	stw	r6,4(r21)
  807d7c:	ac4b883a 	add	r5,r21,r17
  807d80:	10800054 	ori	r2,r2,1
  807d84:	28800115 	stw	r2,4(r5)
  807d88:	b0800117 	ldw	r2,4(r22)
  807d8c:	29400204 	addi	r5,r5,8
  807d90:	9809883a 	mov	r4,r19
  807d94:	10800054 	ori	r2,r2,1
  807d98:	b0800115 	stw	r2,4(r22)
  807d9c:	0805b000 	call	805b00 <_free_r>
  807da0:	003fb006 	br	807c64 <_realloc_r+0x184>
  807da4:	2148703a 	and	r4,r4,r5
  807da8:	a10b883a 	add	r5,r20,r4
  807dac:	89800404 	addi	r6,r17,16
  807db0:	29bf7716 	blt	r5,r6,807b90 <_realloc_r+0xb0>
  807db4:	ac6b883a 	add	r21,r21,r17
  807db8:	2c45c83a 	sub	r2,r5,r17
  807dbc:	e5400215 	stw	r21,8(fp)
  807dc0:	10800054 	ori	r2,r2,1
  807dc4:	a8800115 	stw	r2,4(r21)
  807dc8:	80bfff17 	ldw	r2,-4(r16)
  807dcc:	9809883a 	mov	r4,r19
  807dd0:	8025883a 	mov	r18,r16
  807dd4:	1080004c 	andi	r2,r2,1
  807dd8:	1462b03a 	or	r17,r2,r17
  807ddc:	847fff15 	stw	r17,-4(r16)
  807de0:	080e0440 	call	80e044 <__malloc_unlock>
  807de4:	003fa906 	br	807c8c <_realloc_r+0x1ac>
  807de8:	91000015 	stw	r4,0(r18)
  807dec:	80c00117 	ldw	r3,4(r16)
  807df0:	30800728 	cmpgeui	r2,r6,28
  807df4:	90c00115 	stw	r3,4(r18)
  807df8:	1000551e 	bne	r2,zero,807f50 <_realloc_r+0x470>
  807dfc:	81000217 	ldw	r4,8(r16)
  807e00:	80c00204 	addi	r3,r16,8
  807e04:	90800204 	addi	r2,r18,8
  807e08:	003fc206 	br	807d14 <_realloc_r+0x234>
  807e0c:	b0800317 	ldw	r2,12(r22)
  807e10:	b0c00217 	ldw	r3,8(r22)
  807e14:	a1bfff04 	addi	r6,r20,-4
  807e18:	31400968 	cmpgeui	r5,r6,37
  807e1c:	18800315 	stw	r2,12(r3)
  807e20:	10c00215 	stw	r3,8(r2)
  807e24:	38c00217 	ldw	r3,8(r7)
  807e28:	38800317 	ldw	r2,12(r7)
  807e2c:	39000204 	addi	r4,r7,8
  807e30:	3ded883a 	add	r22,r7,r23
  807e34:	18800315 	stw	r2,12(r3)
  807e38:	10c00215 	stw	r3,8(r2)
  807e3c:	283f6c26 	beq	r5,zero,807bf0 <_realloc_r+0x110>
  807e40:	800b883a 	mov	r5,r16
  807e44:	d9c00015 	stw	r7,0(sp)
  807e48:	08067600 	call	806760 <memmove>
  807e4c:	d9c00017 	ldw	r7,0(sp)
  807e50:	1021883a 	mov	r16,r2
  807e54:	b829883a 	mov	r20,r23
  807e58:	382b883a 	mov	r21,r7
  807e5c:	003f7706 	br	807c3c <_realloc_r+0x15c>
  807e60:	90bfff17 	ldw	r2,-4(r18)
  807e64:	00ffff04 	movi	r3,-4
  807e68:	10c4703a 	and	r2,r2,r3
  807e6c:	a0a9883a 	add	r20,r20,r2
  807e70:	ad2d883a 	add	r22,r21,r20
  807e74:	003f7106 	br	807c3c <_realloc_r+0x15c>
  807e78:	81fffe17 	ldw	r7,-8(r16)
  807e7c:	a9cfc83a 	sub	r7,r21,r7
  807e80:	38800117 	ldw	r2,4(r7)
  807e84:	114a703a 	and	r5,r2,r5
  807e88:	003f4d06 	br	807bc0 <_realloc_r+0xe0>
  807e8c:	b0800317 	ldw	r2,12(r22)
  807e90:	b0c00217 	ldw	r3,8(r22)
  807e94:	2829883a 	mov	r20,r5
  807e98:	a96d883a 	add	r22,r21,r5
  807e9c:	18800315 	stw	r2,12(r3)
  807ea0:	10c00215 	stw	r3,8(r2)
  807ea4:	003f6506 	br	807c3c <_realloc_r+0x15c>
  807ea8:	800b883a 	mov	r5,r16
  807eac:	9009883a 	mov	r4,r18
  807eb0:	08067600 	call	806760 <memmove>
  807eb4:	003f9c06 	br	807d28 <_realloc_r+0x248>
  807eb8:	88800404 	addi	r2,r17,16
  807ebc:	b8bf4016 	blt	r23,r2,807bc0 <_realloc_r+0xe0>
  807ec0:	38800317 	ldw	r2,12(r7)
  807ec4:	38c00217 	ldw	r3,8(r7)
  807ec8:	a1bfff04 	addi	r6,r20,-4
  807ecc:	31000968 	cmpgeui	r4,r6,37
  807ed0:	18800315 	stw	r2,12(r3)
  807ed4:	10c00215 	stw	r3,8(r2)
  807ed8:	3c800204 	addi	r18,r7,8
  807edc:	20003b1e 	bne	r4,zero,807fcc <_realloc_r+0x4ec>
  807ee0:	30800530 	cmpltui	r2,r6,20
  807ee4:	80c00017 	ldw	r3,0(r16)
  807ee8:	1000361e 	bne	r2,zero,807fc4 <_realloc_r+0x4e4>
  807eec:	38c00215 	stw	r3,8(r7)
  807ef0:	80c00117 	ldw	r3,4(r16)
  807ef4:	30800728 	cmpgeui	r2,r6,28
  807ef8:	38c00315 	stw	r3,12(r7)
  807efc:	1000401e 	bne	r2,zero,808000 <_realloc_r+0x520>
  807f00:	80c00217 	ldw	r3,8(r16)
  807f04:	38800404 	addi	r2,r7,16
  807f08:	84000204 	addi	r16,r16,8
  807f0c:	10c00015 	stw	r3,0(r2)
  807f10:	80c00117 	ldw	r3,4(r16)
  807f14:	10c00115 	stw	r3,4(r2)
  807f18:	80c00217 	ldw	r3,8(r16)
  807f1c:	10c00215 	stw	r3,8(r2)
  807f20:	3c47883a 	add	r3,r7,r17
  807f24:	bc45c83a 	sub	r2,r23,r17
  807f28:	e0c00215 	stw	r3,8(fp)
  807f2c:	10800054 	ori	r2,r2,1
  807f30:	18800115 	stw	r2,4(r3)
  807f34:	38800117 	ldw	r2,4(r7)
  807f38:	9809883a 	mov	r4,r19
  807f3c:	1080004c 	andi	r2,r2,1
  807f40:	1462b03a 	or	r17,r2,r17
  807f44:	3c400115 	stw	r17,4(r7)
  807f48:	080e0440 	call	80e044 <__malloc_unlock>
  807f4c:	003f4f06 	br	807c8c <_realloc_r+0x1ac>
  807f50:	80800217 	ldw	r2,8(r16)
  807f54:	31800920 	cmpeqi	r6,r6,36
  807f58:	90800215 	stw	r2,8(r18)
  807f5c:	80800317 	ldw	r2,12(r16)
  807f60:	90800315 	stw	r2,12(r18)
  807f64:	81000417 	ldw	r4,16(r16)
  807f68:	30000f1e 	bne	r6,zero,807fa8 <_realloc_r+0x4c8>
  807f6c:	80c00404 	addi	r3,r16,16
  807f70:	90800404 	addi	r2,r18,16
  807f74:	003f6706 	br	807d14 <_realloc_r+0x234>
  807f78:	2005883a 	mov	r2,r4
  807f7c:	003f2706 	br	807c1c <_realloc_r+0x13c>
  807f80:	80800217 	ldw	r2,8(r16)
  807f84:	31800920 	cmpeqi	r6,r6,36
  807f88:	38800415 	stw	r2,16(r7)
  807f8c:	80800317 	ldw	r2,12(r16)
  807f90:	38800515 	stw	r2,20(r7)
  807f94:	80c00417 	ldw	r3,16(r16)
  807f98:	3000121e 	bne	r6,zero,807fe4 <_realloc_r+0x504>
  807f9c:	38800604 	addi	r2,r7,24
  807fa0:	84000404 	addi	r16,r16,16
  807fa4:	003f1d06 	br	807c1c <_realloc_r+0x13c>
  807fa8:	91000415 	stw	r4,16(r18)
  807fac:	81000517 	ldw	r4,20(r16)
  807fb0:	80c00604 	addi	r3,r16,24
  807fb4:	90800604 	addi	r2,r18,24
  807fb8:	91000515 	stw	r4,20(r18)
  807fbc:	81000617 	ldw	r4,24(r16)
  807fc0:	003f5406 	br	807d14 <_realloc_r+0x234>
  807fc4:	9005883a 	mov	r2,r18
  807fc8:	003fd006 	br	807f0c <_realloc_r+0x42c>
  807fcc:	800b883a 	mov	r5,r16
  807fd0:	9009883a 	mov	r4,r18
  807fd4:	d9c00015 	stw	r7,0(sp)
  807fd8:	08067600 	call	806760 <memmove>
  807fdc:	d9c00017 	ldw	r7,0(sp)
  807fe0:	003fcf06 	br	807f20 <_realloc_r+0x440>
  807fe4:	84000604 	addi	r16,r16,24
  807fe8:	38c00615 	stw	r3,24(r7)
  807fec:	80ffff17 	ldw	r3,-4(r16)
  807ff0:	38800804 	addi	r2,r7,32
  807ff4:	38c00715 	stw	r3,28(r7)
  807ff8:	80c00017 	ldw	r3,0(r16)
  807ffc:	003f0706 	br	807c1c <_realloc_r+0x13c>
  808000:	80800217 	ldw	r2,8(r16)
  808004:	31800920 	cmpeqi	r6,r6,36
  808008:	38800415 	stw	r2,16(r7)
  80800c:	80800317 	ldw	r2,12(r16)
  808010:	38800515 	stw	r2,20(r7)
  808014:	80c00417 	ldw	r3,16(r16)
  808018:	3000031e 	bne	r6,zero,808028 <_realloc_r+0x548>
  80801c:	38800604 	addi	r2,r7,24
  808020:	84000404 	addi	r16,r16,16
  808024:	003fb906 	br	807f0c <_realloc_r+0x42c>
  808028:	84000604 	addi	r16,r16,24
  80802c:	38c00615 	stw	r3,24(r7)
  808030:	80ffff17 	ldw	r3,-4(r16)
  808034:	38800804 	addi	r2,r7,32
  808038:	38c00715 	stw	r3,28(r7)
  80803c:	80c00017 	ldw	r3,0(r16)
  808040:	003fb206 	br	807f0c <_realloc_r+0x42c>

00808044 <__sprint_r.part.0>:
  808044:	28801917 	ldw	r2,100(r5)
  808048:	defff604 	addi	sp,sp,-40
  80804c:	dcc00315 	stw	r19,12(sp)
  808050:	dfc00915 	stw	ra,36(sp)
  808054:	df000815 	stw	fp,32(sp)
  808058:	ddc00715 	stw	r23,28(sp)
  80805c:	dd800615 	stw	r22,24(sp)
  808060:	dd400515 	stw	r21,20(sp)
  808064:	dd000415 	stw	r20,16(sp)
  808068:	dc800215 	stw	r18,8(sp)
  80806c:	dc400115 	stw	r17,4(sp)
  808070:	dc000015 	stw	r16,0(sp)
  808074:	1088000c 	andi	r2,r2,8192
  808078:	3027883a 	mov	r19,r6
  80807c:	10002c26 	beq	r2,zero,808130 <__sprint_r.part.0+0xec>
  808080:	30800217 	ldw	r2,8(r6)
  808084:	35000017 	ldw	r20,0(r6)
  808088:	2821883a 	mov	r16,r5
  80808c:	2023883a 	mov	r17,r4
  808090:	05bfff04 	movi	r22,-4
  808094:	10002426 	beq	r2,zero,808128 <__sprint_r.part.0+0xe4>
  808098:	a5400117 	ldw	r21,4(r20)
  80809c:	a5c00017 	ldw	r23,0(r20)
  8080a0:	a824d0ba 	srli	r18,r21,2
  8080a4:	90001b26 	beq	r18,zero,808114 <__sprint_r.part.0+0xd0>
  8080a8:	0039883a 	mov	fp,zero
  8080ac:	00000206 	br	8080b8 <__sprint_r.part.0+0x74>
  8080b0:	bdc00104 	addi	r23,r23,4
  8080b4:	97001626 	beq	r18,fp,808110 <__sprint_r.part.0+0xcc>
  8080b8:	b9400017 	ldw	r5,0(r23)
  8080bc:	800d883a 	mov	r6,r16
  8080c0:	8809883a 	mov	r4,r17
  8080c4:	08098680 	call	809868 <_fputwc_r>
  8080c8:	10bfffe0 	cmpeqi	r2,r2,-1
  8080cc:	e7000044 	addi	fp,fp,1
  8080d0:	103ff726 	beq	r2,zero,8080b0 <__sprint_r.part.0+0x6c>
  8080d4:	00bfffc4 	movi	r2,-1
  8080d8:	98000215 	stw	zero,8(r19)
  8080dc:	98000115 	stw	zero,4(r19)
  8080e0:	dfc00917 	ldw	ra,36(sp)
  8080e4:	df000817 	ldw	fp,32(sp)
  8080e8:	ddc00717 	ldw	r23,28(sp)
  8080ec:	dd800617 	ldw	r22,24(sp)
  8080f0:	dd400517 	ldw	r21,20(sp)
  8080f4:	dd000417 	ldw	r20,16(sp)
  8080f8:	dcc00317 	ldw	r19,12(sp)
  8080fc:	dc800217 	ldw	r18,8(sp)
  808100:	dc400117 	ldw	r17,4(sp)
  808104:	dc000017 	ldw	r16,0(sp)
  808108:	dec00a04 	addi	sp,sp,40
  80810c:	f800283a 	ret
  808110:	98800217 	ldw	r2,8(r19)
  808114:	adaa703a 	and	r21,r21,r22
  808118:	1545c83a 	sub	r2,r2,r21
  80811c:	98800215 	stw	r2,8(r19)
  808120:	a5000204 	addi	r20,r20,8
  808124:	103fdc1e 	bne	r2,zero,808098 <__sprint_r.part.0+0x54>
  808128:	0005883a 	mov	r2,zero
  80812c:	003fea06 	br	8080d8 <__sprint_r.part.0+0x94>
  808130:	0805dfc0 	call	805dfc <__sfvwrite_r>
  808134:	003fe806 	br	8080d8 <__sprint_r.part.0+0x94>

00808138 <__sprint_r>:
  808138:	30c00217 	ldw	r3,8(r6)
  80813c:	18000126 	beq	r3,zero,808144 <__sprint_r+0xc>
  808140:	08080441 	jmpi	808044 <__sprint_r.part.0>
  808144:	30000115 	stw	zero,4(r6)
  808148:	0005883a 	mov	r2,zero
  80814c:	f800283a 	ret

00808150 <___vfiprintf_internal_r>:
  808150:	deffcf04 	addi	sp,sp,-196
  808154:	dd802d15 	stw	r22,180(sp)
  808158:	dd402c15 	stw	r21,176(sp)
  80815c:	dd002b15 	stw	r20,172(sp)
  808160:	dfc03015 	stw	ra,192(sp)
  808164:	df002f15 	stw	fp,188(sp)
  808168:	ddc02e15 	stw	r23,184(sp)
  80816c:	dcc02a15 	stw	r19,168(sp)
  808170:	dc802915 	stw	r18,164(sp)
  808174:	dc402815 	stw	r17,160(sp)
  808178:	dc002715 	stw	r16,156(sp)
  80817c:	d9c00415 	stw	r7,16(sp)
  808180:	202d883a 	mov	r22,r4
  808184:	282b883a 	mov	r21,r5
  808188:	3029883a 	mov	r20,r6
  80818c:	20000226 	beq	r4,zero,808198 <___vfiprintf_internal_r+0x48>
  808190:	20800e17 	ldw	r2,56(r4)
  808194:	1001bd26 	beq	r2,zero,80888c <___vfiprintf_internal_r+0x73c>
  808198:	a880030b 	ldhu	r2,12(r21)
  80819c:	10c8000c 	andi	r3,r2,8192
  8081a0:	1800061e 	bne	r3,zero,8081bc <___vfiprintf_internal_r+0x6c>
  8081a4:	a8c01917 	ldw	r3,100(r21)
  8081a8:	0137ffc4 	movi	r4,-8193
  8081ac:	10880014 	ori	r2,r2,8192
  8081b0:	1906703a 	and	r3,r3,r4
  8081b4:	a880030d 	sth	r2,12(r21)
  8081b8:	a8c01915 	stw	r3,100(r21)
  8081bc:	10c0020c 	andi	r3,r2,8
  8081c0:	18010826 	beq	r3,zero,8085e4 <___vfiprintf_internal_r+0x494>
  8081c4:	a8c00417 	ldw	r3,16(r21)
  8081c8:	18010626 	beq	r3,zero,8085e4 <___vfiprintf_internal_r+0x494>
  8081cc:	1080068c 	andi	r2,r2,26
  8081d0:	10800298 	cmpnei	r2,r2,10
  8081d4:	10010b26 	beq	r2,zero,808604 <___vfiprintf_internal_r+0x4b4>
  8081d8:	dc801704 	addi	r18,sp,92
  8081dc:	dc800a15 	stw	r18,40(sp)
  8081e0:	d8000c15 	stw	zero,48(sp)
  8081e4:	d8000b15 	stw	zero,44(sp)
  8081e8:	9021883a 	mov	r16,r18
  8081ec:	d8000515 	stw	zero,20(sp)
  8081f0:	d8000115 	stw	zero,4(sp)
  8081f4:	a0800007 	ldb	r2,0(r20)
  8081f8:	1000e826 	beq	r2,zero,80859c <___vfiprintf_internal_r+0x44c>
  8081fc:	a023883a 	mov	r17,r20
  808200:	00000306 	br	808210 <___vfiprintf_internal_r+0xc0>
  808204:	88800047 	ldb	r2,1(r17)
  808208:	8c400044 	addi	r17,r17,1
  80820c:	10013326 	beq	r2,zero,8086dc <___vfiprintf_internal_r+0x58c>
  808210:	10800958 	cmpnei	r2,r2,37
  808214:	103ffb1e 	bne	r2,zero,808204 <___vfiprintf_internal_r+0xb4>
  808218:	8d27c83a 	sub	r19,r17,r20
  80821c:	8d01311e 	bne	r17,r20,8086e4 <___vfiprintf_internal_r+0x594>
  808220:	88800003 	ldbu	r2,0(r17)
  808224:	10803fcc 	andi	r2,r2,255
  808228:	1080201c 	xori	r2,r2,128
  80822c:	10bfe004 	addi	r2,r2,-128
  808230:	1000da26 	beq	r2,zero,80859c <___vfiprintf_internal_r+0x44c>
  808234:	88800047 	ldb	r2,1(r17)
  808238:	8d000044 	addi	r20,r17,1
  80823c:	d8000945 	stb	zero,37(sp)
  808240:	000b883a 	mov	r5,zero
  808244:	000d883a 	mov	r6,zero
  808248:	023fffc4 	movi	r8,-1
  80824c:	0023883a 	mov	r17,zero
  808250:	001b883a 	mov	r13,zero
  808254:	a5000044 	addi	r20,r20,1
  808258:	10fff804 	addi	r3,r2,-32
  80825c:	19001668 	cmpgeui	r4,r3,89
  808260:	20006c1e 	bne	r4,zero,808414 <___vfiprintf_internal_r+0x2c4>
  808264:	180690ba 	slli	r3,r3,2
  808268:	01002074 	movhi	r4,129
  80826c:	1909883a 	add	r4,r3,r4
  808270:	20e09e17 	ldw	r3,-32136(r4)
  808274:	1800683a 	jmp	r3
  808278:	00808bb4 	movhi	r2,558
  80827c:	00808414 	movui	r2,528
  808280:	00808414 	movui	r2,528
  808284:	00808ba8 	cmpgeui	r2,zero,558
  808288:	00808414 	movui	r2,528
  80828c:	00808414 	movui	r2,528
  808290:	00808414 	movui	r2,528
  808294:	00808414 	movui	r2,528
  808298:	00808414 	movui	r2,528
  80829c:	00808414 	movui	r2,528
  8082a0:	00808b80 	call	808b8 <__alt_mem_sdram-0x77f748>
  8082a4:	00808b70 	cmpltui	r2,zero,557
  8082a8:	00808414 	movui	r2,528
  8082ac:	00808b58 	cmpnei	r2,zero,557
  8082b0:	00808b0c 	andi	r2,zero,556
  8082b4:	00808414 	movui	r2,528
  8082b8:	00808b00 	call	808b0 <__alt_mem_sdram-0x77f750>
  8082bc:	008083dc 	xori	r2,zero,527
  8082c0:	008083dc 	xori	r2,zero,527
  8082c4:	008083dc 	xori	r2,zero,527
  8082c8:	008083dc 	xori	r2,zero,527
  8082cc:	008083dc 	xori	r2,zero,527
  8082d0:	008083dc 	xori	r2,zero,527
  8082d4:	008083dc 	xori	r2,zero,527
  8082d8:	008083dc 	xori	r2,zero,527
  8082dc:	008083dc 	xori	r2,zero,527
  8082e0:	00808414 	movui	r2,528
  8082e4:	00808414 	movui	r2,528
  8082e8:	00808414 	movui	r2,528
  8082ec:	00808414 	movui	r2,528
  8082f0:	00808414 	movui	r2,528
  8082f4:	00808414 	movui	r2,528
  8082f8:	00808414 	movui	r2,528
  8082fc:	00808414 	movui	r2,528
  808300:	00808414 	movui	r2,528
  808304:	00808414 	movui	r2,528
  808308:	008089fc 	xorhi	r2,zero,551
  80830c:	00808414 	movui	r2,528
  808310:	00808414 	movui	r2,528
  808314:	00808414 	movui	r2,528
  808318:	00808414 	movui	r2,528
  80831c:	00808414 	movui	r2,528
  808320:	00808414 	movui	r2,528
  808324:	00808414 	movui	r2,528
  808328:	00808414 	movui	r2,528
  80832c:	00808414 	movui	r2,528
  808330:	00808414 	movui	r2,528
  808334:	00808674 	movhi	r2,537
  808338:	00808414 	movui	r2,528
  80833c:	00808414 	movui	r2,528
  808340:	00808414 	movui	r2,528
  808344:	00808414 	movui	r2,528
  808348:	00808414 	movui	r2,528
  80834c:	0080864c 	andi	r2,zero,537
  808350:	00808414 	movui	r2,528
  808354:	00808414 	movui	r2,528
  808358:	00808c08 	cmpgei	r2,zero,560
  80835c:	00808414 	movui	r2,528
  808360:	00808414 	movui	r2,528
  808364:	00808414 	movui	r2,528
  808368:	00808414 	movui	r2,528
  80836c:	00808414 	movui	r2,528
  808370:	00808414 	movui	r2,528
  808374:	00808414 	movui	r2,528
  808378:	00808414 	movui	r2,528
  80837c:	00808414 	movui	r2,528
  808380:	00808414 	movui	r2,528
  808384:	00808be0 	cmpeqi	r2,zero,559
  808388:	00808894 	movui	r2,546
  80838c:	00808414 	movui	r2,528
  808390:	00808414 	movui	r2,528
  808394:	00808414 	movui	r2,528
  808398:	00808908 	cmpgei	r2,zero,548
  80839c:	00808894 	movui	r2,546
  8083a0:	00808414 	movui	r2,528
  8083a4:	00808414 	movui	r2,528
  8083a8:	00808c8c 	andi	r2,zero,562
  8083ac:	00808414 	movui	r2,528
  8083b0:	00808c50 	cmplti	r2,zero,561
  8083b4:	00808678 	rdprs	r2,zero,537
  8083b8:	008089c0 	call	8089c <__alt_mem_sdram-0x77f764>
  8083bc:	008089b4 	movhi	r2,550
  8083c0:	00808414 	movui	r2,528
  8083c4:	0080895c 	xori	r2,zero,549
  8083c8:	00808414 	movui	r2,528
  8083cc:	00808650 	cmplti	r2,zero,537
  8083d0:	00808414 	movui	r2,528
  8083d4:	00808414 	movui	r2,528
  8083d8:	00808914 	movui	r2,548
  8083dc:	0023883a 	mov	r17,zero
  8083e0:	113ff404 	addi	r4,r2,-48
  8083e4:	880690ba 	slli	r3,r17,2
  8083e8:	a0800007 	ldb	r2,0(r20)
  8083ec:	a5000044 	addi	r20,r20,1
  8083f0:	1c63883a 	add	r17,r3,r17
  8083f4:	8c63883a 	add	r17,r17,r17
  8083f8:	2463883a 	add	r17,r4,r17
  8083fc:	113ff404 	addi	r4,r2,-48
  808400:	20c002b0 	cmpltui	r3,r4,10
  808404:	183ff71e 	bne	r3,zero,8083e4 <___vfiprintf_internal_r+0x294>
  808408:	10fff804 	addi	r3,r2,-32
  80840c:	19001668 	cmpgeui	r4,r3,89
  808410:	203f9426 	beq	r4,zero,808264 <___vfiprintf_internal_r+0x114>
  808414:	29403fcc 	andi	r5,r5,255
  808418:	2803ed1e 	bne	r5,zero,8093d0 <___vfiprintf_internal_r+0x1280>
  80841c:	10005f26 	beq	r2,zero,80859c <___vfiprintf_internal_r+0x44c>
  808420:	d8800d05 	stb	r2,52(sp)
  808424:	d8000945 	stb	zero,37(sp)
  808428:	05c00044 	movi	r23,1
  80842c:	07000044 	movi	fp,1
  808430:	dcc00d04 	addi	r19,sp,52
  808434:	db400015 	stw	r13,0(sp)
  808438:	0011883a 	mov	r8,zero
  80843c:	d8800017 	ldw	r2,0(sp)
  808440:	1380008c 	andi	r14,r2,2
  808444:	70000126 	beq	r14,zero,80844c <___vfiprintf_internal_r+0x2fc>
  808448:	bdc00084 	addi	r23,r23,2
  80844c:	d8800017 	ldw	r2,0(sp)
  808450:	d9000b17 	ldw	r4,44(sp)
  808454:	1340210c 	andi	r13,r2,132
  808458:	21800044 	addi	r6,r4,1
  80845c:	d8800c17 	ldw	r2,48(sp)
  808460:	300b883a 	mov	r5,r6
  808464:	6800021e 	bne	r13,zero,808470 <___vfiprintf_internal_r+0x320>
  808468:	8dc7c83a 	sub	r3,r17,r23
  80846c:	00c2e216 	blt	zero,r3,808ff8 <___vfiprintf_internal_r+0xea8>
  808470:	d8c00947 	ldb	r3,37(sp)
  808474:	81800204 	addi	r6,r16,8
  808478:	18000d26 	beq	r3,zero,8084b0 <___vfiprintf_internal_r+0x360>
  80847c:	d8c00944 	addi	r3,sp,37
  808480:	10800044 	addi	r2,r2,1
  808484:	80c00015 	stw	r3,0(r16)
  808488:	00c00044 	movi	r3,1
  80848c:	80c00115 	stw	r3,4(r16)
  808490:	d8800c15 	stw	r2,48(sp)
  808494:	d9400b15 	stw	r5,44(sp)
  808498:	28c00208 	cmpgei	r3,r5,8
  80849c:	18029a1e 	bne	r3,zero,808f08 <___vfiprintf_internal_r+0xdb8>
  8084a0:	2809883a 	mov	r4,r5
  8084a4:	3021883a 	mov	r16,r6
  8084a8:	29400044 	addi	r5,r5,1
  8084ac:	31800204 	addi	r6,r6,8
  8084b0:	70001826 	beq	r14,zero,808514 <___vfiprintf_internal_r+0x3c4>
  8084b4:	d8c00984 	addi	r3,sp,38
  8084b8:	10800084 	addi	r2,r2,2
  8084bc:	80c00015 	stw	r3,0(r16)
  8084c0:	00c00084 	movi	r3,2
  8084c4:	80c00115 	stw	r3,4(r16)
  8084c8:	d8800c15 	stw	r2,48(sp)
  8084cc:	d9400b15 	stw	r5,44(sp)
  8084d0:	28c00208 	cmpgei	r3,r5,8
  8084d4:	1802a426 	beq	r3,zero,808f68 <___vfiprintf_internal_r+0xe18>
  8084d8:	10032226 	beq	r2,zero,809164 <___vfiprintf_internal_r+0x1014>
  8084dc:	d9800a04 	addi	r6,sp,40
  8084e0:	a80b883a 	mov	r5,r21
  8084e4:	b009883a 	mov	r4,r22
  8084e8:	da000315 	stw	r8,12(sp)
  8084ec:	db400215 	stw	r13,8(sp)
  8084f0:	08080440 	call	808044 <__sprint_r.part.0>
  8084f4:	10002b1e 	bne	r2,zero,8085a4 <___vfiprintf_internal_r+0x454>
  8084f8:	d9000b17 	ldw	r4,44(sp)
  8084fc:	d8800c17 	ldw	r2,48(sp)
  808500:	da000317 	ldw	r8,12(sp)
  808504:	db400217 	ldw	r13,8(sp)
  808508:	d9801904 	addi	r6,sp,100
  80850c:	21400044 	addi	r5,r4,1
  808510:	9021883a 	mov	r16,r18
  808514:	6b402018 	cmpnei	r13,r13,128
  808518:	6801e526 	beq	r13,zero,808cb0 <___vfiprintf_internal_r+0xb60>
  80851c:	4711c83a 	sub	r8,r8,fp
  808520:	02022416 	blt	zero,r8,808db4 <___vfiprintf_internal_r+0xc64>
  808524:	e085883a 	add	r2,fp,r2
  808528:	d9400b15 	stw	r5,44(sp)
  80852c:	84c00015 	stw	r19,0(r16)
  808530:	87000115 	stw	fp,4(r16)
  808534:	d8800c15 	stw	r2,48(sp)
  808538:	29400210 	cmplti	r5,r5,8
  80853c:	2800081e 	bne	r5,zero,808560 <___vfiprintf_internal_r+0x410>
  808540:	10009826 	beq	r2,zero,8087a4 <___vfiprintf_internal_r+0x654>
  808544:	d9800a04 	addi	r6,sp,40
  808548:	a80b883a 	mov	r5,r21
  80854c:	b009883a 	mov	r4,r22
  808550:	08080440 	call	808044 <__sprint_r.part.0>
  808554:	1000131e 	bne	r2,zero,8085a4 <___vfiprintf_internal_r+0x454>
  808558:	d8800c17 	ldw	r2,48(sp)
  80855c:	900d883a 	mov	r6,r18
  808560:	d8c00017 	ldw	r3,0(sp)
  808564:	1cc0010c 	andi	r19,r3,4
  808568:	98000226 	beq	r19,zero,808574 <___vfiprintf_internal_r+0x424>
  80856c:	8de1c83a 	sub	r16,r17,r23
  808570:	04009316 	blt	zero,r16,8087c0 <___vfiprintf_internal_r+0x670>
  808574:	8dc0010e 	bge	r17,r23,80857c <___vfiprintf_internal_r+0x42c>
  808578:	b823883a 	mov	r17,r23
  80857c:	d8c00117 	ldw	r3,4(sp)
  808580:	1c47883a 	add	r3,r3,r17
  808584:	d8c00115 	stw	r3,4(sp)
  808588:	1002551e 	bne	r2,zero,808ee0 <___vfiprintf_internal_r+0xd90>
  80858c:	a0800007 	ldb	r2,0(r20)
  808590:	d8000b15 	stw	zero,44(sp)
  808594:	9021883a 	mov	r16,r18
  808598:	103f181e 	bne	r2,zero,8081fc <___vfiprintf_internal_r+0xac>
  80859c:	d8800c17 	ldw	r2,48(sp)
  8085a0:	10038d1e 	bne	r2,zero,8093d8 <___vfiprintf_internal_r+0x1288>
  8085a4:	a880030b 	ldhu	r2,12(r21)
  8085a8:	1080100c 	andi	r2,r2,64
  8085ac:	1003a51e 	bne	r2,zero,809444 <___vfiprintf_internal_r+0x12f4>
  8085b0:	d8800117 	ldw	r2,4(sp)
  8085b4:	dfc03017 	ldw	ra,192(sp)
  8085b8:	df002f17 	ldw	fp,188(sp)
  8085bc:	ddc02e17 	ldw	r23,184(sp)
  8085c0:	dd802d17 	ldw	r22,180(sp)
  8085c4:	dd402c17 	ldw	r21,176(sp)
  8085c8:	dd002b17 	ldw	r20,172(sp)
  8085cc:	dcc02a17 	ldw	r19,168(sp)
  8085d0:	dc802917 	ldw	r18,164(sp)
  8085d4:	dc402817 	ldw	r17,160(sp)
  8085d8:	dc002717 	ldw	r16,156(sp)
  8085dc:	dec03104 	addi	sp,sp,196
  8085e0:	f800283a 	ret
  8085e4:	a80b883a 	mov	r5,r21
  8085e8:	b009883a 	mov	r4,r22
  8085ec:	0803a140 	call	803a14 <__swsetup_r>
  8085f0:	1003941e 	bne	r2,zero,809444 <___vfiprintf_internal_r+0x12f4>
  8085f4:	a880030b 	ldhu	r2,12(r21)
  8085f8:	1080068c 	andi	r2,r2,26
  8085fc:	10800298 	cmpnei	r2,r2,10
  808600:	103ef51e 	bne	r2,zero,8081d8 <___vfiprintf_internal_r+0x88>
  808604:	a880038f 	ldh	r2,14(r21)
  808608:	103ef316 	blt	r2,zero,8081d8 <___vfiprintf_internal_r+0x88>
  80860c:	d9c00417 	ldw	r7,16(sp)
  808610:	a00d883a 	mov	r6,r20
  808614:	a80b883a 	mov	r5,r21
  808618:	b009883a 	mov	r4,r22
  80861c:	dfc03017 	ldw	ra,192(sp)
  808620:	df002f17 	ldw	fp,188(sp)
  808624:	ddc02e17 	ldw	r23,184(sp)
  808628:	dd802d17 	ldw	r22,180(sp)
  80862c:	dd402c17 	ldw	r21,176(sp)
  808630:	dd002b17 	ldw	r20,172(sp)
  808634:	dcc02a17 	ldw	r19,168(sp)
  808638:	dc802917 	ldw	r18,164(sp)
  80863c:	dc402817 	ldw	r17,160(sp)
  808640:	dc002717 	ldw	r16,156(sp)
  808644:	dec03104 	addi	sp,sp,196
  808648:	08094b01 	jmpi	8094b0 <__sbprintf>
  80864c:	6b400414 	ori	r13,r13,16
  808650:	6880080c 	andi	r2,r13,32
  808654:	10004726 	beq	r2,zero,808774 <___vfiprintf_internal_r+0x624>
  808658:	d8c00417 	ldw	r3,16(sp)
  80865c:	00800044 	movi	r2,1
  808660:	1dc00017 	ldw	r23,0(r3)
  808664:	1f000117 	ldw	fp,4(r3)
  808668:	18c00204 	addi	r3,r3,8
  80866c:	d8c00415 	stw	r3,16(sp)
  808670:	00000906 	br	808698 <___vfiprintf_internal_r+0x548>
  808674:	6b400414 	ori	r13,r13,16
  808678:	6880080c 	andi	r2,r13,32
  80867c:	10003126 	beq	r2,zero,808744 <___vfiprintf_internal_r+0x5f4>
  808680:	d8c00417 	ldw	r3,16(sp)
  808684:	0005883a 	mov	r2,zero
  808688:	1dc00017 	ldw	r23,0(r3)
  80868c:	1f000117 	ldw	fp,4(r3)
  808690:	18c00204 	addi	r3,r3,8
  808694:	d8c00415 	stw	r3,16(sp)
  808698:	d8000945 	stb	zero,37(sp)
  80869c:	40ffffe0 	cmpeqi	r3,r8,-1
  8086a0:	001d883a 	mov	r14,zero
  8086a4:	1800f01e 	bne	r3,zero,808a68 <___vfiprintf_internal_r+0x918>
  8086a8:	04ffdfc4 	movi	r19,-129
  8086ac:	6cc8703a 	and	r4,r13,r19
  8086b0:	bf06b03a 	or	r3,r23,fp
  8086b4:	d9000015 	stw	r4,0(sp)
  8086b8:	1802301e 	bne	r3,zero,808f7c <___vfiprintf_internal_r+0xe2c>
  8086bc:	4001f31e 	bne	r8,zero,808e8c <___vfiprintf_internal_r+0xd3c>
  8086c0:	10029e1e 	bne	r2,zero,80913c <___vfiprintf_internal_r+0xfec>
  8086c4:	6f00004c 	andi	fp,r13,1
  8086c8:	e002bc26 	beq	fp,zero,8091bc <___vfiprintf_internal_r+0x106c>
  8086cc:	00800c04 	movi	r2,48
  8086d0:	d88016c5 	stb	r2,91(sp)
  8086d4:	dcc016c4 	addi	r19,sp,91
  8086d8:	00010006 	br	808adc <___vfiprintf_internal_r+0x98c>
  8086dc:	8d27c83a 	sub	r19,r17,r20
  8086e0:	8d3fae26 	beq	r17,r20,80859c <___vfiprintf_internal_r+0x44c>
  8086e4:	d8c00c17 	ldw	r3,48(sp)
  8086e8:	d8800b17 	ldw	r2,44(sp)
  8086ec:	85000015 	stw	r20,0(r16)
  8086f0:	98c7883a 	add	r3,r19,r3
  8086f4:	10800044 	addi	r2,r2,1
  8086f8:	d8800b15 	stw	r2,44(sp)
  8086fc:	84c00115 	stw	r19,4(r16)
  808700:	d8c00c15 	stw	r3,48(sp)
  808704:	10800208 	cmpgei	r2,r2,8
  808708:	1000061e 	bne	r2,zero,808724 <___vfiprintf_internal_r+0x5d4>
  80870c:	84000204 	addi	r16,r16,8
  808710:	d8c00117 	ldw	r3,4(sp)
  808714:	88800003 	ldbu	r2,0(r17)
  808718:	1cc7883a 	add	r3,r3,r19
  80871c:	d8c00115 	stw	r3,4(sp)
  808720:	003ec006 	br	808224 <___vfiprintf_internal_r+0xd4>
  808724:	18028126 	beq	r3,zero,80912c <___vfiprintf_internal_r+0xfdc>
  808728:	d9800a04 	addi	r6,sp,40
  80872c:	a80b883a 	mov	r5,r21
  808730:	b009883a 	mov	r4,r22
  808734:	08080440 	call	808044 <__sprint_r.part.0>
  808738:	103f9a1e 	bne	r2,zero,8085a4 <___vfiprintf_internal_r+0x454>
  80873c:	9021883a 	mov	r16,r18
  808740:	003ff306 	br	808710 <___vfiprintf_internal_r+0x5c0>
  808744:	d9000417 	ldw	r4,16(sp)
  808748:	6880040c 	andi	r2,r13,16
  80874c:	20c00104 	addi	r3,r4,4
  808750:	1002ac1e 	bne	r2,zero,809204 <___vfiprintf_internal_r+0x10b4>
  808754:	6880100c 	andi	r2,r13,64
  808758:	1002fb26 	beq	r2,zero,809348 <___vfiprintf_internal_r+0x11f8>
  80875c:	d8800417 	ldw	r2,16(sp)
  808760:	0039883a 	mov	fp,zero
  808764:	d8c00415 	stw	r3,16(sp)
  808768:	15c0000b 	ldhu	r23,0(r2)
  80876c:	0005883a 	mov	r2,zero
  808770:	003fc906 	br	808698 <___vfiprintf_internal_r+0x548>
  808774:	d9000417 	ldw	r4,16(sp)
  808778:	6880040c 	andi	r2,r13,16
  80877c:	20c00104 	addi	r3,r4,4
  808780:	1002af1e 	bne	r2,zero,809240 <___vfiprintf_internal_r+0x10f0>
  808784:	6880100c 	andi	r2,r13,64
  808788:	1002fb26 	beq	r2,zero,809378 <___vfiprintf_internal_r+0x1228>
  80878c:	d8800417 	ldw	r2,16(sp)
  808790:	0039883a 	mov	fp,zero
  808794:	d8c00415 	stw	r3,16(sp)
  808798:	15c0000b 	ldhu	r23,0(r2)
  80879c:	00800044 	movi	r2,1
  8087a0:	003fbd06 	br	808698 <___vfiprintf_internal_r+0x548>
  8087a4:	d8c00017 	ldw	r3,0(sp)
  8087a8:	d8000b15 	stw	zero,44(sp)
  8087ac:	1cc0010c 	andi	r19,r3,4
  8087b0:	98024c26 	beq	r19,zero,8090e4 <___vfiprintf_internal_r+0xf94>
  8087b4:	8de1c83a 	sub	r16,r17,r23
  8087b8:	04024a0e 	bge	zero,r16,8090e4 <___vfiprintf_internal_r+0xf94>
  8087bc:	900d883a 	mov	r6,r18
  8087c0:	80c00450 	cmplti	r3,r16,17
  8087c4:	d9000b17 	ldw	r4,44(sp)
  8087c8:	01c02074 	movhi	r7,129
  8087cc:	18031a1e 	bne	r3,zero,809438 <___vfiprintf_internal_r+0x12e8>
  8087d0:	39c22a04 	addi	r7,r7,2216
  8087d4:	04c00404 	movi	r19,16
  8087d8:	00000606 	br	8087f4 <___vfiprintf_internal_r+0x6a4>
  8087dc:	21400084 	addi	r5,r4,2
  8087e0:	31800204 	addi	r6,r6,8
  8087e4:	1809883a 	mov	r4,r3
  8087e8:	843ffc04 	addi	r16,r16,-16
  8087ec:	80c00448 	cmpgei	r3,r16,17
  8087f0:	18001726 	beq	r3,zero,808850 <___vfiprintf_internal_r+0x700>
  8087f4:	20c00044 	addi	r3,r4,1
  8087f8:	10800404 	addi	r2,r2,16
  8087fc:	31c00015 	stw	r7,0(r6)
  808800:	34c00115 	stw	r19,4(r6)
  808804:	d8800c15 	stw	r2,48(sp)
  808808:	d8c00b15 	stw	r3,44(sp)
  80880c:	19400208 	cmpgei	r5,r3,8
  808810:	283ff226 	beq	r5,zero,8087dc <___vfiprintf_internal_r+0x68c>
  808814:	d9800a04 	addi	r6,sp,40
  808818:	a80b883a 	mov	r5,r21
  80881c:	b009883a 	mov	r4,r22
  808820:	10011f26 	beq	r2,zero,808ca0 <___vfiprintf_internal_r+0xb50>
  808824:	d9c00015 	stw	r7,0(sp)
  808828:	08080440 	call	808044 <__sprint_r.part.0>
  80882c:	103f5d1e 	bne	r2,zero,8085a4 <___vfiprintf_internal_r+0x454>
  808830:	d9000b17 	ldw	r4,44(sp)
  808834:	843ffc04 	addi	r16,r16,-16
  808838:	80c00448 	cmpgei	r3,r16,17
  80883c:	d8800c17 	ldw	r2,48(sp)
  808840:	d9c00017 	ldw	r7,0(sp)
  808844:	900d883a 	mov	r6,r18
  808848:	21400044 	addi	r5,r4,1
  80884c:	183fe91e 	bne	r3,zero,8087f4 <___vfiprintf_internal_r+0x6a4>
  808850:	1405883a 	add	r2,r2,r16
  808854:	d9400b15 	stw	r5,44(sp)
  808858:	31c00015 	stw	r7,0(r6)
  80885c:	34000115 	stw	r16,4(r6)
  808860:	d8800c15 	stw	r2,48(sp)
  808864:	29400210 	cmplti	r5,r5,8
  808868:	283f421e 	bne	r5,zero,808574 <___vfiprintf_internal_r+0x424>
  80886c:	10021d26 	beq	r2,zero,8090e4 <___vfiprintf_internal_r+0xf94>
  808870:	d9800a04 	addi	r6,sp,40
  808874:	a80b883a 	mov	r5,r21
  808878:	b009883a 	mov	r4,r22
  80887c:	08080440 	call	808044 <__sprint_r.part.0>
  808880:	103f481e 	bne	r2,zero,8085a4 <___vfiprintf_internal_r+0x454>
  808884:	d8800c17 	ldw	r2,48(sp)
  808888:	003f3a06 	br	808574 <___vfiprintf_internal_r+0x424>
  80888c:	08009680 	call	800968 <__sinit>
  808890:	003e4106 	br	808198 <___vfiprintf_internal_r+0x48>
  808894:	29403fcc 	andi	r5,r5,255
  808898:	2802da1e 	bne	r5,zero,809404 <___vfiprintf_internal_r+0x12b4>
  80889c:	6880080c 	andi	r2,r13,32
  8088a0:	10005b26 	beq	r2,zero,808a10 <___vfiprintf_internal_r+0x8c0>
  8088a4:	d8c00417 	ldw	r3,16(sp)
  8088a8:	18800117 	ldw	r2,4(r3)
  8088ac:	1dc00017 	ldw	r23,0(r3)
  8088b0:	18c00204 	addi	r3,r3,8
  8088b4:	d8c00415 	stw	r3,16(sp)
  8088b8:	1039883a 	mov	fp,r2
  8088bc:	10006016 	blt	r2,zero,808a40 <___vfiprintf_internal_r+0x8f0>
  8088c0:	40bfffd8 	cmpnei	r2,r8,-1
  8088c4:	db800943 	ldbu	r14,37(sp)
  8088c8:	10000626 	beq	r2,zero,8088e4 <___vfiprintf_internal_r+0x794>
  8088cc:	04ffdfc4 	movi	r19,-129
  8088d0:	6cc6703a 	and	r3,r13,r19
  8088d4:	bf04b03a 	or	r2,r23,fp
  8088d8:	d8c00015 	stw	r3,0(sp)
  8088dc:	10021626 	beq	r2,zero,809138 <___vfiprintf_internal_r+0xfe8>
  8088e0:	db400017 	ldw	r13,0(sp)
  8088e4:	e001a71e 	bne	fp,zero,808f84 <___vfiprintf_internal_r+0xe34>
  8088e8:	b88002a8 	cmpgeui	r2,r23,10
  8088ec:	1001a51e 	bne	r2,zero,808f84 <___vfiprintf_internal_r+0xe34>
  8088f0:	bdc00c04 	addi	r23,r23,48
  8088f4:	ddc016c5 	stb	r23,91(sp)
  8088f8:	db400015 	stw	r13,0(sp)
  8088fc:	07000044 	movi	fp,1
  808900:	dcc016c4 	addi	r19,sp,91
  808904:	00007506 	br	808adc <___vfiprintf_internal_r+0x98c>
  808908:	a0800007 	ldb	r2,0(r20)
  80890c:	6b401014 	ori	r13,r13,64
  808910:	003e5006 	br	808254 <___vfiprintf_internal_r+0x104>
  808914:	29403fcc 	andi	r5,r5,255
  808918:	2802bc1e 	bne	r5,zero,80940c <___vfiprintf_internal_r+0x12bc>
  80891c:	00c02074 	movhi	r3,129
  808920:	18c19f04 	addi	r3,r3,1660
  808924:	d8c00515 	stw	r3,20(sp)
  808928:	68c0080c 	andi	r3,r13,32
  80892c:	1800bd26 	beq	r3,zero,808c24 <___vfiprintf_internal_r+0xad4>
  808930:	d8c00417 	ldw	r3,16(sp)
  808934:	1dc00017 	ldw	r23,0(r3)
  808938:	1f000117 	ldw	fp,4(r3)
  80893c:	18c00204 	addi	r3,r3,8
  808940:	d8c00415 	stw	r3,16(sp)
  808944:	68c0004c 	andi	r3,r13,1
  808948:	18000226 	beq	r3,zero,808954 <___vfiprintf_internal_r+0x804>
  80894c:	bf06b03a 	or	r3,r23,fp
  808950:	1802261e 	bne	r3,zero,8091ec <___vfiprintf_internal_r+0x109c>
  808954:	00800084 	movi	r2,2
  808958:	003f4f06 	br	808698 <___vfiprintf_internal_r+0x548>
  80895c:	d8800417 	ldw	r2,16(sp)
  808960:	d8000945 	stb	zero,37(sp)
  808964:	14c00017 	ldw	r19,0(r2)
  808968:	10c00104 	addi	r3,r2,4
  80896c:	98026926 	beq	r19,zero,809314 <___vfiprintf_internal_r+0x11c4>
  808970:	40bfffe0 	cmpeqi	r2,r8,-1
  808974:	1002411e 	bne	r2,zero,80927c <___vfiprintf_internal_r+0x112c>
  808978:	400d883a 	mov	r6,r8
  80897c:	000b883a 	mov	r5,zero
  808980:	9809883a 	mov	r4,r19
  808984:	d8c00315 	stw	r3,12(sp)
  808988:	db400215 	stw	r13,8(sp)
  80898c:	da000015 	stw	r8,0(sp)
  808990:	08065900 	call	806590 <memchr>
  808994:	da000017 	ldw	r8,0(sp)
  808998:	db400217 	ldw	r13,8(sp)
  80899c:	d8c00317 	ldw	r3,12(sp)
  8089a0:	10029426 	beq	r2,zero,8093f4 <___vfiprintf_internal_r+0x12a4>
  8089a4:	14f9c83a 	sub	fp,r2,r19
  8089a8:	e02f883a 	mov	r23,fp
  8089ac:	d8c00415 	stw	r3,16(sp)
  8089b0:	003ea006 	br	808434 <___vfiprintf_internal_r+0x2e4>
  8089b4:	a0800007 	ldb	r2,0(r20)
  8089b8:	6b400814 	ori	r13,r13,32
  8089bc:	003e2506 	br	808254 <___vfiprintf_internal_r+0x104>
  8089c0:	d8c00417 	ldw	r3,16(sp)
  8089c4:	00800c04 	movi	r2,48
  8089c8:	d8800985 	stb	r2,38(sp)
  8089cc:	00801e04 	movi	r2,120
  8089d0:	01002074 	movhi	r4,129
  8089d4:	d88009c5 	stb	r2,39(sp)
  8089d8:	18800104 	addi	r2,r3,4
  8089dc:	d8800415 	stw	r2,16(sp)
  8089e0:	20819f04 	addi	r2,r4,1660
  8089e4:	d8800515 	stw	r2,20(sp)
  8089e8:	1dc00017 	ldw	r23,0(r3)
  8089ec:	0039883a 	mov	fp,zero
  8089f0:	6b400094 	ori	r13,r13,2
  8089f4:	00800084 	movi	r2,2
  8089f8:	003f2706 	br	808698 <___vfiprintf_internal_r+0x548>
  8089fc:	29403fcc 	andi	r5,r5,255
  808a00:	2802841e 	bne	r5,zero,809414 <___vfiprintf_internal_r+0x12c4>
  808a04:	6b400414 	ori	r13,r13,16
  808a08:	6880080c 	andi	r2,r13,32
  808a0c:	103fa51e 	bne	r2,zero,8088a4 <___vfiprintf_internal_r+0x754>
  808a10:	d9000417 	ldw	r4,16(sp)
  808a14:	6880040c 	andi	r2,r13,16
  808a18:	20c00104 	addi	r3,r4,4
  808a1c:	1001ee1e 	bne	r2,zero,8091d8 <___vfiprintf_internal_r+0x1088>
  808a20:	6880100c 	andi	r2,r13,64
  808a24:	10024e26 	beq	r2,zero,809360 <___vfiprintf_internal_r+0x1210>
  808a28:	d8800417 	ldw	r2,16(sp)
  808a2c:	d8c00415 	stw	r3,16(sp)
  808a30:	15c0000f 	ldh	r23,0(r2)
  808a34:	b839d7fa 	srai	fp,r23,31
  808a38:	e005883a 	mov	r2,fp
  808a3c:	103fa00e 	bge	r2,zero,8088c0 <___vfiprintf_internal_r+0x770>
  808a40:	b804c03a 	cmpne	r2,r23,zero
  808a44:	0739c83a 	sub	fp,zero,fp
  808a48:	e0b9c83a 	sub	fp,fp,r2
  808a4c:	00800b44 	movi	r2,45
  808a50:	d8800945 	stb	r2,37(sp)
  808a54:	40ffffe0 	cmpeqi	r3,r8,-1
  808a58:	05efc83a 	sub	r23,zero,r23
  808a5c:	03800b44 	movi	r14,45
  808a60:	00800044 	movi	r2,1
  808a64:	183f1026 	beq	r3,zero,8086a8 <___vfiprintf_internal_r+0x558>
  808a68:	10c00060 	cmpeqi	r3,r2,1
  808a6c:	183f9d1e 	bne	r3,zero,8088e4 <___vfiprintf_internal_r+0x794>
  808a70:	108000a0 	cmpeqi	r2,r2,2
  808a74:	10010a1e 	bne	r2,zero,808ea0 <___vfiprintf_internal_r+0xd50>
  808a78:	9027883a 	mov	r19,r18
  808a7c:	e008977a 	slli	r4,fp,29
  808a80:	b806d0fa 	srli	r3,r23,3
  808a84:	e038d0fa 	srli	fp,fp,3
  808a88:	b88001cc 	andi	r2,r23,7
  808a8c:	10800c04 	addi	r2,r2,48
  808a90:	20eeb03a 	or	r23,r4,r3
  808a94:	98bfffc5 	stb	r2,-1(r19)
  808a98:	bf06b03a 	or	r3,r23,fp
  808a9c:	980b883a 	mov	r5,r19
  808aa0:	9cffffc4 	addi	r19,r19,-1
  808aa4:	183ff51e 	bne	r3,zero,808a7c <___vfiprintf_internal_r+0x92c>
  808aa8:	68c0004c 	andi	r3,r13,1
  808aac:	18010926 	beq	r3,zero,808ed4 <___vfiprintf_internal_r+0xd84>
  808ab0:	10803fcc 	andi	r2,r2,255
  808ab4:	1080201c 	xori	r2,r2,128
  808ab8:	10bfe004 	addi	r2,r2,-128
  808abc:	10800c18 	cmpnei	r2,r2,48
  808ac0:	10010426 	beq	r2,zero,808ed4 <___vfiprintf_internal_r+0xd84>
  808ac4:	297fff84 	addi	r5,r5,-2
  808ac8:	00800c04 	movi	r2,48
  808acc:	98bfffc5 	stb	r2,-1(r19)
  808ad0:	9179c83a 	sub	fp,r18,r5
  808ad4:	db400015 	stw	r13,0(sp)
  808ad8:	2827883a 	mov	r19,r5
  808adc:	402f883a 	mov	r23,r8
  808ae0:	4700010e 	bge	r8,fp,808ae8 <___vfiprintf_internal_r+0x998>
  808ae4:	e02f883a 	mov	r23,fp
  808ae8:	73803fcc 	andi	r14,r14,255
  808aec:	7380201c 	xori	r14,r14,128
  808af0:	73bfe004 	addi	r14,r14,-128
  808af4:	703e5126 	beq	r14,zero,80843c <___vfiprintf_internal_r+0x2ec>
  808af8:	bdc00044 	addi	r23,r23,1
  808afc:	003e4f06 	br	80843c <___vfiprintf_internal_r+0x2ec>
  808b00:	a0800007 	ldb	r2,0(r20)
  808b04:	6b402014 	ori	r13,r13,128
  808b08:	003dd206 	br	808254 <___vfiprintf_internal_r+0x104>
  808b0c:	a0800007 	ldb	r2,0(r20)
  808b10:	a0c00044 	addi	r3,r20,1
  808b14:	11000aa0 	cmpeqi	r4,r2,42
  808b18:	2002521e 	bne	r4,zero,809464 <___vfiprintf_internal_r+0x1314>
  808b1c:	113ff404 	addi	r4,r2,-48
  808b20:	21c002b0 	cmpltui	r7,r4,10
  808b24:	1829883a 	mov	r20,r3
  808b28:	0011883a 	mov	r8,zero
  808b2c:	383dca26 	beq	r7,zero,808258 <___vfiprintf_internal_r+0x108>
  808b30:	400690ba 	slli	r3,r8,2
  808b34:	a0800007 	ldb	r2,0(r20)
  808b38:	a5000044 	addi	r20,r20,1
  808b3c:	1a11883a 	add	r8,r3,r8
  808b40:	4211883a 	add	r8,r8,r8
  808b44:	4111883a 	add	r8,r8,r4
  808b48:	113ff404 	addi	r4,r2,-48
  808b4c:	20c002b0 	cmpltui	r3,r4,10
  808b50:	183ff71e 	bne	r3,zero,808b30 <___vfiprintf_internal_r+0x9e0>
  808b54:	003dc006 	br	808258 <___vfiprintf_internal_r+0x108>
  808b58:	a0800003 	ldbu	r2,0(r20)
  808b5c:	10803fcc 	andi	r2,r2,255
  808b60:	1080201c 	xori	r2,r2,128
  808b64:	6b400114 	ori	r13,r13,4
  808b68:	10bfe004 	addi	r2,r2,-128
  808b6c:	003db906 	br	808254 <___vfiprintf_internal_r+0x104>
  808b70:	a0800007 	ldb	r2,0(r20)
  808b74:	01400044 	movi	r5,1
  808b78:	01800ac4 	movi	r6,43
  808b7c:	003db506 	br	808254 <___vfiprintf_internal_r+0x104>
  808b80:	d8c00417 	ldw	r3,16(sp)
  808b84:	a0800003 	ldbu	r2,0(r20)
  808b88:	1c400017 	ldw	r17,0(r3)
  808b8c:	18c00104 	addi	r3,r3,4
  808b90:	8801b716 	blt	r17,zero,809270 <___vfiprintf_internal_r+0x1120>
  808b94:	d8c00415 	stw	r3,16(sp)
  808b98:	10803fcc 	andi	r2,r2,255
  808b9c:	1080201c 	xori	r2,r2,128
  808ba0:	10bfe004 	addi	r2,r2,-128
  808ba4:	003dab06 	br	808254 <___vfiprintf_internal_r+0x104>
  808ba8:	a0800007 	ldb	r2,0(r20)
  808bac:	6b400054 	ori	r13,r13,1
  808bb0:	003da806 	br	808254 <___vfiprintf_internal_r+0x104>
  808bb4:	30c03fcc 	andi	r3,r6,255
  808bb8:	18c0201c 	xori	r3,r3,128
  808bbc:	18ffe004 	addi	r3,r3,-128
  808bc0:	a0800003 	ldbu	r2,0(r20)
  808bc4:	183ff41e 	bne	r3,zero,808b98 <___vfiprintf_internal_r+0xa48>
  808bc8:	10803fcc 	andi	r2,r2,255
  808bcc:	1080201c 	xori	r2,r2,128
  808bd0:	01400044 	movi	r5,1
  808bd4:	01800804 	movi	r6,32
  808bd8:	10bfe004 	addi	r2,r2,-128
  808bdc:	003d9d06 	br	808254 <___vfiprintf_internal_r+0x104>
  808be0:	d8c00417 	ldw	r3,16(sp)
  808be4:	d8000945 	stb	zero,37(sp)
  808be8:	05c00044 	movi	r23,1
  808bec:	18800017 	ldw	r2,0(r3)
  808bf0:	18c00104 	addi	r3,r3,4
  808bf4:	d8c00415 	stw	r3,16(sp)
  808bf8:	d8800d05 	stb	r2,52(sp)
  808bfc:	07000044 	movi	fp,1
  808c00:	dcc00d04 	addi	r19,sp,52
  808c04:	003e0b06 	br	808434 <___vfiprintf_internal_r+0x2e4>
  808c08:	29403fcc 	andi	r5,r5,255
  808c0c:	2802061e 	bne	r5,zero,809428 <___vfiprintf_internal_r+0x12d8>
  808c10:	00c02074 	movhi	r3,129
  808c14:	18c1a404 	addi	r3,r3,1680
  808c18:	d8c00515 	stw	r3,20(sp)
  808c1c:	68c0080c 	andi	r3,r13,32
  808c20:	183f431e 	bne	r3,zero,808930 <___vfiprintf_internal_r+0x7e0>
  808c24:	d9400417 	ldw	r5,16(sp)
  808c28:	68c0040c 	andi	r3,r13,16
  808c2c:	29000104 	addi	r4,r5,4
  808c30:	18017f1e 	bne	r3,zero,809230 <___vfiprintf_internal_r+0x10e0>
  808c34:	68c0100c 	andi	r3,r13,64
  808c38:	1801be26 	beq	r3,zero,809334 <___vfiprintf_internal_r+0x11e4>
  808c3c:	d8c00417 	ldw	r3,16(sp)
  808c40:	0039883a 	mov	fp,zero
  808c44:	d9000415 	stw	r4,16(sp)
  808c48:	1dc0000b 	ldhu	r23,0(r3)
  808c4c:	003f3d06 	br	808944 <___vfiprintf_internal_r+0x7f4>
  808c50:	29403fcc 	andi	r5,r5,255
  808c54:	2801f61e 	bne	r5,zero,809430 <___vfiprintf_internal_r+0x12e0>
  808c58:	d9000417 	ldw	r4,16(sp)
  808c5c:	6880080c 	andi	r2,r13,32
  808c60:	20c00017 	ldw	r3,0(r4)
  808c64:	21000104 	addi	r4,r4,4
  808c68:	10016b1e 	bne	r2,zero,809218 <___vfiprintf_internal_r+0x10c8>
  808c6c:	6880040c 	andi	r2,r13,16
  808c70:	1001951e 	bne	r2,zero,8092c8 <___vfiprintf_internal_r+0x1178>
  808c74:	6b40100c 	andi	r13,r13,64
  808c78:	68019326 	beq	r13,zero,8092c8 <___vfiprintf_internal_r+0x1178>
  808c7c:	d8800117 	ldw	r2,4(sp)
  808c80:	d9000415 	stw	r4,16(sp)
  808c84:	1880000d 	sth	r2,0(r3)
  808c88:	003d5a06 	br	8081f4 <___vfiprintf_internal_r+0xa4>
  808c8c:	a0800007 	ldb	r2,0(r20)
  808c90:	10c01b18 	cmpnei	r3,r2,108
  808c94:	18019826 	beq	r3,zero,8092f8 <___vfiprintf_internal_r+0x11a8>
  808c98:	6b400414 	ori	r13,r13,16
  808c9c:	003d6d06 	br	808254 <___vfiprintf_internal_r+0x104>
  808ca0:	01400044 	movi	r5,1
  808ca4:	0009883a 	mov	r4,zero
  808ca8:	900d883a 	mov	r6,r18
  808cac:	003ece06 	br	8087e8 <___vfiprintf_internal_r+0x698>
  808cb0:	8dc7c83a 	sub	r3,r17,r23
  808cb4:	00fe190e 	bge	zero,r3,80851c <___vfiprintf_internal_r+0x3cc>
  808cb8:	19c00450 	cmplti	r7,r3,17
  808cbc:	3801e41e 	bne	r7,zero,809450 <___vfiprintf_internal_r+0x1300>
  808cc0:	01c02074 	movhi	r7,129
  808cc4:	39c22604 	addi	r7,r7,2200
  808cc8:	03400404 	movi	r13,16
  808ccc:	00000606 	br	808ce8 <___vfiprintf_internal_r+0xb98>
  808cd0:	23800084 	addi	r14,r4,2
  808cd4:	84000204 	addi	r16,r16,8
  808cd8:	2809883a 	mov	r4,r5
  808cdc:	18fffc04 	addi	r3,r3,-16
  808ce0:	19400448 	cmpgei	r5,r3,17
  808ce4:	28001c26 	beq	r5,zero,808d58 <___vfiprintf_internal_r+0xc08>
  808ce8:	21400044 	addi	r5,r4,1
  808cec:	10800404 	addi	r2,r2,16
  808cf0:	81c00015 	stw	r7,0(r16)
  808cf4:	83400115 	stw	r13,4(r16)
  808cf8:	d8800c15 	stw	r2,48(sp)
  808cfc:	d9400b15 	stw	r5,44(sp)
  808d00:	29800208 	cmpgei	r6,r5,8
  808d04:	303ff226 	beq	r6,zero,808cd0 <___vfiprintf_internal_r+0xb80>
  808d08:	d9800a04 	addi	r6,sp,40
  808d0c:	a80b883a 	mov	r5,r21
  808d10:	b009883a 	mov	r4,r22
  808d14:	10007826 	beq	r2,zero,808ef8 <___vfiprintf_internal_r+0xda8>
  808d18:	d9c00615 	stw	r7,24(sp)
  808d1c:	d8c00315 	stw	r3,12(sp)
  808d20:	da000215 	stw	r8,8(sp)
  808d24:	08080440 	call	808044 <__sprint_r.part.0>
  808d28:	103e1e1e 	bne	r2,zero,8085a4 <___vfiprintf_internal_r+0x454>
  808d2c:	d8c00317 	ldw	r3,12(sp)
  808d30:	d9000b17 	ldw	r4,44(sp)
  808d34:	d8800c17 	ldw	r2,48(sp)
  808d38:	18fffc04 	addi	r3,r3,-16
  808d3c:	19400448 	cmpgei	r5,r3,17
  808d40:	d9c00617 	ldw	r7,24(sp)
  808d44:	da000217 	ldw	r8,8(sp)
  808d48:	9021883a 	mov	r16,r18
  808d4c:	23800044 	addi	r14,r4,1
  808d50:	03400404 	movi	r13,16
  808d54:	283fe41e 	bne	r5,zero,808ce8 <___vfiprintf_internal_r+0xb98>
  808d58:	83400204 	addi	r13,r16,8
  808d5c:	10c5883a 	add	r2,r2,r3
  808d60:	80c00115 	stw	r3,4(r16)
  808d64:	81c00015 	stw	r7,0(r16)
  808d68:	d8800c15 	stw	r2,48(sp)
  808d6c:	db800b15 	stw	r14,44(sp)
  808d70:	70c00208 	cmpgei	r3,r14,8
  808d74:	18011326 	beq	r3,zero,8091c4 <___vfiprintf_internal_r+0x1074>
  808d78:	10018826 	beq	r2,zero,80939c <___vfiprintf_internal_r+0x124c>
  808d7c:	d9800a04 	addi	r6,sp,40
  808d80:	a80b883a 	mov	r5,r21
  808d84:	b009883a 	mov	r4,r22
  808d88:	da000215 	stw	r8,8(sp)
  808d8c:	08080440 	call	808044 <__sprint_r.part.0>
  808d90:	103e041e 	bne	r2,zero,8085a4 <___vfiprintf_internal_r+0x454>
  808d94:	da000217 	ldw	r8,8(sp)
  808d98:	d9000b17 	ldw	r4,44(sp)
  808d9c:	d8800c17 	ldw	r2,48(sp)
  808da0:	4711c83a 	sub	r8,r8,fp
  808da4:	d9801904 	addi	r6,sp,100
  808da8:	21400044 	addi	r5,r4,1
  808dac:	9021883a 	mov	r16,r18
  808db0:	023ddc0e 	bge	zero,r8,808524 <___vfiprintf_internal_r+0x3d4>
  808db4:	40c00450 	cmplti	r3,r8,17
  808db8:	01c02074 	movhi	r7,129
  808dbc:	1801741e 	bne	r3,zero,809390 <___vfiprintf_internal_r+0x1240>
  808dc0:	39c22604 	addi	r7,r7,2200
  808dc4:	03400404 	movi	r13,16
  808dc8:	00000606 	br	808de4 <___vfiprintf_internal_r+0xc94>
  808dcc:	21400084 	addi	r5,r4,2
  808dd0:	84000204 	addi	r16,r16,8
  808dd4:	1809883a 	mov	r4,r3
  808dd8:	423ffc04 	addi	r8,r8,-16
  808ddc:	40c00448 	cmpgei	r3,r8,17
  808de0:	18001a26 	beq	r3,zero,808e4c <___vfiprintf_internal_r+0xcfc>
  808de4:	20c00044 	addi	r3,r4,1
  808de8:	10800404 	addi	r2,r2,16
  808dec:	81c00015 	stw	r7,0(r16)
  808df0:	83400115 	stw	r13,4(r16)
  808df4:	d8800c15 	stw	r2,48(sp)
  808df8:	d8c00b15 	stw	r3,44(sp)
  808dfc:	19400208 	cmpgei	r5,r3,8
  808e00:	283ff226 	beq	r5,zero,808dcc <___vfiprintf_internal_r+0xc7c>
  808e04:	d9800a04 	addi	r6,sp,40
  808e08:	a80b883a 	mov	r5,r21
  808e0c:	b009883a 	mov	r4,r22
  808e10:	10001a26 	beq	r2,zero,808e7c <___vfiprintf_internal_r+0xd2c>
  808e14:	d9c00315 	stw	r7,12(sp)
  808e18:	da000215 	stw	r8,8(sp)
  808e1c:	08080440 	call	808044 <__sprint_r.part.0>
  808e20:	103de01e 	bne	r2,zero,8085a4 <___vfiprintf_internal_r+0x454>
  808e24:	da000217 	ldw	r8,8(sp)
  808e28:	d9000b17 	ldw	r4,44(sp)
  808e2c:	d8800c17 	ldw	r2,48(sp)
  808e30:	423ffc04 	addi	r8,r8,-16
  808e34:	40c00448 	cmpgei	r3,r8,17
  808e38:	d9c00317 	ldw	r7,12(sp)
  808e3c:	9021883a 	mov	r16,r18
  808e40:	21400044 	addi	r5,r4,1
  808e44:	03400404 	movi	r13,16
  808e48:	183fe61e 	bne	r3,zero,808de4 <___vfiprintf_internal_r+0xc94>
  808e4c:	81000204 	addi	r4,r16,8
  808e50:	1205883a 	add	r2,r2,r8
  808e54:	81c00015 	stw	r7,0(r16)
  808e58:	82000115 	stw	r8,4(r16)
  808e5c:	d8800c15 	stw	r2,48(sp)
  808e60:	d9400b15 	stw	r5,44(sp)
  808e64:	28c00208 	cmpgei	r3,r5,8
  808e68:	1800a41e 	bne	r3,zero,8090fc <___vfiprintf_internal_r+0xfac>
  808e6c:	29400044 	addi	r5,r5,1
  808e70:	21800204 	addi	r6,r4,8
  808e74:	2021883a 	mov	r16,r4
  808e78:	003daa06 	br	808524 <___vfiprintf_internal_r+0x3d4>
  808e7c:	01400044 	movi	r5,1
  808e80:	0009883a 	mov	r4,zero
  808e84:	9021883a 	mov	r16,r18
  808e88:	003fd306 	br	808dd8 <___vfiprintf_internal_r+0xc88>
  808e8c:	10c00060 	cmpeqi	r3,r2,1
  808e90:	1801561e 	bne	r3,zero,8093ec <___vfiprintf_internal_r+0x129c>
  808e94:	108000a0 	cmpeqi	r2,r2,2
  808e98:	db400017 	ldw	r13,0(sp)
  808e9c:	103ef626 	beq	r2,zero,808a78 <___vfiprintf_internal_r+0x928>
  808ea0:	9027883a 	mov	r19,r18
  808ea4:	d9000517 	ldw	r4,20(sp)
  808ea8:	b88003cc 	andi	r2,r23,15
  808eac:	e006973a 	slli	r3,fp,28
  808eb0:	b82ed13a 	srli	r23,r23,4
  808eb4:	2085883a 	add	r2,r4,r2
  808eb8:	10800003 	ldbu	r2,0(r2)
  808ebc:	e038d13a 	srli	fp,fp,4
  808ec0:	1deeb03a 	or	r23,r3,r23
  808ec4:	98bfffc5 	stb	r2,-1(r19)
  808ec8:	bf04b03a 	or	r2,r23,fp
  808ecc:	9cffffc4 	addi	r19,r19,-1
  808ed0:	103ff41e 	bne	r2,zero,808ea4 <___vfiprintf_internal_r+0xd54>
  808ed4:	94f9c83a 	sub	fp,r18,r19
  808ed8:	db400015 	stw	r13,0(sp)
  808edc:	003eff06 	br	808adc <___vfiprintf_internal_r+0x98c>
  808ee0:	d9800a04 	addi	r6,sp,40
  808ee4:	a80b883a 	mov	r5,r21
  808ee8:	b009883a 	mov	r4,r22
  808eec:	08080440 	call	808044 <__sprint_r.part.0>
  808ef0:	103da626 	beq	r2,zero,80858c <___vfiprintf_internal_r+0x43c>
  808ef4:	003dab06 	br	8085a4 <___vfiprintf_internal_r+0x454>
  808ef8:	03800044 	movi	r14,1
  808efc:	0009883a 	mov	r4,zero
  808f00:	9021883a 	mov	r16,r18
  808f04:	003f7506 	br	808cdc <___vfiprintf_internal_r+0xb8c>
  808f08:	10009026 	beq	r2,zero,80914c <___vfiprintf_internal_r+0xffc>
  808f0c:	d9800a04 	addi	r6,sp,40
  808f10:	a80b883a 	mov	r5,r21
  808f14:	b009883a 	mov	r4,r22
  808f18:	da000615 	stw	r8,24(sp)
  808f1c:	db400315 	stw	r13,12(sp)
  808f20:	db800215 	stw	r14,8(sp)
  808f24:	08080440 	call	808044 <__sprint_r.part.0>
  808f28:	103d9e1e 	bne	r2,zero,8085a4 <___vfiprintf_internal_r+0x454>
  808f2c:	d9000b17 	ldw	r4,44(sp)
  808f30:	d8800c17 	ldw	r2,48(sp)
  808f34:	da000617 	ldw	r8,24(sp)
  808f38:	db400317 	ldw	r13,12(sp)
  808f3c:	db800217 	ldw	r14,8(sp)
  808f40:	d9801904 	addi	r6,sp,100
  808f44:	21400044 	addi	r5,r4,1
  808f48:	9021883a 	mov	r16,r18
  808f4c:	003d5806 	br	8084b0 <___vfiprintf_internal_r+0x360>
  808f50:	d8800984 	addi	r2,sp,38
  808f54:	d8801715 	stw	r2,92(sp)
  808f58:	00800084 	movi	r2,2
  808f5c:	d8801815 	stw	r2,96(sp)
  808f60:	d9801904 	addi	r6,sp,100
  808f64:	01400044 	movi	r5,1
  808f68:	3021883a 	mov	r16,r6
  808f6c:	2809883a 	mov	r4,r5
  808f70:	21400044 	addi	r5,r4,1
  808f74:	81800204 	addi	r6,r16,8
  808f78:	003d6606 	br	808514 <___vfiprintf_internal_r+0x3c4>
  808f7c:	db400017 	ldw	r13,0(sp)
  808f80:	003eb906 	br	808a68 <___vfiprintf_internal_r+0x918>
  808f84:	9027883a 	mov	r19,r18
  808f88:	b809883a 	mov	r4,r23
  808f8c:	e00b883a 	mov	r5,fp
  808f90:	01800284 	movi	r6,10
  808f94:	000f883a 	mov	r7,zero
  808f98:	db800315 	stw	r14,12(sp)
  808f9c:	da000215 	stw	r8,8(sp)
  808fa0:	db400015 	stw	r13,0(sp)
  808fa4:	080a9d40 	call	80a9d4 <__umoddi3>
  808fa8:	10800c04 	addi	r2,r2,48
  808fac:	b809883a 	mov	r4,r23
  808fb0:	e00b883a 	mov	r5,fp
  808fb4:	98bfffc5 	stb	r2,-1(r19)
  808fb8:	01800284 	movi	r6,10
  808fbc:	000f883a 	mov	r7,zero
  808fc0:	080a3b40 	call	80a3b4 <__udivdi3>
  808fc4:	e009883a 	mov	r4,fp
  808fc8:	b80b883a 	mov	r5,r23
  808fcc:	db400017 	ldw	r13,0(sp)
  808fd0:	da000217 	ldw	r8,8(sp)
  808fd4:	db800317 	ldw	r14,12(sp)
  808fd8:	9cffffc4 	addi	r19,r19,-1
  808fdc:	102f883a 	mov	r23,r2
  808fe0:	1839883a 	mov	fp,r3
  808fe4:	203fe81e 	bne	r4,zero,808f88 <___vfiprintf_internal_r+0xe38>
  808fe8:	294002a8 	cmpgeui	r5,r5,10
  808fec:	283fe61e 	bne	r5,zero,808f88 <___vfiprintf_internal_r+0xe38>
  808ff0:	94f9c83a 	sub	fp,r18,r19
  808ff4:	003eb906 	br	808adc <___vfiprintf_internal_r+0x98c>
  808ff8:	19400450 	cmplti	r5,r3,17
  808ffc:	01c02074 	movhi	r7,129
  809000:	2801061e 	bne	r5,zero,80941c <___vfiprintf_internal_r+0x12cc>
  809004:	39c22a04 	addi	r7,r7,2216
  809008:	03c00404 	movi	r15,16
  80900c:	00000706 	br	80902c <___vfiprintf_internal_r+0xedc>
  809010:	27c00084 	addi	ra,r4,2
  809014:	84000204 	addi	r16,r16,8
  809018:	3009883a 	mov	r4,r6
  80901c:	18fffc04 	addi	r3,r3,-16
  809020:	19400448 	cmpgei	r5,r3,17
  809024:	28002026 	beq	r5,zero,8090a8 <___vfiprintf_internal_r+0xf58>
  809028:	21800044 	addi	r6,r4,1
  80902c:	10800404 	addi	r2,r2,16
  809030:	81c00015 	stw	r7,0(r16)
  809034:	83c00115 	stw	r15,4(r16)
  809038:	d8800c15 	stw	r2,48(sp)
  80903c:	d9800b15 	stw	r6,44(sp)
  809040:	31400208 	cmpgei	r5,r6,8
  809044:	283ff226 	beq	r5,zero,809010 <___vfiprintf_internal_r+0xec0>
  809048:	d9800a04 	addi	r6,sp,40
  80904c:	a80b883a 	mov	r5,r21
  809050:	b009883a 	mov	r4,r22
  809054:	10001f26 	beq	r2,zero,8090d4 <___vfiprintf_internal_r+0xf84>
  809058:	d9c00815 	stw	r7,32(sp)
  80905c:	d8c00715 	stw	r3,28(sp)
  809060:	da000615 	stw	r8,24(sp)
  809064:	db400315 	stw	r13,12(sp)
  809068:	db800215 	stw	r14,8(sp)
  80906c:	08080440 	call	808044 <__sprint_r.part.0>
  809070:	103d4c1e 	bne	r2,zero,8085a4 <___vfiprintf_internal_r+0x454>
  809074:	d8c00717 	ldw	r3,28(sp)
  809078:	d9000b17 	ldw	r4,44(sp)
  80907c:	d8800c17 	ldw	r2,48(sp)
  809080:	18fffc04 	addi	r3,r3,-16
  809084:	19400448 	cmpgei	r5,r3,17
  809088:	d9c00817 	ldw	r7,32(sp)
  80908c:	da000617 	ldw	r8,24(sp)
  809090:	db400317 	ldw	r13,12(sp)
  809094:	db800217 	ldw	r14,8(sp)
  809098:	9021883a 	mov	r16,r18
  80909c:	27c00044 	addi	ra,r4,1
  8090a0:	03c00404 	movi	r15,16
  8090a4:	283fe01e 	bne	r5,zero,809028 <___vfiprintf_internal_r+0xed8>
  8090a8:	10c5883a 	add	r2,r2,r3
  8090ac:	80c00115 	stw	r3,4(r16)
  8090b0:	81c00015 	stw	r7,0(r16)
  8090b4:	d8800c15 	stw	r2,48(sp)
  8090b8:	dfc00b15 	stw	ra,44(sp)
  8090bc:	f8c00208 	cmpgei	r3,ra,8
  8090c0:	18002d1e 	bne	r3,zero,809178 <___vfiprintf_internal_r+0x1028>
  8090c4:	84000204 	addi	r16,r16,8
  8090c8:	f9400044 	addi	r5,ra,1
  8090cc:	f809883a 	mov	r4,ra
  8090d0:	003ce706 	br	808470 <___vfiprintf_internal_r+0x320>
  8090d4:	0009883a 	mov	r4,zero
  8090d8:	07c00044 	movi	ra,1
  8090dc:	9021883a 	mov	r16,r18
  8090e0:	003fce06 	br	80901c <___vfiprintf_internal_r+0xecc>
  8090e4:	8dc0010e 	bge	r17,r23,8090ec <___vfiprintf_internal_r+0xf9c>
  8090e8:	b823883a 	mov	r17,r23
  8090ec:	d8800117 	ldw	r2,4(sp)
  8090f0:	1445883a 	add	r2,r2,r17
  8090f4:	d8800115 	stw	r2,4(sp)
  8090f8:	003d2406 	br	80858c <___vfiprintf_internal_r+0x43c>
  8090fc:	10007626 	beq	r2,zero,8092d8 <___vfiprintf_internal_r+0x1188>
  809100:	d9800a04 	addi	r6,sp,40
  809104:	a80b883a 	mov	r5,r21
  809108:	b009883a 	mov	r4,r22
  80910c:	08080440 	call	808044 <__sprint_r.part.0>
  809110:	103d241e 	bne	r2,zero,8085a4 <___vfiprintf_internal_r+0x454>
  809114:	d9400b17 	ldw	r5,44(sp)
  809118:	d8800c17 	ldw	r2,48(sp)
  80911c:	d9801904 	addi	r6,sp,100
  809120:	29400044 	addi	r5,r5,1
  809124:	9021883a 	mov	r16,r18
  809128:	003cfe06 	br	808524 <___vfiprintf_internal_r+0x3d4>
  80912c:	d8000b15 	stw	zero,44(sp)
  809130:	9021883a 	mov	r16,r18
  809134:	003d7606 	br	808710 <___vfiprintf_internal_r+0x5c0>
  809138:	4000ac1e 	bne	r8,zero,8093ec <___vfiprintf_internal_r+0x129c>
  80913c:	0011883a 	mov	r8,zero
  809140:	0039883a 	mov	fp,zero
  809144:	9027883a 	mov	r19,r18
  809148:	003e6406 	br	808adc <___vfiprintf_internal_r+0x98c>
  80914c:	7000411e 	bne	r14,zero,809254 <___vfiprintf_internal_r+0x1104>
  809150:	0009883a 	mov	r4,zero
  809154:	d9801904 	addi	r6,sp,100
  809158:	01400044 	movi	r5,1
  80915c:	9021883a 	mov	r16,r18
  809160:	003cec06 	br	808514 <___vfiprintf_internal_r+0x3c4>
  809164:	d9801904 	addi	r6,sp,100
  809168:	01400044 	movi	r5,1
  80916c:	0009883a 	mov	r4,zero
  809170:	9021883a 	mov	r16,r18
  809174:	003ce706 	br	808514 <___vfiprintf_internal_r+0x3c4>
  809178:	10004a26 	beq	r2,zero,8092a4 <___vfiprintf_internal_r+0x1154>
  80917c:	d9800a04 	addi	r6,sp,40
  809180:	a80b883a 	mov	r5,r21
  809184:	b009883a 	mov	r4,r22
  809188:	da000615 	stw	r8,24(sp)
  80918c:	db400315 	stw	r13,12(sp)
  809190:	db800215 	stw	r14,8(sp)
  809194:	08080440 	call	808044 <__sprint_r.part.0>
  809198:	103d021e 	bne	r2,zero,8085a4 <___vfiprintf_internal_r+0x454>
  80919c:	d9000b17 	ldw	r4,44(sp)
  8091a0:	d8800c17 	ldw	r2,48(sp)
  8091a4:	da000617 	ldw	r8,24(sp)
  8091a8:	db400317 	ldw	r13,12(sp)
  8091ac:	db800217 	ldw	r14,8(sp)
  8091b0:	9021883a 	mov	r16,r18
  8091b4:	21400044 	addi	r5,r4,1
  8091b8:	003cad06 	br	808470 <___vfiprintf_internal_r+0x320>
  8091bc:	9027883a 	mov	r19,r18
  8091c0:	003e4606 	br	808adc <___vfiprintf_internal_r+0x98c>
  8091c4:	71400044 	addi	r5,r14,1
  8091c8:	69800204 	addi	r6,r13,8
  8091cc:	7009883a 	mov	r4,r14
  8091d0:	6821883a 	mov	r16,r13
  8091d4:	003cd106 	br	80851c <___vfiprintf_internal_r+0x3cc>
  8091d8:	25c00017 	ldw	r23,0(r4)
  8091dc:	d8c00415 	stw	r3,16(sp)
  8091e0:	b839d7fa 	srai	fp,r23,31
  8091e4:	e005883a 	mov	r2,fp
  8091e8:	003db406 	br	8088bc <___vfiprintf_internal_r+0x76c>
  8091ec:	00c00c04 	movi	r3,48
  8091f0:	d88009c5 	stb	r2,39(sp)
  8091f4:	d8c00985 	stb	r3,38(sp)
  8091f8:	6b400094 	ori	r13,r13,2
  8091fc:	00800084 	movi	r2,2
  809200:	003d2506 	br	808698 <___vfiprintf_internal_r+0x548>
  809204:	25c00017 	ldw	r23,0(r4)
  809208:	0039883a 	mov	fp,zero
  80920c:	d8c00415 	stw	r3,16(sp)
  809210:	0005883a 	mov	r2,zero
  809214:	003d2006 	br	808698 <___vfiprintf_internal_r+0x548>
  809218:	d9400117 	ldw	r5,4(sp)
  80921c:	d9000415 	stw	r4,16(sp)
  809220:	2805d7fa 	srai	r2,r5,31
  809224:	19400015 	stw	r5,0(r3)
  809228:	18800115 	stw	r2,4(r3)
  80922c:	003bf106 	br	8081f4 <___vfiprintf_internal_r+0xa4>
  809230:	2dc00017 	ldw	r23,0(r5)
  809234:	0039883a 	mov	fp,zero
  809238:	d9000415 	stw	r4,16(sp)
  80923c:	003dc106 	br	808944 <___vfiprintf_internal_r+0x7f4>
  809240:	25c00017 	ldw	r23,0(r4)
  809244:	0039883a 	mov	fp,zero
  809248:	d8c00415 	stw	r3,16(sp)
  80924c:	00800044 	movi	r2,1
  809250:	003d1106 	br	808698 <___vfiprintf_internal_r+0x548>
  809254:	d8800984 	addi	r2,sp,38
  809258:	d8801715 	stw	r2,92(sp)
  80925c:	00800084 	movi	r2,2
  809260:	d8801815 	stw	r2,96(sp)
  809264:	dc001904 	addi	r16,sp,100
  809268:	01000044 	movi	r4,1
  80926c:	003f4006 	br	808f70 <___vfiprintf_internal_r+0xe20>
  809270:	0463c83a 	sub	r17,zero,r17
  809274:	d8c00415 	stw	r3,16(sp)
  809278:	003e3806 	br	808b5c <___vfiprintf_internal_r+0xa0c>
  80927c:	9809883a 	mov	r4,r19
  809280:	d8c00215 	stw	r3,8(sp)
  809284:	db400015 	stw	r13,0(sp)
  809288:	08017380 	call	801738 <strlen>
  80928c:	d8c00217 	ldw	r3,8(sp)
  809290:	db400017 	ldw	r13,0(sp)
  809294:	1039883a 	mov	fp,r2
  809298:	102f883a 	mov	r23,r2
  80929c:	d8c00415 	stw	r3,16(sp)
  8092a0:	003c6406 	br	808434 <___vfiprintf_internal_r+0x2e4>
  8092a4:	d8c00947 	ldb	r3,37(sp)
  8092a8:	18004326 	beq	r3,zero,8093b8 <___vfiprintf_internal_r+0x1268>
  8092ac:	d8800944 	addi	r2,sp,37
  8092b0:	d8801715 	stw	r2,92(sp)
  8092b4:	00800044 	movi	r2,1
  8092b8:	d8801815 	stw	r2,96(sp)
  8092bc:	d9801904 	addi	r6,sp,100
  8092c0:	01400044 	movi	r5,1
  8092c4:	003c7606 	br	8084a0 <___vfiprintf_internal_r+0x350>
  8092c8:	d8800117 	ldw	r2,4(sp)
  8092cc:	18800015 	stw	r2,0(r3)
  8092d0:	d9000415 	stw	r4,16(sp)
  8092d4:	003bc706 	br	8081f4 <___vfiprintf_internal_r+0xa4>
  8092d8:	00c00044 	movi	r3,1
  8092dc:	e005883a 	mov	r2,fp
  8092e0:	dcc01715 	stw	r19,92(sp)
  8092e4:	df001815 	stw	fp,96(sp)
  8092e8:	df000c15 	stw	fp,48(sp)
  8092ec:	d8c00b15 	stw	r3,44(sp)
  8092f0:	d9801904 	addi	r6,sp,100
  8092f4:	003c9a06 	br	808560 <___vfiprintf_internal_r+0x410>
  8092f8:	a0800043 	ldbu	r2,1(r20)
  8092fc:	6b400814 	ori	r13,r13,32
  809300:	a5000044 	addi	r20,r20,1
  809304:	10803fcc 	andi	r2,r2,255
  809308:	1080201c 	xori	r2,r2,128
  80930c:	10bfe004 	addi	r2,r2,-128
  809310:	003bd006 	br	808254 <___vfiprintf_internal_r+0x104>
  809314:	408001f0 	cmpltui	r2,r8,7
  809318:	4039883a 	mov	fp,r8
  80931c:	10002426 	beq	r2,zero,8093b0 <___vfiprintf_internal_r+0x1260>
  809320:	04c02074 	movhi	r19,129
  809324:	e02f883a 	mov	r23,fp
  809328:	d8c00415 	stw	r3,16(sp)
  80932c:	9cc1a904 	addi	r19,r19,1700
  809330:	003c4006 	br	808434 <___vfiprintf_internal_r+0x2e4>
  809334:	d8c00417 	ldw	r3,16(sp)
  809338:	0039883a 	mov	fp,zero
  80933c:	d9000415 	stw	r4,16(sp)
  809340:	1dc00017 	ldw	r23,0(r3)
  809344:	003d7f06 	br	808944 <___vfiprintf_internal_r+0x7f4>
  809348:	d8800417 	ldw	r2,16(sp)
  80934c:	0039883a 	mov	fp,zero
  809350:	d8c00415 	stw	r3,16(sp)
  809354:	15c00017 	ldw	r23,0(r2)
  809358:	0005883a 	mov	r2,zero
  80935c:	003cce06 	br	808698 <___vfiprintf_internal_r+0x548>
  809360:	d8800417 	ldw	r2,16(sp)
  809364:	d8c00415 	stw	r3,16(sp)
  809368:	15c00017 	ldw	r23,0(r2)
  80936c:	b839d7fa 	srai	fp,r23,31
  809370:	e005883a 	mov	r2,fp
  809374:	003d5106 	br	8088bc <___vfiprintf_internal_r+0x76c>
  809378:	d8800417 	ldw	r2,16(sp)
  80937c:	0039883a 	mov	fp,zero
  809380:	d8c00415 	stw	r3,16(sp)
  809384:	15c00017 	ldw	r23,0(r2)
  809388:	00800044 	movi	r2,1
  80938c:	003cc206 	br	808698 <___vfiprintf_internal_r+0x548>
  809390:	3009883a 	mov	r4,r6
  809394:	39c22604 	addi	r7,r7,2200
  809398:	003ead06 	br	808e50 <___vfiprintf_internal_r+0xd00>
  80939c:	d9801904 	addi	r6,sp,100
  8093a0:	01400044 	movi	r5,1
  8093a4:	0009883a 	mov	r4,zero
  8093a8:	9021883a 	mov	r16,r18
  8093ac:	003c5b06 	br	80851c <___vfiprintf_internal_r+0x3cc>
  8093b0:	07000184 	movi	fp,6
  8093b4:	003fda06 	br	809320 <___vfiprintf_internal_r+0x11d0>
  8093b8:	703ee51e 	bne	r14,zero,808f50 <___vfiprintf_internal_r+0xe00>
  8093bc:	0009883a 	mov	r4,zero
  8093c0:	d9801904 	addi	r6,sp,100
  8093c4:	01400044 	movi	r5,1
  8093c8:	9021883a 	mov	r16,r18
  8093cc:	003c5306 	br	80851c <___vfiprintf_internal_r+0x3cc>
  8093d0:	d9800945 	stb	r6,37(sp)
  8093d4:	003c1106 	br	80841c <___vfiprintf_internal_r+0x2cc>
  8093d8:	d9800a04 	addi	r6,sp,40
  8093dc:	a80b883a 	mov	r5,r21
  8093e0:	b009883a 	mov	r4,r22
  8093e4:	08080440 	call	808044 <__sprint_r.part.0>
  8093e8:	003c6e06 	br	8085a4 <___vfiprintf_internal_r+0x454>
  8093ec:	db400017 	ldw	r13,0(sp)
  8093f0:	003d3f06 	br	8088f0 <___vfiprintf_internal_r+0x7a0>
  8093f4:	402f883a 	mov	r23,r8
  8093f8:	d8c00415 	stw	r3,16(sp)
  8093fc:	4039883a 	mov	fp,r8
  809400:	003c0c06 	br	808434 <___vfiprintf_internal_r+0x2e4>
  809404:	d9800945 	stb	r6,37(sp)
  809408:	003d2406 	br	80889c <___vfiprintf_internal_r+0x74c>
  80940c:	d9800945 	stb	r6,37(sp)
  809410:	003d4206 	br	80891c <___vfiprintf_internal_r+0x7cc>
  809414:	d9800945 	stb	r6,37(sp)
  809418:	003d7a06 	br	808a04 <___vfiprintf_internal_r+0x8b4>
  80941c:	303f883a 	mov	ra,r6
  809420:	39c22a04 	addi	r7,r7,2216
  809424:	003f2006 	br	8090a8 <___vfiprintf_internal_r+0xf58>
  809428:	d9800945 	stb	r6,37(sp)
  80942c:	003df806 	br	808c10 <___vfiprintf_internal_r+0xac0>
  809430:	d9800945 	stb	r6,37(sp)
  809434:	003e0806 	br	808c58 <___vfiprintf_internal_r+0xb08>
  809438:	21400044 	addi	r5,r4,1
  80943c:	39c22a04 	addi	r7,r7,2216
  809440:	003d0306 	br	808850 <___vfiprintf_internal_r+0x700>
  809444:	00bfffc4 	movi	r2,-1
  809448:	d8800115 	stw	r2,4(sp)
  80944c:	003c5806 	br	8085b0 <___vfiprintf_internal_r+0x460>
  809450:	01c02074 	movhi	r7,129
  809454:	301b883a 	mov	r13,r6
  809458:	281d883a 	mov	r14,r5
  80945c:	39c22604 	addi	r7,r7,2200
  809460:	003e3e06 	br	808d5c <___vfiprintf_internal_r+0xc0c>
  809464:	d8800417 	ldw	r2,16(sp)
  809468:	12000017 	ldw	r8,0(r2)
  80946c:	11000104 	addi	r4,r2,4
  809470:	4000010e 	bge	r8,zero,809478 <___vfiprintf_internal_r+0x1328>
  809474:	023fffc4 	movi	r8,-1
  809478:	a0800043 	ldbu	r2,1(r20)
  80947c:	d9000415 	stw	r4,16(sp)
  809480:	1829883a 	mov	r20,r3
  809484:	10803fcc 	andi	r2,r2,255
  809488:	1080201c 	xori	r2,r2,128
  80948c:	10bfe004 	addi	r2,r2,-128
  809490:	003b7006 	br	808254 <___vfiprintf_internal_r+0x104>

00809494 <__vfiprintf_internal>:
  809494:	00c02074 	movhi	r3,129
  809498:	2005883a 	mov	r2,r4
  80949c:	190a2c17 	ldw	r4,10416(r3)
  8094a0:	300f883a 	mov	r7,r6
  8094a4:	280d883a 	mov	r6,r5
  8094a8:	100b883a 	mov	r5,r2
  8094ac:	08081501 	jmpi	808150 <___vfiprintf_internal_r>

008094b0 <__sbprintf>:
  8094b0:	2880030b 	ldhu	r2,12(r5)
  8094b4:	2b001917 	ldw	r12,100(r5)
  8094b8:	2ac0038b 	ldhu	r11,14(r5)
  8094bc:	2a800717 	ldw	r10,28(r5)
  8094c0:	2a400917 	ldw	r9,36(r5)
  8094c4:	defee204 	addi	sp,sp,-1144
  8094c8:	da001a04 	addi	r8,sp,104
  8094cc:	00c10004 	movi	r3,1024
  8094d0:	dc011a15 	stw	r16,1128(sp)
  8094d4:	10bfff4c 	andi	r2,r2,65533
  8094d8:	2821883a 	mov	r16,r5
  8094dc:	d80b883a 	mov	r5,sp
  8094e0:	dc811c15 	stw	r18,1136(sp)
  8094e4:	dc411b15 	stw	r17,1132(sp)
  8094e8:	dfc11d15 	stw	ra,1140(sp)
  8094ec:	2025883a 	mov	r18,r4
  8094f0:	d880030d 	sth	r2,12(sp)
  8094f4:	db001915 	stw	r12,100(sp)
  8094f8:	dac0038d 	sth	r11,14(sp)
  8094fc:	da800715 	stw	r10,28(sp)
  809500:	da400915 	stw	r9,36(sp)
  809504:	da000015 	stw	r8,0(sp)
  809508:	da000415 	stw	r8,16(sp)
  80950c:	d8c00215 	stw	r3,8(sp)
  809510:	d8c00515 	stw	r3,20(sp)
  809514:	d8000615 	stw	zero,24(sp)
  809518:	08081500 	call	808150 <___vfiprintf_internal_r>
  80951c:	1023883a 	mov	r17,r2
  809520:	10000d0e 	bge	r2,zero,809558 <__sbprintf+0xa8>
  809524:	d880030b 	ldhu	r2,12(sp)
  809528:	1080100c 	andi	r2,r2,64
  80952c:	10000326 	beq	r2,zero,80953c <__sbprintf+0x8c>
  809530:	8080030b 	ldhu	r2,12(r16)
  809534:	10801014 	ori	r2,r2,64
  809538:	8080030d 	sth	r2,12(r16)
  80953c:	8805883a 	mov	r2,r17
  809540:	dfc11d17 	ldw	ra,1140(sp)
  809544:	dc811c17 	ldw	r18,1136(sp)
  809548:	dc411b17 	ldw	r17,1132(sp)
  80954c:	dc011a17 	ldw	r16,1128(sp)
  809550:	dec11e04 	addi	sp,sp,1144
  809554:	f800283a 	ret
  809558:	d80b883a 	mov	r5,sp
  80955c:	9009883a 	mov	r4,r18
  809560:	08059000 	call	805900 <_fflush_r>
  809564:	103fef26 	beq	r2,zero,809524 <__sbprintf+0x74>
  809568:	047fffc4 	movi	r17,-1
  80956c:	003fed06 	br	809524 <__sbprintf+0x74>

00809570 <__assert_func>:
  809570:	00802074 	movhi	r2,129
  809574:	120a2c17 	ldw	r8,10416(r2)
  809578:	defffc04 	addi	sp,sp,-16
  80957c:	3807883a 	mov	r3,r7
  809580:	3005883a 	mov	r2,r6
  809584:	dfc00315 	stw	ra,12(sp)
  809588:	42400317 	ldw	r9,12(r8)
  80958c:	200f883a 	mov	r7,r4
  809590:	2811883a 	mov	r8,r5
  809594:	180d883a 	mov	r6,r3
  809598:	10000a26 	beq	r2,zero,8095c4 <__assert_func+0x54>
  80959c:	00c02074 	movhi	r3,129
  8095a0:	18c22e04 	addi	r3,r3,2232
  8095a4:	01402074 	movhi	r5,129
  8095a8:	29423204 	addi	r5,r5,2248
  8095ac:	4809883a 	mov	r4,r9
  8095b0:	d8c00115 	stw	r3,4(sp)
  8095b4:	da000015 	stw	r8,0(sp)
  8095b8:	d8800215 	stw	r2,8(sp)
  8095bc:	08096cc0 	call	8096cc <fiprintf>
  8095c0:	0809e4c0 	call	809e4c <abort>
  8095c4:	00c02074 	movhi	r3,129
  8095c8:	18c23104 	addi	r3,r3,2244
  8095cc:	1805883a 	mov	r2,r3
  8095d0:	003ff406 	br	8095a4 <__assert_func+0x34>

008095d4 <__assert>:
  8095d4:	deffff04 	addi	sp,sp,-4
  8095d8:	300f883a 	mov	r7,r6
  8095dc:	000d883a 	mov	r6,zero
  8095e0:	dfc00015 	stw	ra,0(sp)
  8095e4:	08095700 	call	809570 <__assert_func>

008095e8 <_calloc_r>:
  8095e8:	defffe04 	addi	sp,sp,-8
  8095ec:	dc000015 	stw	r16,0(sp)
  8095f0:	2021883a 	mov	r16,r4
  8095f4:	2809883a 	mov	r4,r5
  8095f8:	300b883a 	mov	r5,r6
  8095fc:	dfc00115 	stw	ra,4(sp)
  809600:	080b14c0 	call	80b14c <__mulsi3>
  809604:	8009883a 	mov	r4,r16
  809608:	100b883a 	mov	r5,r2
  80960c:	0800bf40 	call	800bf4 <_malloc_r>
  809610:	1009883a 	mov	r4,r2
  809614:	10000c26 	beq	r2,zero,809648 <_calloc_r+0x60>
  809618:	11bfff17 	ldw	r6,-4(r2)
  80961c:	00bfff04 	movi	r2,-4
  809620:	308c703a 	and	r6,r6,r2
  809624:	31bfff04 	addi	r6,r6,-4
  809628:	30800968 	cmpgeui	r2,r6,37
  80962c:	1000151e 	bne	r2,zero,809684 <_calloc_r+0x9c>
  809630:	30800530 	cmpltui	r2,r6,20
  809634:	10000926 	beq	r2,zero,80965c <_calloc_r+0x74>
  809638:	2005883a 	mov	r2,r4
  80963c:	10000015 	stw	zero,0(r2)
  809640:	10000115 	stw	zero,4(r2)
  809644:	10000215 	stw	zero,8(r2)
  809648:	2005883a 	mov	r2,r4
  80964c:	dfc00117 	ldw	ra,4(sp)
  809650:	dc000017 	ldw	r16,0(sp)
  809654:	dec00204 	addi	sp,sp,8
  809658:	f800283a 	ret
  80965c:	20000015 	stw	zero,0(r4)
  809660:	20000115 	stw	zero,4(r4)
  809664:	30800728 	cmpgeui	r2,r6,28
  809668:	10000a26 	beq	r2,zero,809694 <_calloc_r+0xac>
  80966c:	20000215 	stw	zero,8(r4)
  809670:	20000315 	stw	zero,12(r4)
  809674:	31800920 	cmpeqi	r6,r6,36
  809678:	3000081e 	bne	r6,zero,80969c <_calloc_r+0xb4>
  80967c:	20800404 	addi	r2,r4,16
  809680:	003fee06 	br	80963c <_calloc_r+0x54>
  809684:	000b883a 	mov	r5,zero
  809688:	08013d40 	call	8013d4 <memset>
  80968c:	1009883a 	mov	r4,r2
  809690:	003fed06 	br	809648 <_calloc_r+0x60>
  809694:	20800204 	addi	r2,r4,8
  809698:	003fe806 	br	80963c <_calloc_r+0x54>
  80969c:	20000415 	stw	zero,16(r4)
  8096a0:	20800604 	addi	r2,r4,24
  8096a4:	20000515 	stw	zero,20(r4)
  8096a8:	003fe406 	br	80963c <_calloc_r+0x54>

008096ac <_fiprintf_r>:
  8096ac:	defffe04 	addi	sp,sp,-8
  8096b0:	dfc00015 	stw	ra,0(sp)
  8096b4:	d9c00115 	stw	r7,4(sp)
  8096b8:	d9c00104 	addi	r7,sp,4
  8096bc:	0809bb80 	call	809bb8 <_vfiprintf_r>
  8096c0:	dfc00017 	ldw	ra,0(sp)
  8096c4:	dec00204 	addi	sp,sp,8
  8096c8:	f800283a 	ret

008096cc <fiprintf>:
  8096cc:	defffd04 	addi	sp,sp,-12
  8096d0:	2005883a 	mov	r2,r4
  8096d4:	dfc00015 	stw	ra,0(sp)
  8096d8:	d9800115 	stw	r6,4(sp)
  8096dc:	d9c00215 	stw	r7,8(sp)
  8096e0:	00c02074 	movhi	r3,129
  8096e4:	190a2c17 	ldw	r4,10416(r3)
  8096e8:	280d883a 	mov	r6,r5
  8096ec:	d9c00104 	addi	r7,sp,4
  8096f0:	100b883a 	mov	r5,r2
  8096f4:	0809bb80 	call	809bb8 <_vfiprintf_r>
  8096f8:	dfc00017 	ldw	ra,0(sp)
  8096fc:	dec00304 	addi	sp,sp,12
  809700:	f800283a 	ret

00809704 <__fputwc>:
  809704:	defff904 	addi	sp,sp,-28
  809708:	dcc00415 	stw	r19,16(sp)
  80970c:	dc800315 	stw	r18,12(sp)
  809710:	dc000115 	stw	r16,4(sp)
  809714:	dfc00615 	stw	ra,24(sp)
  809718:	dd000515 	stw	r20,20(sp)
  80971c:	dc400215 	stw	r17,8(sp)
  809720:	2025883a 	mov	r18,r4
  809724:	2827883a 	mov	r19,r5
  809728:	3021883a 	mov	r16,r6
  80972c:	0809a300 	call	809a30 <__locale_mb_cur_max>
  809730:	10800058 	cmpnei	r2,r2,1
  809734:	1000071e 	bne	r2,zero,809754 <__fputwc+0x50>
  809738:	98bfffc4 	addi	r2,r19,-1
  80973c:	10803fe8 	cmpgeui	r2,r2,255
  809740:	1000041e 	bne	r2,zero,809754 <__fputwc+0x50>
  809744:	980b883a 	mov	r5,r19
  809748:	dcc000c5 	stb	r19,3(sp)
  80974c:	05000044 	movi	r20,1
  809750:	00000a06 	br	80977c <__fputwc+0x78>
  809754:	81c01704 	addi	r7,r16,92
  809758:	980d883a 	mov	r6,r19
  80975c:	d94000c4 	addi	r5,sp,3
  809760:	9009883a 	mov	r4,r18
  809764:	0809d1c0 	call	809d1c <_wcrtomb_r>
  809768:	1029883a 	mov	r20,r2
  80976c:	10bfffd8 	cmpnei	r2,r2,-1
  809770:	10003926 	beq	r2,zero,809858 <__fputwc+0x154>
  809774:	a0001f26 	beq	r20,zero,8097f4 <__fputwc+0xf0>
  809778:	d94000c3 	ldbu	r5,3(sp)
  80977c:	0023883a 	mov	r17,zero
  809780:	00000a06 	br	8097ac <__fputwc+0xa8>
  809784:	80800017 	ldw	r2,0(r16)
  809788:	11400005 	stb	r5,0(r2)
  80978c:	80c00017 	ldw	r3,0(r16)
  809790:	18c00044 	addi	r3,r3,1
  809794:	80c00015 	stw	r3,0(r16)
  809798:	8c400044 	addi	r17,r17,1
  80979c:	d88000c4 	addi	r2,sp,3
  8097a0:	1447883a 	add	r3,r2,r17
  8097a4:	8d00132e 	bgeu	r17,r20,8097f4 <__fputwc+0xf0>
  8097a8:	19400003 	ldbu	r5,0(r3)
  8097ac:	80c00217 	ldw	r3,8(r16)
  8097b0:	18ffffc4 	addi	r3,r3,-1
  8097b4:	80c00215 	stw	r3,8(r16)
  8097b8:	183ff20e 	bge	r3,zero,809784 <__fputwc+0x80>
  8097bc:	80800617 	ldw	r2,24(r16)
  8097c0:	18801616 	blt	r3,r2,80981c <__fputwc+0x118>
  8097c4:	80800017 	ldw	r2,0(r16)
  8097c8:	11400005 	stb	r5,0(r2)
  8097cc:	80800017 	ldw	r2,0(r16)
  8097d0:	10c00003 	ldbu	r3,0(r2)
  8097d4:	10800044 	addi	r2,r2,1
  8097d8:	18c002a0 	cmpeqi	r3,r3,10
  8097dc:	1800171e 	bne	r3,zero,80983c <__fputwc+0x138>
  8097e0:	80800015 	stw	r2,0(r16)
  8097e4:	8c400044 	addi	r17,r17,1
  8097e8:	d88000c4 	addi	r2,sp,3
  8097ec:	1447883a 	add	r3,r2,r17
  8097f0:	8d3fed36 	bltu	r17,r20,8097a8 <__fputwc+0xa4>
  8097f4:	9829883a 	mov	r20,r19
  8097f8:	a005883a 	mov	r2,r20
  8097fc:	dfc00617 	ldw	ra,24(sp)
  809800:	dd000517 	ldw	r20,20(sp)
  809804:	dcc00417 	ldw	r19,16(sp)
  809808:	dc800317 	ldw	r18,12(sp)
  80980c:	dc400217 	ldw	r17,8(sp)
  809810:	dc000117 	ldw	r16,4(sp)
  809814:	dec00704 	addi	sp,sp,28
  809818:	f800283a 	ret
  80981c:	29403fcc 	andi	r5,r5,255
  809820:	800d883a 	mov	r6,r16
  809824:	9009883a 	mov	r4,r18
  809828:	0809bbc0 	call	809bbc <__swbuf_r>
  80982c:	10bfffe0 	cmpeqi	r2,r2,-1
  809830:	103fd926 	beq	r2,zero,809798 <__fputwc+0x94>
  809834:	053fffc4 	movi	r20,-1
  809838:	003fef06 	br	8097f8 <__fputwc+0xf4>
  80983c:	800d883a 	mov	r6,r16
  809840:	01400284 	movi	r5,10
  809844:	9009883a 	mov	r4,r18
  809848:	0809bbc0 	call	809bbc <__swbuf_r>
  80984c:	10bfffe0 	cmpeqi	r2,r2,-1
  809850:	103fd126 	beq	r2,zero,809798 <__fputwc+0x94>
  809854:	003ff706 	br	809834 <__fputwc+0x130>
  809858:	8080030b 	ldhu	r2,12(r16)
  80985c:	10801014 	ori	r2,r2,64
  809860:	8080030d 	sth	r2,12(r16)
  809864:	003fe406 	br	8097f8 <__fputwc+0xf4>

00809868 <_fputwc_r>:
  809868:	3080030b 	ldhu	r2,12(r6)
  80986c:	10c8000c 	andi	r3,r2,8192
  809870:	1800051e 	bne	r3,zero,809888 <_fputwc_r+0x20>
  809874:	30c01917 	ldw	r3,100(r6)
  809878:	10880014 	ori	r2,r2,8192
  80987c:	3080030d 	sth	r2,12(r6)
  809880:	18880014 	ori	r2,r3,8192
  809884:	30801915 	stw	r2,100(r6)
  809888:	08097041 	jmpi	809704 <__fputwc>

0080988c <fputwc>:
  80988c:	defffc04 	addi	sp,sp,-16
  809890:	00802074 	movhi	r2,129
  809894:	dc000215 	stw	r16,8(sp)
  809898:	140a2c17 	ldw	r16,10416(r2)
  80989c:	dfc00315 	stw	ra,12(sp)
  8098a0:	280d883a 	mov	r6,r5
  8098a4:	200b883a 	mov	r5,r4
  8098a8:	80000226 	beq	r16,zero,8098b4 <fputwc+0x28>
  8098ac:	80800e17 	ldw	r2,56(r16)
  8098b0:	10000d26 	beq	r2,zero,8098e8 <fputwc+0x5c>
  8098b4:	3080030b 	ldhu	r2,12(r6)
  8098b8:	10c8000c 	andi	r3,r2,8192
  8098bc:	1800051e 	bne	r3,zero,8098d4 <fputwc+0x48>
  8098c0:	30c01917 	ldw	r3,100(r6)
  8098c4:	10880014 	ori	r2,r2,8192
  8098c8:	3080030d 	sth	r2,12(r6)
  8098cc:	18880014 	ori	r2,r3,8192
  8098d0:	30801915 	stw	r2,100(r6)
  8098d4:	8009883a 	mov	r4,r16
  8098d8:	dfc00317 	ldw	ra,12(sp)
  8098dc:	dc000217 	ldw	r16,8(sp)
  8098e0:	dec00404 	addi	sp,sp,16
  8098e4:	08097041 	jmpi	809704 <__fputwc>
  8098e8:	d9000015 	stw	r4,0(sp)
  8098ec:	8009883a 	mov	r4,r16
  8098f0:	d9800115 	stw	r6,4(sp)
  8098f4:	08009680 	call	800968 <__sinit>
  8098f8:	d9800117 	ldw	r6,4(sp)
  8098fc:	d9400017 	ldw	r5,0(sp)
  809900:	003fec06 	br	8098b4 <fputwc+0x28>

00809904 <_fstat_r>:
  809904:	2807883a 	mov	r3,r5
  809908:	defffe04 	addi	sp,sp,-8
  80990c:	dc000015 	stw	r16,0(sp)
  809910:	00802074 	movhi	r2,129
  809914:	300b883a 	mov	r5,r6
  809918:	2021883a 	mov	r16,r4
  80991c:	1809883a 	mov	r4,r3
  809920:	dfc00115 	stw	ra,4(sp)
  809924:	10114515 	stw	zero,17684(r2)
  809928:	080da6c0 	call	80da6c <fstat>
  80992c:	10ffffd8 	cmpnei	r3,r2,-1
  809930:	18000426 	beq	r3,zero,809944 <_fstat_r+0x40>
  809934:	dfc00117 	ldw	ra,4(sp)
  809938:	dc000017 	ldw	r16,0(sp)
  80993c:	dec00204 	addi	sp,sp,8
  809940:	f800283a 	ret
  809944:	00c02074 	movhi	r3,129
  809948:	18d14517 	ldw	r3,17684(r3)
  80994c:	183ff926 	beq	r3,zero,809934 <_fstat_r+0x30>
  809950:	80c00015 	stw	r3,0(r16)
  809954:	dfc00117 	ldw	ra,4(sp)
  809958:	dc000017 	ldw	r16,0(sp)
  80995c:	dec00204 	addi	sp,sp,8
  809960:	f800283a 	ret

00809964 <_isatty_r>:
  809964:	defffe04 	addi	sp,sp,-8
  809968:	dc000015 	stw	r16,0(sp)
  80996c:	00802074 	movhi	r2,129
  809970:	2021883a 	mov	r16,r4
  809974:	2809883a 	mov	r4,r5
  809978:	dfc00115 	stw	ra,4(sp)
  80997c:	10114515 	stw	zero,17684(r2)
  809980:	080db840 	call	80db84 <isatty>
  809984:	10ffffd8 	cmpnei	r3,r2,-1
  809988:	18000426 	beq	r3,zero,80999c <_isatty_r+0x38>
  80998c:	dfc00117 	ldw	ra,4(sp)
  809990:	dc000017 	ldw	r16,0(sp)
  809994:	dec00204 	addi	sp,sp,8
  809998:	f800283a 	ret
  80999c:	00c02074 	movhi	r3,129
  8099a0:	18d14517 	ldw	r3,17684(r3)
  8099a4:	183ff926 	beq	r3,zero,80998c <_isatty_r+0x28>
  8099a8:	80c00015 	stw	r3,0(r16)
  8099ac:	dfc00117 	ldw	ra,4(sp)
  8099b0:	dc000017 	ldw	r16,0(sp)
  8099b4:	dec00204 	addi	sp,sp,8
  8099b8:	f800283a 	ret

008099bc <_setlocale_r>:
  8099bc:	30001626 	beq	r6,zero,809a18 <_setlocale_r+0x5c>
  8099c0:	01402074 	movhi	r5,129
  8099c4:	defffe04 	addi	sp,sp,-8
  8099c8:	29423f04 	addi	r5,r5,2300
  8099cc:	3009883a 	mov	r4,r6
  8099d0:	dc000015 	stw	r16,0(sp)
  8099d4:	dfc00115 	stw	ra,4(sp)
  8099d8:	3021883a 	mov	r16,r6
  8099dc:	0809b000 	call	809b00 <strcmp>
  8099e0:	1000061e 	bne	r2,zero,8099fc <_setlocale_r+0x40>
  8099e4:	00802074 	movhi	r2,129
  8099e8:	10823e04 	addi	r2,r2,2296
  8099ec:	dfc00117 	ldw	ra,4(sp)
  8099f0:	dc000017 	ldw	r16,0(sp)
  8099f4:	dec00204 	addi	sp,sp,8
  8099f8:	f800283a 	ret
  8099fc:	80800003 	ldbu	r2,0(r16)
  809a00:	10bfef44 	addi	r2,r2,-67
  809a04:	10000726 	beq	r2,zero,809a24 <_setlocale_r+0x68>
  809a08:	80800003 	ldbu	r2,0(r16)
  809a0c:	103ff526 	beq	r2,zero,8099e4 <_setlocale_r+0x28>
  809a10:	0005883a 	mov	r2,zero
  809a14:	003ff506 	br	8099ec <_setlocale_r+0x30>
  809a18:	00802074 	movhi	r2,129
  809a1c:	10823e04 	addi	r2,r2,2296
  809a20:	f800283a 	ret
  809a24:	80800043 	ldbu	r2,1(r16)
  809a28:	103fee26 	beq	r2,zero,8099e4 <_setlocale_r+0x28>
  809a2c:	003ff606 	br	809a08 <_setlocale_r+0x4c>

00809a30 <__locale_mb_cur_max>:
  809a30:	00802074 	movhi	r2,129
  809a34:	10858c07 	ldb	r2,5680(r2)
  809a38:	f800283a 	ret

00809a3c <setlocale>:
  809a3c:	28001626 	beq	r5,zero,809a98 <setlocale+0x5c>
  809a40:	defffe04 	addi	sp,sp,-8
  809a44:	dc000015 	stw	r16,0(sp)
  809a48:	2821883a 	mov	r16,r5
  809a4c:	01402074 	movhi	r5,129
  809a50:	29423f04 	addi	r5,r5,2300
  809a54:	8009883a 	mov	r4,r16
  809a58:	dfc00115 	stw	ra,4(sp)
  809a5c:	0809b000 	call	809b00 <strcmp>
  809a60:	1000061e 	bne	r2,zero,809a7c <setlocale+0x40>
  809a64:	00802074 	movhi	r2,129
  809a68:	10823e04 	addi	r2,r2,2296
  809a6c:	dfc00117 	ldw	ra,4(sp)
  809a70:	dc000017 	ldw	r16,0(sp)
  809a74:	dec00204 	addi	sp,sp,8
  809a78:	f800283a 	ret
  809a7c:	80800003 	ldbu	r2,0(r16)
  809a80:	10bfef44 	addi	r2,r2,-67
  809a84:	10000726 	beq	r2,zero,809aa4 <setlocale+0x68>
  809a88:	80800003 	ldbu	r2,0(r16)
  809a8c:	103ff526 	beq	r2,zero,809a64 <setlocale+0x28>
  809a90:	0005883a 	mov	r2,zero
  809a94:	003ff506 	br	809a6c <setlocale+0x30>
  809a98:	00802074 	movhi	r2,129
  809a9c:	10823e04 	addi	r2,r2,2296
  809aa0:	f800283a 	ret
  809aa4:	80800043 	ldbu	r2,1(r16)
  809aa8:	103fee26 	beq	r2,zero,809a64 <setlocale+0x28>
  809aac:	003ff606 	br	809a88 <setlocale+0x4c>

00809ab0 <_mbtowc_r>:
  809ab0:	00802074 	movhi	r2,129
  809ab4:	10857b17 	ldw	r2,5612(r2)
  809ab8:	1000683a 	jmp	r2

00809abc <__ascii_mbtowc>:
  809abc:	deffff04 	addi	sp,sp,-4
  809ac0:	28000826 	beq	r5,zero,809ae4 <__ascii_mbtowc+0x28>
  809ac4:	30000926 	beq	r6,zero,809aec <__ascii_mbtowc+0x30>
  809ac8:	38000b26 	beq	r7,zero,809af8 <__ascii_mbtowc+0x3c>
  809acc:	30800003 	ldbu	r2,0(r6)
  809ad0:	28800015 	stw	r2,0(r5)
  809ad4:	30800003 	ldbu	r2,0(r6)
  809ad8:	1004c03a 	cmpne	r2,r2,zero
  809adc:	dec00104 	addi	sp,sp,4
  809ae0:	f800283a 	ret
  809ae4:	d80b883a 	mov	r5,sp
  809ae8:	303ff71e 	bne	r6,zero,809ac8 <__ascii_mbtowc+0xc>
  809aec:	0005883a 	mov	r2,zero
  809af0:	dec00104 	addi	sp,sp,4
  809af4:	f800283a 	ret
  809af8:	00bfff84 	movi	r2,-2
  809afc:	003ff706 	br	809adc <__ascii_mbtowc+0x20>

00809b00 <strcmp>:
  809b00:	2144b03a 	or	r2,r4,r5
  809b04:	108000cc 	andi	r2,r2,3
  809b08:	1000141e 	bne	r2,zero,809b5c <strcmp+0x5c>
  809b0c:	20800017 	ldw	r2,0(r4)
  809b10:	28c00017 	ldw	r3,0(r5)
  809b14:	10c0111e 	bne	r2,r3,809b5c <strcmp+0x5c>
  809b18:	01ffbff4 	movhi	r7,65279
  809b1c:	01a02074 	movhi	r6,32897
  809b20:	39ffbfc4 	addi	r7,r7,-257
  809b24:	31a02004 	addi	r6,r6,-32640
  809b28:	00000306 	br	809b38 <strcmp+0x38>
  809b2c:	20800017 	ldw	r2,0(r4)
  809b30:	28c00017 	ldw	r3,0(r5)
  809b34:	10c0091e 	bne	r2,r3,809b5c <strcmp+0x5c>
  809b38:	11c7883a 	add	r3,r2,r7
  809b3c:	0084303a 	nor	r2,zero,r2
  809b40:	1884703a 	and	r2,r3,r2
  809b44:	1184703a 	and	r2,r2,r6
  809b48:	21000104 	addi	r4,r4,4
  809b4c:	29400104 	addi	r5,r5,4
  809b50:	103ff626 	beq	r2,zero,809b2c <strcmp+0x2c>
  809b54:	0005883a 	mov	r2,zero
  809b58:	f800283a 	ret
  809b5c:	20c00003 	ldbu	r3,0(r4)
  809b60:	18803fcc 	andi	r2,r3,255
  809b64:	1080201c 	xori	r2,r2,128
  809b68:	10bfe004 	addi	r2,r2,-128
  809b6c:	1000071e 	bne	r2,zero,809b8c <strcmp+0x8c>
  809b70:	00000a06 	br	809b9c <strcmp+0x9c>
  809b74:	20c00003 	ldbu	r3,0(r4)
  809b78:	29400044 	addi	r5,r5,1
  809b7c:	18803fcc 	andi	r2,r3,255
  809b80:	1080201c 	xori	r2,r2,128
  809b84:	10bfe004 	addi	r2,r2,-128
  809b88:	10000726 	beq	r2,zero,809ba8 <strcmp+0xa8>
  809b8c:	29800007 	ldb	r6,0(r5)
  809b90:	21000044 	addi	r4,r4,1
  809b94:	30bff726 	beq	r6,r2,809b74 <strcmp+0x74>
  809b98:	18803fcc 	andi	r2,r3,255
  809b9c:	28c00003 	ldbu	r3,0(r5)
  809ba0:	10c5c83a 	sub	r2,r2,r3
  809ba4:	f800283a 	ret
  809ba8:	28c00003 	ldbu	r3,0(r5)
  809bac:	0005883a 	mov	r2,zero
  809bb0:	10c5c83a 	sub	r2,r2,r3
  809bb4:	f800283a 	ret

00809bb8 <_vfiprintf_r>:
  809bb8:	08081501 	jmpi	808150 <___vfiprintf_internal_r>

00809bbc <__swbuf_r>:
  809bbc:	defffb04 	addi	sp,sp,-20
  809bc0:	dcc00315 	stw	r19,12(sp)
  809bc4:	dc400115 	stw	r17,4(sp)
  809bc8:	dc000015 	stw	r16,0(sp)
  809bcc:	dfc00415 	stw	ra,16(sp)
  809bd0:	dc800215 	stw	r18,8(sp)
  809bd4:	2027883a 	mov	r19,r4
  809bd8:	2823883a 	mov	r17,r5
  809bdc:	3021883a 	mov	r16,r6
  809be0:	20000226 	beq	r4,zero,809bec <__swbuf_r+0x30>
  809be4:	20800e17 	ldw	r2,56(r4)
  809be8:	10003e26 	beq	r2,zero,809ce4 <__swbuf_r+0x128>
  809bec:	80800617 	ldw	r2,24(r16)
  809bf0:	80c0030b 	ldhu	r3,12(r16)
  809bf4:	80800215 	stw	r2,8(r16)
  809bf8:	1880020c 	andi	r2,r3,8
  809bfc:	10001f26 	beq	r2,zero,809c7c <__swbuf_r+0xc0>
  809c00:	80800417 	ldw	r2,16(r16)
  809c04:	10001d26 	beq	r2,zero,809c7c <__swbuf_r+0xc0>
  809c08:	1948000c 	andi	r5,r3,8192
  809c0c:	8c803fcc 	andi	r18,r17,255
  809c10:	28002326 	beq	r5,zero,809ca0 <__swbuf_r+0xe4>
  809c14:	80c00017 	ldw	r3,0(r16)
  809c18:	81000517 	ldw	r4,20(r16)
  809c1c:	1885c83a 	sub	r2,r3,r2
  809c20:	1100290e 	bge	r2,r4,809cc8 <__swbuf_r+0x10c>
  809c24:	10800044 	addi	r2,r2,1
  809c28:	81400217 	ldw	r5,8(r16)
  809c2c:	19000044 	addi	r4,r3,1
  809c30:	81000015 	stw	r4,0(r16)
  809c34:	297fffc4 	addi	r5,r5,-1
  809c38:	81400215 	stw	r5,8(r16)
  809c3c:	1c400005 	stb	r17,0(r3)
  809c40:	80c00517 	ldw	r3,20(r16)
  809c44:	18802926 	beq	r3,r2,809cec <__swbuf_r+0x130>
  809c48:	8080030b 	ldhu	r2,12(r16)
  809c4c:	1080004c 	andi	r2,r2,1
  809c50:	10000226 	beq	r2,zero,809c5c <__swbuf_r+0xa0>
  809c54:	90800298 	cmpnei	r2,r18,10
  809c58:	10002426 	beq	r2,zero,809cec <__swbuf_r+0x130>
  809c5c:	9005883a 	mov	r2,r18
  809c60:	dfc00417 	ldw	ra,16(sp)
  809c64:	dcc00317 	ldw	r19,12(sp)
  809c68:	dc800217 	ldw	r18,8(sp)
  809c6c:	dc400117 	ldw	r17,4(sp)
  809c70:	dc000017 	ldw	r16,0(sp)
  809c74:	dec00504 	addi	sp,sp,20
  809c78:	f800283a 	ret
  809c7c:	800b883a 	mov	r5,r16
  809c80:	9809883a 	mov	r4,r19
  809c84:	0803a140 	call	803a14 <__swsetup_r>
  809c88:	10001c1e 	bne	r2,zero,809cfc <__swbuf_r+0x140>
  809c8c:	80c0030b 	ldhu	r3,12(r16)
  809c90:	80800417 	ldw	r2,16(r16)
  809c94:	8c803fcc 	andi	r18,r17,255
  809c98:	1948000c 	andi	r5,r3,8192
  809c9c:	283fdd1e 	bne	r5,zero,809c14 <__swbuf_r+0x58>
  809ca0:	81001917 	ldw	r4,100(r16)
  809ca4:	18c80014 	ori	r3,r3,8192
  809ca8:	0177ffc4 	movi	r5,-8193
  809cac:	2148703a 	and	r4,r4,r5
  809cb0:	80c0030d 	sth	r3,12(r16)
  809cb4:	80c00017 	ldw	r3,0(r16)
  809cb8:	81001915 	stw	r4,100(r16)
  809cbc:	81000517 	ldw	r4,20(r16)
  809cc0:	1885c83a 	sub	r2,r3,r2
  809cc4:	113fd716 	blt	r2,r4,809c24 <__swbuf_r+0x68>
  809cc8:	800b883a 	mov	r5,r16
  809ccc:	9809883a 	mov	r4,r19
  809cd0:	08059000 	call	805900 <_fflush_r>
  809cd4:	1000091e 	bne	r2,zero,809cfc <__swbuf_r+0x140>
  809cd8:	80c00017 	ldw	r3,0(r16)
  809cdc:	00800044 	movi	r2,1
  809ce0:	003fd106 	br	809c28 <__swbuf_r+0x6c>
  809ce4:	08009680 	call	800968 <__sinit>
  809ce8:	003fc006 	br	809bec <__swbuf_r+0x30>
  809cec:	800b883a 	mov	r5,r16
  809cf0:	9809883a 	mov	r4,r19
  809cf4:	08059000 	call	805900 <_fflush_r>
  809cf8:	103fd826 	beq	r2,zero,809c5c <__swbuf_r+0xa0>
  809cfc:	04bfffc4 	movi	r18,-1
  809d00:	003fd606 	br	809c5c <__swbuf_r+0xa0>

00809d04 <__swbuf>:
  809d04:	00c02074 	movhi	r3,129
  809d08:	2005883a 	mov	r2,r4
  809d0c:	190a2c17 	ldw	r4,10416(r3)
  809d10:	280d883a 	mov	r6,r5
  809d14:	100b883a 	mov	r5,r2
  809d18:	0809bbc1 	jmpi	809bbc <__swbuf_r>

00809d1c <_wcrtomb_r>:
  809d1c:	defffa04 	addi	sp,sp,-24
  809d20:	dc400415 	stw	r17,16(sp)
  809d24:	dc000315 	stw	r16,12(sp)
  809d28:	00802074 	movhi	r2,129
  809d2c:	dfc00515 	stw	ra,20(sp)
  809d30:	10857a17 	ldw	r2,5608(r2)
  809d34:	2023883a 	mov	r17,r4
  809d38:	3821883a 	mov	r16,r7
  809d3c:	28000826 	beq	r5,zero,809d60 <_wcrtomb_r+0x44>
  809d40:	103ee83a 	callr	r2
  809d44:	10ffffd8 	cmpnei	r3,r2,-1
  809d48:	18000a26 	beq	r3,zero,809d74 <_wcrtomb_r+0x58>
  809d4c:	dfc00517 	ldw	ra,20(sp)
  809d50:	dc400417 	ldw	r17,16(sp)
  809d54:	dc000317 	ldw	r16,12(sp)
  809d58:	dec00604 	addi	sp,sp,24
  809d5c:	f800283a 	ret
  809d60:	000d883a 	mov	r6,zero
  809d64:	d9400084 	addi	r5,sp,2
  809d68:	103ee83a 	callr	r2
  809d6c:	10ffffd8 	cmpnei	r3,r2,-1
  809d70:	183ff61e 	bne	r3,zero,809d4c <_wcrtomb_r+0x30>
  809d74:	00802284 	movi	r2,138
  809d78:	80000015 	stw	zero,0(r16)
  809d7c:	88800015 	stw	r2,0(r17)
  809d80:	00bfffc4 	movi	r2,-1
  809d84:	003ff106 	br	809d4c <_wcrtomb_r+0x30>

00809d88 <wcrtomb>:
  809d88:	defffa04 	addi	sp,sp,-24
  809d8c:	00c02074 	movhi	r3,129
  809d90:	dc400415 	stw	r17,16(sp)
  809d94:	dc000315 	stw	r16,12(sp)
  809d98:	1c4a2c17 	ldw	r17,10416(r3)
  809d9c:	dfc00515 	stw	ra,20(sp)
  809da0:	00c02074 	movhi	r3,129
  809da4:	18c57a17 	ldw	r3,5608(r3)
  809da8:	3021883a 	mov	r16,r6
  809dac:	20000c26 	beq	r4,zero,809de0 <wcrtomb+0x58>
  809db0:	280d883a 	mov	r6,r5
  809db4:	800f883a 	mov	r7,r16
  809db8:	200b883a 	mov	r5,r4
  809dbc:	8809883a 	mov	r4,r17
  809dc0:	183ee83a 	callr	r3
  809dc4:	10ffffd8 	cmpnei	r3,r2,-1
  809dc8:	18000c26 	beq	r3,zero,809dfc <wcrtomb+0x74>
  809dcc:	dfc00517 	ldw	ra,20(sp)
  809dd0:	dc400417 	ldw	r17,16(sp)
  809dd4:	dc000317 	ldw	r16,12(sp)
  809dd8:	dec00604 	addi	sp,sp,24
  809ddc:	f800283a 	ret
  809de0:	300f883a 	mov	r7,r6
  809de4:	d9400084 	addi	r5,sp,2
  809de8:	000d883a 	mov	r6,zero
  809dec:	8809883a 	mov	r4,r17
  809df0:	183ee83a 	callr	r3
  809df4:	10ffffd8 	cmpnei	r3,r2,-1
  809df8:	183ff41e 	bne	r3,zero,809dcc <wcrtomb+0x44>
  809dfc:	00802284 	movi	r2,138
  809e00:	80000015 	stw	zero,0(r16)
  809e04:	88800015 	stw	r2,0(r17)
  809e08:	00bfffc4 	movi	r2,-1
  809e0c:	003fef06 	br	809dcc <wcrtomb+0x44>

00809e10 <_wctomb_r>:
  809e10:	00802074 	movhi	r2,129
  809e14:	10857a17 	ldw	r2,5608(r2)
  809e18:	1000683a 	jmp	r2

00809e1c <__ascii_wctomb>:
  809e1c:	28000926 	beq	r5,zero,809e44 <__ascii_wctomb+0x28>
  809e20:	30804030 	cmpltui	r2,r6,256
  809e24:	10000326 	beq	r2,zero,809e34 <__ascii_wctomb+0x18>
  809e28:	29800005 	stb	r6,0(r5)
  809e2c:	00800044 	movi	r2,1
  809e30:	f800283a 	ret
  809e34:	00802284 	movi	r2,138
  809e38:	20800015 	stw	r2,0(r4)
  809e3c:	00bfffc4 	movi	r2,-1
  809e40:	f800283a 	ret
  809e44:	0005883a 	mov	r2,zero
  809e48:	f800283a 	ret

00809e4c <abort>:
  809e4c:	deffff04 	addi	sp,sp,-4
  809e50:	01000184 	movi	r4,6
  809e54:	dfc00015 	stw	ra,0(sp)
  809e58:	080a0d80 	call	80a0d8 <raise>
  809e5c:	01000044 	movi	r4,1
  809e60:	080d9f80 	call	80d9f8 <_exit>

00809e64 <_init_signal_r>:
  809e64:	2080b717 	ldw	r2,732(r4)
  809e68:	10000226 	beq	r2,zero,809e74 <_init_signal_r+0x10>
  809e6c:	0005883a 	mov	r2,zero
  809e70:	f800283a 	ret
  809e74:	defffe04 	addi	sp,sp,-8
  809e78:	01402004 	movi	r5,128
  809e7c:	dc000015 	stw	r16,0(sp)
  809e80:	dfc00115 	stw	ra,4(sp)
  809e84:	2021883a 	mov	r16,r4
  809e88:	0800bf40 	call	800bf4 <_malloc_r>
  809e8c:	8080b715 	stw	r2,732(r16)
  809e90:	1009883a 	mov	r4,r2
  809e94:	10000826 	beq	r2,zero,809eb8 <_init_signal_r+0x54>
  809e98:	01802004 	movi	r6,128
  809e9c:	000b883a 	mov	r5,zero
  809ea0:	08013d40 	call	8013d4 <memset>
  809ea4:	0005883a 	mov	r2,zero
  809ea8:	dfc00117 	ldw	ra,4(sp)
  809eac:	dc000017 	ldw	r16,0(sp)
  809eb0:	dec00204 	addi	sp,sp,8
  809eb4:	f800283a 	ret
  809eb8:	00bfffc4 	movi	r2,-1
  809ebc:	003ffa06 	br	809ea8 <_init_signal_r+0x44>

00809ec0 <_signal_r>:
  809ec0:	defffc04 	addi	sp,sp,-16
  809ec4:	dc400115 	stw	r17,4(sp)
  809ec8:	dfc00315 	stw	ra,12(sp)
  809ecc:	dc800215 	stw	r18,8(sp)
  809ed0:	dc000015 	stw	r16,0(sp)
  809ed4:	28800830 	cmpltui	r2,r5,32
  809ed8:	2023883a 	mov	r17,r4
  809edc:	10000e26 	beq	r2,zero,809f18 <_signal_r+0x58>
  809ee0:	20c0b717 	ldw	r3,732(r4)
  809ee4:	2821883a 	mov	r16,r5
  809ee8:	3025883a 	mov	r18,r6
  809eec:	18000e26 	beq	r3,zero,809f28 <_signal_r+0x68>
  809ef0:	802090ba 	slli	r16,r16,2
  809ef4:	1c21883a 	add	r16,r3,r16
  809ef8:	80800017 	ldw	r2,0(r16)
  809efc:	84800015 	stw	r18,0(r16)
  809f00:	dfc00317 	ldw	ra,12(sp)
  809f04:	dc800217 	ldw	r18,8(sp)
  809f08:	dc400117 	ldw	r17,4(sp)
  809f0c:	dc000017 	ldw	r16,0(sp)
  809f10:	dec00404 	addi	sp,sp,16
  809f14:	f800283a 	ret
  809f18:	00800584 	movi	r2,22
  809f1c:	20800015 	stw	r2,0(r4)
  809f20:	00bfffc4 	movi	r2,-1
  809f24:	003ff606 	br	809f00 <_signal_r+0x40>
  809f28:	01402004 	movi	r5,128
  809f2c:	0800bf40 	call	800bf4 <_malloc_r>
  809f30:	8880b715 	stw	r2,732(r17)
  809f34:	10000626 	beq	r2,zero,809f50 <_signal_r+0x90>
  809f38:	01802004 	movi	r6,128
  809f3c:	000b883a 	mov	r5,zero
  809f40:	1009883a 	mov	r4,r2
  809f44:	08013d40 	call	8013d4 <memset>
  809f48:	1007883a 	mov	r3,r2
  809f4c:	003fe806 	br	809ef0 <_signal_r+0x30>
  809f50:	00bfffc4 	movi	r2,-1
  809f54:	003fea06 	br	809f00 <_signal_r+0x40>

00809f58 <_raise_r>:
  809f58:	28800830 	cmpltui	r2,r5,32
  809f5c:	10002b26 	beq	r2,zero,80a00c <_raise_r+0xb4>
  809f60:	2080b717 	ldw	r2,732(r4)
  809f64:	defffd04 	addi	sp,sp,-12
  809f68:	dc000115 	stw	r16,4(sp)
  809f6c:	dfc00215 	stw	ra,8(sp)
  809f70:	2821883a 	mov	r16,r5
  809f74:	10001026 	beq	r2,zero,809fb8 <_raise_r+0x60>
  809f78:	280690ba 	slli	r3,r5,2
  809f7c:	10c5883a 	add	r2,r2,r3
  809f80:	10c00017 	ldw	r3,0(r2)
  809f84:	18000c26 	beq	r3,zero,809fb8 <_raise_r+0x60>
  809f88:	19400060 	cmpeqi	r5,r3,1
  809f8c:	28001a1e 	bne	r5,zero,809ff8 <_raise_r+0xa0>
  809f90:	197fffd8 	cmpnei	r5,r3,-1
  809f94:	28001126 	beq	r5,zero,809fdc <_raise_r+0x84>
  809f98:	10000015 	stw	zero,0(r2)
  809f9c:	8009883a 	mov	r4,r16
  809fa0:	183ee83a 	callr	r3
  809fa4:	0005883a 	mov	r2,zero
  809fa8:	dfc00217 	ldw	ra,8(sp)
  809fac:	dc000117 	ldw	r16,4(sp)
  809fb0:	dec00304 	addi	sp,sp,12
  809fb4:	f800283a 	ret
  809fb8:	d9000015 	stw	r4,0(sp)
  809fbc:	080a3b00 	call	80a3b0 <_getpid_r>
  809fc0:	d9000017 	ldw	r4,0(sp)
  809fc4:	800d883a 	mov	r6,r16
  809fc8:	100b883a 	mov	r5,r2
  809fcc:	dfc00217 	ldw	ra,8(sp)
  809fd0:	dc000117 	ldw	r16,4(sp)
  809fd4:	dec00304 	addi	sp,sp,12
  809fd8:	080a3501 	jmpi	80a350 <_kill_r>
  809fdc:	00800584 	movi	r2,22
  809fe0:	20800015 	stw	r2,0(r4)
  809fe4:	00800044 	movi	r2,1
  809fe8:	dfc00217 	ldw	ra,8(sp)
  809fec:	dc000117 	ldw	r16,4(sp)
  809ff0:	dec00304 	addi	sp,sp,12
  809ff4:	f800283a 	ret
  809ff8:	0005883a 	mov	r2,zero
  809ffc:	dfc00217 	ldw	ra,8(sp)
  80a000:	dc000117 	ldw	r16,4(sp)
  80a004:	dec00304 	addi	sp,sp,12
  80a008:	f800283a 	ret
  80a00c:	00800584 	movi	r2,22
  80a010:	20800015 	stw	r2,0(r4)
  80a014:	00bfffc4 	movi	r2,-1
  80a018:	f800283a 	ret

0080a01c <__sigtramp_r>:
  80a01c:	28800830 	cmpltui	r2,r5,32
  80a020:	10002b26 	beq	r2,zero,80a0d0 <__sigtramp_r+0xb4>
  80a024:	20c0b717 	ldw	r3,732(r4)
  80a028:	defffd04 	addi	sp,sp,-12
  80a02c:	dc400115 	stw	r17,4(sp)
  80a030:	dc000015 	stw	r16,0(sp)
  80a034:	dfc00215 	stw	ra,8(sp)
  80a038:	2821883a 	mov	r16,r5
  80a03c:	2023883a 	mov	r17,r4
  80a040:	18001326 	beq	r3,zero,80a090 <__sigtramp_r+0x74>
  80a044:	800490ba 	slli	r2,r16,2
  80a048:	1887883a 	add	r3,r3,r2
  80a04c:	18800017 	ldw	r2,0(r3)
  80a050:	10000d26 	beq	r2,zero,80a088 <__sigtramp_r+0x6c>
  80a054:	113fffe0 	cmpeqi	r4,r2,-1
  80a058:	2000191e 	bne	r4,zero,80a0c0 <__sigtramp_r+0xa4>
  80a05c:	11000060 	cmpeqi	r4,r2,1
  80a060:	2000151e 	bne	r4,zero,80a0b8 <__sigtramp_r+0x9c>
  80a064:	18000015 	stw	zero,0(r3)
  80a068:	8009883a 	mov	r4,r16
  80a06c:	103ee83a 	callr	r2
  80a070:	0005883a 	mov	r2,zero
  80a074:	dfc00217 	ldw	ra,8(sp)
  80a078:	dc400117 	ldw	r17,4(sp)
  80a07c:	dc000017 	ldw	r16,0(sp)
  80a080:	dec00304 	addi	sp,sp,12
  80a084:	f800283a 	ret
  80a088:	00800044 	movi	r2,1
  80a08c:	003ff906 	br	80a074 <__sigtramp_r+0x58>
  80a090:	01402004 	movi	r5,128
  80a094:	0800bf40 	call	800bf4 <_malloc_r>
  80a098:	8880b715 	stw	r2,732(r17)
  80a09c:	10000a26 	beq	r2,zero,80a0c8 <__sigtramp_r+0xac>
  80a0a0:	01802004 	movi	r6,128
  80a0a4:	000b883a 	mov	r5,zero
  80a0a8:	1009883a 	mov	r4,r2
  80a0ac:	08013d40 	call	8013d4 <memset>
  80a0b0:	1007883a 	mov	r3,r2
  80a0b4:	003fe306 	br	80a044 <__sigtramp_r+0x28>
  80a0b8:	008000c4 	movi	r2,3
  80a0bc:	003fed06 	br	80a074 <__sigtramp_r+0x58>
  80a0c0:	00800084 	movi	r2,2
  80a0c4:	003feb06 	br	80a074 <__sigtramp_r+0x58>
  80a0c8:	00bfffc4 	movi	r2,-1
  80a0cc:	003fe906 	br	80a074 <__sigtramp_r+0x58>
  80a0d0:	00bfffc4 	movi	r2,-1
  80a0d4:	f800283a 	ret

0080a0d8 <raise>:
  80a0d8:	defffd04 	addi	sp,sp,-12
  80a0dc:	dc400115 	stw	r17,4(sp)
  80a0e0:	00c02074 	movhi	r3,129
  80a0e4:	dfc00215 	stw	ra,8(sp)
  80a0e8:	dc000015 	stw	r16,0(sp)
  80a0ec:	20800830 	cmpltui	r2,r4,32
  80a0f0:	1c4a2c17 	ldw	r17,10416(r3)
  80a0f4:	10002326 	beq	r2,zero,80a184 <raise+0xac>
  80a0f8:	8880b717 	ldw	r2,732(r17)
  80a0fc:	2021883a 	mov	r16,r4
  80a100:	10001026 	beq	r2,zero,80a144 <raise+0x6c>
  80a104:	200690ba 	slli	r3,r4,2
  80a108:	10c5883a 	add	r2,r2,r3
  80a10c:	10c00017 	ldw	r3,0(r2)
  80a110:	18000c26 	beq	r3,zero,80a144 <raise+0x6c>
  80a114:	19400060 	cmpeqi	r5,r3,1
  80a118:	2800181e 	bne	r5,zero,80a17c <raise+0xa4>
  80a11c:	197fffd8 	cmpnei	r5,r3,-1
  80a120:	28001226 	beq	r5,zero,80a16c <raise+0x94>
  80a124:	10000015 	stw	zero,0(r2)
  80a128:	183ee83a 	callr	r3
  80a12c:	0005883a 	mov	r2,zero
  80a130:	dfc00217 	ldw	ra,8(sp)
  80a134:	dc400117 	ldw	r17,4(sp)
  80a138:	dc000017 	ldw	r16,0(sp)
  80a13c:	dec00304 	addi	sp,sp,12
  80a140:	f800283a 	ret
  80a144:	8809883a 	mov	r4,r17
  80a148:	080a3b00 	call	80a3b0 <_getpid_r>
  80a14c:	800d883a 	mov	r6,r16
  80a150:	100b883a 	mov	r5,r2
  80a154:	8809883a 	mov	r4,r17
  80a158:	dfc00217 	ldw	ra,8(sp)
  80a15c:	dc400117 	ldw	r17,4(sp)
  80a160:	dc000017 	ldw	r16,0(sp)
  80a164:	dec00304 	addi	sp,sp,12
  80a168:	080a3501 	jmpi	80a350 <_kill_r>
  80a16c:	00800584 	movi	r2,22
  80a170:	88800015 	stw	r2,0(r17)
  80a174:	00800044 	movi	r2,1
  80a178:	003fed06 	br	80a130 <raise+0x58>
  80a17c:	0005883a 	mov	r2,zero
  80a180:	003feb06 	br	80a130 <raise+0x58>
  80a184:	00800584 	movi	r2,22
  80a188:	88800015 	stw	r2,0(r17)
  80a18c:	00bfffc4 	movi	r2,-1
  80a190:	003fe706 	br	80a130 <raise+0x58>

0080a194 <signal>:
  80a194:	defffc04 	addi	sp,sp,-16
  80a198:	dc800215 	stw	r18,8(sp)
  80a19c:	00c02074 	movhi	r3,129
  80a1a0:	dfc00315 	stw	ra,12(sp)
  80a1a4:	dc400115 	stw	r17,4(sp)
  80a1a8:	dc000015 	stw	r16,0(sp)
  80a1ac:	20800830 	cmpltui	r2,r4,32
  80a1b0:	1c8a2c17 	ldw	r18,10416(r3)
  80a1b4:	10000e26 	beq	r2,zero,80a1f0 <signal+0x5c>
  80a1b8:	2021883a 	mov	r16,r4
  80a1bc:	9100b717 	ldw	r4,732(r18)
  80a1c0:	2823883a 	mov	r17,r5
  80a1c4:	20000e26 	beq	r4,zero,80a200 <signal+0x6c>
  80a1c8:	802090ba 	slli	r16,r16,2
  80a1cc:	2421883a 	add	r16,r4,r16
  80a1d0:	80800017 	ldw	r2,0(r16)
  80a1d4:	84400015 	stw	r17,0(r16)
  80a1d8:	dfc00317 	ldw	ra,12(sp)
  80a1dc:	dc800217 	ldw	r18,8(sp)
  80a1e0:	dc400117 	ldw	r17,4(sp)
  80a1e4:	dc000017 	ldw	r16,0(sp)
  80a1e8:	dec00404 	addi	sp,sp,16
  80a1ec:	f800283a 	ret
  80a1f0:	00800584 	movi	r2,22
  80a1f4:	90800015 	stw	r2,0(r18)
  80a1f8:	00bfffc4 	movi	r2,-1
  80a1fc:	003ff606 	br	80a1d8 <signal+0x44>
  80a200:	9009883a 	mov	r4,r18
  80a204:	01402004 	movi	r5,128
  80a208:	0800bf40 	call	800bf4 <_malloc_r>
  80a20c:	9080b715 	stw	r2,732(r18)
  80a210:	1009883a 	mov	r4,r2
  80a214:	10000526 	beq	r2,zero,80a22c <signal+0x98>
  80a218:	01802004 	movi	r6,128
  80a21c:	000b883a 	mov	r5,zero
  80a220:	08013d40 	call	8013d4 <memset>
  80a224:	1009883a 	mov	r4,r2
  80a228:	003fe706 	br	80a1c8 <signal+0x34>
  80a22c:	00bfffc4 	movi	r2,-1
  80a230:	003fe906 	br	80a1d8 <signal+0x44>

0080a234 <_init_signal>:
  80a234:	defffe04 	addi	sp,sp,-8
  80a238:	00802074 	movhi	r2,129
  80a23c:	dc000015 	stw	r16,0(sp)
  80a240:	140a2c17 	ldw	r16,10416(r2)
  80a244:	dfc00115 	stw	ra,4(sp)
  80a248:	8080b717 	ldw	r2,732(r16)
  80a24c:	10000526 	beq	r2,zero,80a264 <_init_signal+0x30>
  80a250:	0005883a 	mov	r2,zero
  80a254:	dfc00117 	ldw	ra,4(sp)
  80a258:	dc000017 	ldw	r16,0(sp)
  80a25c:	dec00204 	addi	sp,sp,8
  80a260:	f800283a 	ret
  80a264:	8009883a 	mov	r4,r16
  80a268:	01402004 	movi	r5,128
  80a26c:	0800bf40 	call	800bf4 <_malloc_r>
  80a270:	8080b715 	stw	r2,732(r16)
  80a274:	1009883a 	mov	r4,r2
  80a278:	10000426 	beq	r2,zero,80a28c <_init_signal+0x58>
  80a27c:	01802004 	movi	r6,128
  80a280:	000b883a 	mov	r5,zero
  80a284:	08013d40 	call	8013d4 <memset>
  80a288:	003ff106 	br	80a250 <_init_signal+0x1c>
  80a28c:	00bfffc4 	movi	r2,-1
  80a290:	003ff006 	br	80a254 <_init_signal+0x20>

0080a294 <__sigtramp>:
  80a294:	defffd04 	addi	sp,sp,-12
  80a298:	dc400115 	stw	r17,4(sp)
  80a29c:	00c02074 	movhi	r3,129
  80a2a0:	dfc00215 	stw	ra,8(sp)
  80a2a4:	dc000015 	stw	r16,0(sp)
  80a2a8:	20800830 	cmpltui	r2,r4,32
  80a2ac:	1c4a2c17 	ldw	r17,10416(r3)
  80a2b0:	10002526 	beq	r2,zero,80a348 <__sigtramp+0xb4>
  80a2b4:	88c0b717 	ldw	r3,732(r17)
  80a2b8:	2021883a 	mov	r16,r4
  80a2bc:	18001326 	beq	r3,zero,80a30c <__sigtramp+0x78>
  80a2c0:	800890ba 	slli	r4,r16,2
  80a2c4:	1907883a 	add	r3,r3,r4
  80a2c8:	18800017 	ldw	r2,0(r3)
  80a2cc:	10000d26 	beq	r2,zero,80a304 <__sigtramp+0x70>
  80a2d0:	113fffe0 	cmpeqi	r4,r2,-1
  80a2d4:	20001a1e 	bne	r4,zero,80a340 <__sigtramp+0xac>
  80a2d8:	11000060 	cmpeqi	r4,r2,1
  80a2dc:	2000161e 	bne	r4,zero,80a338 <__sigtramp+0xa4>
  80a2e0:	18000015 	stw	zero,0(r3)
  80a2e4:	8009883a 	mov	r4,r16
  80a2e8:	103ee83a 	callr	r2
  80a2ec:	0005883a 	mov	r2,zero
  80a2f0:	dfc00217 	ldw	ra,8(sp)
  80a2f4:	dc400117 	ldw	r17,4(sp)
  80a2f8:	dc000017 	ldw	r16,0(sp)
  80a2fc:	dec00304 	addi	sp,sp,12
  80a300:	f800283a 	ret
  80a304:	00800044 	movi	r2,1
  80a308:	003ff906 	br	80a2f0 <__sigtramp+0x5c>
  80a30c:	01402004 	movi	r5,128
  80a310:	8809883a 	mov	r4,r17
  80a314:	0800bf40 	call	800bf4 <_malloc_r>
  80a318:	8880b715 	stw	r2,732(r17)
  80a31c:	10000a26 	beq	r2,zero,80a348 <__sigtramp+0xb4>
  80a320:	01802004 	movi	r6,128
  80a324:	000b883a 	mov	r5,zero
  80a328:	1009883a 	mov	r4,r2
  80a32c:	08013d40 	call	8013d4 <memset>
  80a330:	1007883a 	mov	r3,r2
  80a334:	003fe206 	br	80a2c0 <__sigtramp+0x2c>
  80a338:	008000c4 	movi	r2,3
  80a33c:	003fec06 	br	80a2f0 <__sigtramp+0x5c>
  80a340:	00800084 	movi	r2,2
  80a344:	003fea06 	br	80a2f0 <__sigtramp+0x5c>
  80a348:	00bfffc4 	movi	r2,-1
  80a34c:	003fe806 	br	80a2f0 <__sigtramp+0x5c>

0080a350 <_kill_r>:
  80a350:	2807883a 	mov	r3,r5
  80a354:	defffe04 	addi	sp,sp,-8
  80a358:	dc000015 	stw	r16,0(sp)
  80a35c:	00802074 	movhi	r2,129
  80a360:	300b883a 	mov	r5,r6
  80a364:	2021883a 	mov	r16,r4
  80a368:	1809883a 	mov	r4,r3
  80a36c:	dfc00115 	stw	ra,4(sp)
  80a370:	10114515 	stw	zero,17684(r2)
  80a374:	080dc700 	call	80dc70 <kill>
  80a378:	10ffffd8 	cmpnei	r3,r2,-1
  80a37c:	18000426 	beq	r3,zero,80a390 <_kill_r+0x40>
  80a380:	dfc00117 	ldw	ra,4(sp)
  80a384:	dc000017 	ldw	r16,0(sp)
  80a388:	dec00204 	addi	sp,sp,8
  80a38c:	f800283a 	ret
  80a390:	00c02074 	movhi	r3,129
  80a394:	18d14517 	ldw	r3,17684(r3)
  80a398:	183ff926 	beq	r3,zero,80a380 <_kill_r+0x30>
  80a39c:	80c00015 	stw	r3,0(r16)
  80a3a0:	dfc00117 	ldw	ra,4(sp)
  80a3a4:	dc000017 	ldw	r16,0(sp)
  80a3a8:	dec00204 	addi	sp,sp,8
  80a3ac:	f800283a 	ret

0080a3b0 <_getpid_r>:
  80a3b0:	080db281 	jmpi	80db28 <getpid>

0080a3b4 <__udivdi3>:
  80a3b4:	defff504 	addi	sp,sp,-44
  80a3b8:	dd000515 	stw	r20,20(sp)
  80a3bc:	dc800315 	stw	r18,12(sp)
  80a3c0:	dfc00a15 	stw	ra,40(sp)
  80a3c4:	df000915 	stw	fp,36(sp)
  80a3c8:	ddc00815 	stw	r23,32(sp)
  80a3cc:	dd800715 	stw	r22,28(sp)
  80a3d0:	dd400615 	stw	r21,24(sp)
  80a3d4:	dcc00415 	stw	r19,16(sp)
  80a3d8:	dc400215 	stw	r17,8(sp)
  80a3dc:	dc000115 	stw	r16,4(sp)
  80a3e0:	2029883a 	mov	r20,r4
  80a3e4:	2825883a 	mov	r18,r5
  80a3e8:	3800461e 	bne	r7,zero,80a504 <__udivdi3+0x150>
  80a3ec:	3823883a 	mov	r17,r7
  80a3f0:	3021883a 	mov	r16,r6
  80a3f4:	2027883a 	mov	r19,r4
  80a3f8:	2980622e 	bgeu	r5,r6,80a584 <__udivdi3+0x1d0>
  80a3fc:	00bfffd4 	movui	r2,65535
  80a400:	282b883a 	mov	r21,r5
  80a404:	1180aa2e 	bgeu	r2,r6,80a6b0 <__udivdi3+0x2fc>
  80a408:	00804034 	movhi	r2,256
  80a40c:	30815a36 	bltu	r6,r2,80a978 <__udivdi3+0x5c4>
  80a410:	3006d63a 	srli	r3,r6,24
  80a414:	04400604 	movi	r17,24
  80a418:	00802074 	movhi	r2,129
  80a41c:	1885883a 	add	r2,r3,r2
  80a420:	1082e303 	ldbu	r2,2956(r2)
  80a424:	00c00804 	movi	r3,32
  80a428:	1463883a 	add	r17,r2,r17
  80a42c:	1c45c83a 	sub	r2,r3,r17
  80a430:	1c400526 	beq	r3,r17,80a448 <__udivdi3+0x94>
  80a434:	9086983a 	sll	r3,r18,r2
  80a438:	a462d83a 	srl	r17,r20,r17
  80a43c:	30a0983a 	sll	r16,r6,r2
  80a440:	a0a6983a 	sll	r19,r20,r2
  80a444:	88eab03a 	or	r21,r17,r3
  80a448:	802cd43a 	srli	r22,r16,16
  80a44c:	a809883a 	mov	r4,r21
  80a450:	853fffcc 	andi	r20,r16,65535
  80a454:	b00b883a 	mov	r5,r22
  80a458:	080b0f00 	call	80b0f0 <__umodsi3>
  80a45c:	a809883a 	mov	r4,r21
  80a460:	b00b883a 	mov	r5,r22
  80a464:	1025883a 	mov	r18,r2
  80a468:	080b08c0 	call	80b08c <__udivsi3>
  80a46c:	a009883a 	mov	r4,r20
  80a470:	100b883a 	mov	r5,r2
  80a474:	102b883a 	mov	r21,r2
  80a478:	080b14c0 	call	80b14c <__mulsi3>
  80a47c:	9024943a 	slli	r18,r18,16
  80a480:	9808d43a 	srli	r4,r19,16
  80a484:	9108b03a 	or	r4,r18,r4
  80a488:	2080052e 	bgeu	r4,r2,80a4a0 <__udivdi3+0xec>
  80a48c:	2409883a 	add	r4,r4,r16
  80a490:	a8ffffc4 	addi	r3,r21,-1
  80a494:	24000136 	bltu	r4,r16,80a49c <__udivdi3+0xe8>
  80a498:	20814836 	bltu	r4,r2,80a9bc <__udivdi3+0x608>
  80a49c:	182b883a 	mov	r21,r3
  80a4a0:	20a3c83a 	sub	r17,r4,r2
  80a4a4:	8809883a 	mov	r4,r17
  80a4a8:	b00b883a 	mov	r5,r22
  80a4ac:	080b0f00 	call	80b0f0 <__umodsi3>
  80a4b0:	8809883a 	mov	r4,r17
  80a4b4:	1023883a 	mov	r17,r2
  80a4b8:	b00b883a 	mov	r5,r22
  80a4bc:	8822943a 	slli	r17,r17,16
  80a4c0:	080b08c0 	call	80b08c <__udivsi3>
  80a4c4:	100b883a 	mov	r5,r2
  80a4c8:	a009883a 	mov	r4,r20
  80a4cc:	9cffffcc 	andi	r19,r19,65535
  80a4d0:	1025883a 	mov	r18,r2
  80a4d4:	8ce6b03a 	or	r19,r17,r19
  80a4d8:	080b14c0 	call	80b14c <__mulsi3>
  80a4dc:	9880052e 	bgeu	r19,r2,80a4f4 <__udivdi3+0x140>
  80a4e0:	84e7883a 	add	r19,r16,r19
  80a4e4:	90ffffc4 	addi	r3,r18,-1
  80a4e8:	9c000136 	bltu	r19,r16,80a4f0 <__udivdi3+0x13c>
  80a4ec:	98813136 	bltu	r19,r2,80a9b4 <__udivdi3+0x600>
  80a4f0:	1825883a 	mov	r18,r3
  80a4f4:	a80c943a 	slli	r6,r21,16
  80a4f8:	0007883a 	mov	r3,zero
  80a4fc:	3484b03a 	or	r2,r6,r18
  80a500:	00000306 	br	80a510 <__udivdi3+0x15c>
  80a504:	29c00e2e 	bgeu	r5,r7,80a540 <__udivdi3+0x18c>
  80a508:	0007883a 	mov	r3,zero
  80a50c:	0005883a 	mov	r2,zero
  80a510:	dfc00a17 	ldw	ra,40(sp)
  80a514:	df000917 	ldw	fp,36(sp)
  80a518:	ddc00817 	ldw	r23,32(sp)
  80a51c:	dd800717 	ldw	r22,28(sp)
  80a520:	dd400617 	ldw	r21,24(sp)
  80a524:	dd000517 	ldw	r20,20(sp)
  80a528:	dcc00417 	ldw	r19,16(sp)
  80a52c:	dc800317 	ldw	r18,12(sp)
  80a530:	dc400217 	ldw	r17,8(sp)
  80a534:	dc000117 	ldw	r16,4(sp)
  80a538:	dec00b04 	addi	sp,sp,44
  80a53c:	f800283a 	ret
  80a540:	00bfffd4 	movui	r2,65535
  80a544:	11c05f2e 	bgeu	r2,r7,80a6c4 <__udivdi3+0x310>
  80a548:	00804034 	movhi	r2,256
  80a54c:	3880fc36 	bltu	r7,r2,80a940 <__udivdi3+0x58c>
  80a550:	3804d63a 	srli	r2,r7,24
  80a554:	01000604 	movi	r4,24
  80a558:	00c02074 	movhi	r3,129
  80a55c:	10c7883a 	add	r3,r2,r3
  80a560:	1882e303 	ldbu	r2,2956(r3)
  80a564:	00c00804 	movi	r3,32
  80a568:	1105883a 	add	r2,r2,r4
  80a56c:	18a3c83a 	sub	r17,r3,r2
  80a570:	1880901e 	bne	r3,r2,80a7b4 <__udivdi3+0x400>
  80a574:	3c80f736 	bltu	r7,r18,80a954 <__udivdi3+0x5a0>
  80a578:	a185403a 	cmpgeu	r2,r20,r6
  80a57c:	0007883a 	mov	r3,zero
  80a580:	003fe306 	br	80a510 <__udivdi3+0x15c>
  80a584:	3000041e 	bne	r6,zero,80a598 <__udivdi3+0x1e4>
  80a588:	000b883a 	mov	r5,zero
  80a58c:	01000044 	movi	r4,1
  80a590:	080b08c0 	call	80b08c <__udivsi3>
  80a594:	1021883a 	mov	r16,r2
  80a598:	00bfffd4 	movui	r2,65535
  80a59c:	14003f2e 	bgeu	r2,r16,80a69c <__udivdi3+0x2e8>
  80a5a0:	00804034 	movhi	r2,256
  80a5a4:	8080f136 	bltu	r16,r2,80a96c <__udivdi3+0x5b8>
  80a5a8:	8006d63a 	srli	r3,r16,24
  80a5ac:	04400604 	movi	r17,24
  80a5b0:	00802074 	movhi	r2,129
  80a5b4:	1885883a 	add	r2,r3,r2
  80a5b8:	1082e303 	ldbu	r2,2956(r2)
  80a5bc:	00c00804 	movi	r3,32
  80a5c0:	1463883a 	add	r17,r2,r17
  80a5c4:	1c45c83a 	sub	r2,r3,r17
  80a5c8:	1c40431e 	bne	r3,r17,80a6d8 <__udivdi3+0x324>
  80a5cc:	802cd43a 	srli	r22,r16,16
  80a5d0:	9423c83a 	sub	r17,r18,r16
  80a5d4:	853fffcc 	andi	r20,r16,65535
  80a5d8:	00c00044 	movi	r3,1
  80a5dc:	b00b883a 	mov	r5,r22
  80a5e0:	8809883a 	mov	r4,r17
  80a5e4:	d8c00015 	stw	r3,0(sp)
  80a5e8:	080b0f00 	call	80b0f0 <__umodsi3>
  80a5ec:	b00b883a 	mov	r5,r22
  80a5f0:	8809883a 	mov	r4,r17
  80a5f4:	1025883a 	mov	r18,r2
  80a5f8:	080b08c0 	call	80b08c <__udivsi3>
  80a5fc:	1009883a 	mov	r4,r2
  80a600:	a00b883a 	mov	r5,r20
  80a604:	102b883a 	mov	r21,r2
  80a608:	080b14c0 	call	80b14c <__mulsi3>
  80a60c:	9024943a 	slli	r18,r18,16
  80a610:	9808d43a 	srli	r4,r19,16
  80a614:	d8c00017 	ldw	r3,0(sp)
  80a618:	9108b03a 	or	r4,r18,r4
  80a61c:	2080052e 	bgeu	r4,r2,80a634 <__udivdi3+0x280>
  80a620:	2409883a 	add	r4,r4,r16
  80a624:	a97fffc4 	addi	r5,r21,-1
  80a628:	24000136 	bltu	r4,r16,80a630 <__udivdi3+0x27c>
  80a62c:	2080e636 	bltu	r4,r2,80a9c8 <__udivdi3+0x614>
  80a630:	282b883a 	mov	r21,r5
  80a634:	20a3c83a 	sub	r17,r4,r2
  80a638:	8809883a 	mov	r4,r17
  80a63c:	b00b883a 	mov	r5,r22
  80a640:	d8c00015 	stw	r3,0(sp)
  80a644:	080b0f00 	call	80b0f0 <__umodsi3>
  80a648:	8809883a 	mov	r4,r17
  80a64c:	1023883a 	mov	r17,r2
  80a650:	b00b883a 	mov	r5,r22
  80a654:	8822943a 	slli	r17,r17,16
  80a658:	080b08c0 	call	80b08c <__udivsi3>
  80a65c:	a00b883a 	mov	r5,r20
  80a660:	1009883a 	mov	r4,r2
  80a664:	9cffffcc 	andi	r19,r19,65535
  80a668:	1025883a 	mov	r18,r2
  80a66c:	8ce6b03a 	or	r19,r17,r19
  80a670:	080b14c0 	call	80b14c <__mulsi3>
  80a674:	d8c00017 	ldw	r3,0(sp)
  80a678:	9880052e 	bgeu	r19,r2,80a690 <__udivdi3+0x2dc>
  80a67c:	84e7883a 	add	r19,r16,r19
  80a680:	913fffc4 	addi	r4,r18,-1
  80a684:	9c000136 	bltu	r19,r16,80a68c <__udivdi3+0x2d8>
  80a688:	9880c836 	bltu	r19,r2,80a9ac <__udivdi3+0x5f8>
  80a68c:	2025883a 	mov	r18,r4
  80a690:	a80c943a 	slli	r6,r21,16
  80a694:	3484b03a 	or	r2,r6,r18
  80a698:	003f9d06 	br	80a510 <__udivdi3+0x15c>
  80a69c:	80804030 	cmpltui	r2,r16,256
  80a6a0:	1000b81e 	bne	r2,zero,80a984 <__udivdi3+0x5d0>
  80a6a4:	8006d23a 	srli	r3,r16,8
  80a6a8:	04400204 	movi	r17,8
  80a6ac:	003fc006 	br	80a5b0 <__udivdi3+0x1fc>
  80a6b0:	30804030 	cmpltui	r2,r6,256
  80a6b4:	1000a51e 	bne	r2,zero,80a94c <__udivdi3+0x598>
  80a6b8:	3006d23a 	srli	r3,r6,8
  80a6bc:	04400204 	movi	r17,8
  80a6c0:	003f5506 	br	80a418 <__udivdi3+0x64>
  80a6c4:	38804030 	cmpltui	r2,r7,256
  80a6c8:	1000a51e 	bne	r2,zero,80a960 <__udivdi3+0x5ac>
  80a6cc:	3804d23a 	srli	r2,r7,8
  80a6d0:	01000204 	movi	r4,8
  80a6d4:	003fa006 	br	80a558 <__udivdi3+0x1a4>
  80a6d8:	80a0983a 	sll	r16,r16,r2
  80a6dc:	946ed83a 	srl	r23,r18,r17
  80a6e0:	9086983a 	sll	r3,r18,r2
  80a6e4:	802cd43a 	srli	r22,r16,16
  80a6e8:	a462d83a 	srl	r17,r20,r17
  80a6ec:	b809883a 	mov	r4,r23
  80a6f0:	b00b883a 	mov	r5,r22
  80a6f4:	88eab03a 	or	r21,r17,r3
  80a6f8:	a0a6983a 	sll	r19,r20,r2
  80a6fc:	080b0f00 	call	80b0f0 <__umodsi3>
  80a700:	b809883a 	mov	r4,r23
  80a704:	b00b883a 	mov	r5,r22
  80a708:	1025883a 	mov	r18,r2
  80a70c:	853fffcc 	andi	r20,r16,65535
  80a710:	080b08c0 	call	80b08c <__udivsi3>
  80a714:	a009883a 	mov	r4,r20
  80a718:	100b883a 	mov	r5,r2
  80a71c:	102f883a 	mov	r23,r2
  80a720:	080b14c0 	call	80b14c <__mulsi3>
  80a724:	9024943a 	slli	r18,r18,16
  80a728:	a808d43a 	srli	r4,r21,16
  80a72c:	9108b03a 	or	r4,r18,r4
  80a730:	2080062e 	bgeu	r4,r2,80a74c <__udivdi3+0x398>
  80a734:	2409883a 	add	r4,r4,r16
  80a738:	b8ffffc4 	addi	r3,r23,-1
  80a73c:	24009936 	bltu	r4,r16,80a9a4 <__udivdi3+0x5f0>
  80a740:	2080982e 	bgeu	r4,r2,80a9a4 <__udivdi3+0x5f0>
  80a744:	bdffff84 	addi	r23,r23,-2
  80a748:	2409883a 	add	r4,r4,r16
  80a74c:	20a3c83a 	sub	r17,r4,r2
  80a750:	8809883a 	mov	r4,r17
  80a754:	b00b883a 	mov	r5,r22
  80a758:	080b0f00 	call	80b0f0 <__umodsi3>
  80a75c:	1025883a 	mov	r18,r2
  80a760:	8809883a 	mov	r4,r17
  80a764:	b00b883a 	mov	r5,r22
  80a768:	9024943a 	slli	r18,r18,16
  80a76c:	080b08c0 	call	80b08c <__udivsi3>
  80a770:	100b883a 	mov	r5,r2
  80a774:	a009883a 	mov	r4,r20
  80a778:	ac7fffcc 	andi	r17,r21,65535
  80a77c:	1039883a 	mov	fp,r2
  80a780:	9462b03a 	or	r17,r18,r17
  80a784:	080b14c0 	call	80b14c <__mulsi3>
  80a788:	8880062e 	bgeu	r17,r2,80a7a4 <__udivdi3+0x3f0>
  80a78c:	8c23883a 	add	r17,r17,r16
  80a790:	e0ffffc4 	addi	r3,fp,-1
  80a794:	8c007f36 	bltu	r17,r16,80a994 <__udivdi3+0x5e0>
  80a798:	88807e2e 	bgeu	r17,r2,80a994 <__udivdi3+0x5e0>
  80a79c:	e73fff84 	addi	fp,fp,-2
  80a7a0:	8c23883a 	add	r17,r17,r16
  80a7a4:	b806943a 	slli	r3,r23,16
  80a7a8:	88a3c83a 	sub	r17,r17,r2
  80a7ac:	1f06b03a 	or	r3,r3,fp
  80a7b0:	003f8a06 	br	80a5dc <__udivdi3+0x228>
  80a7b4:	30a6d83a 	srl	r19,r6,r2
  80a7b8:	3c4e983a 	sll	r7,r7,r17
  80a7bc:	90a0d83a 	srl	r16,r18,r2
  80a7c0:	9446983a 	sll	r3,r18,r17
  80a7c4:	99e6b03a 	or	r19,r19,r7
  80a7c8:	a084d83a 	srl	r2,r20,r2
  80a7cc:	9838d43a 	srli	fp,r19,16
  80a7d0:	8009883a 	mov	r4,r16
  80a7d4:	10eab03a 	or	r21,r2,r3
  80a7d8:	e00b883a 	mov	r5,fp
  80a7dc:	346c983a 	sll	r22,r6,r17
  80a7e0:	dd400015 	stw	r21,0(sp)
  80a7e4:	080b0f00 	call	80b0f0 <__umodsi3>
  80a7e8:	8009883a 	mov	r4,r16
  80a7ec:	e00b883a 	mov	r5,fp
  80a7f0:	102f883a 	mov	r23,r2
  80a7f4:	9cbfffcc 	andi	r18,r19,65535
  80a7f8:	080b08c0 	call	80b08c <__udivsi3>
  80a7fc:	9009883a 	mov	r4,r18
  80a800:	100b883a 	mov	r5,r2
  80a804:	1021883a 	mov	r16,r2
  80a808:	080b14c0 	call	80b14c <__mulsi3>
  80a80c:	b82e943a 	slli	r23,r23,16
  80a810:	a808d43a 	srli	r4,r21,16
  80a814:	b908b03a 	or	r4,r23,r4
  80a818:	2080062e 	bgeu	r4,r2,80a834 <__udivdi3+0x480>
  80a81c:	24c9883a 	add	r4,r4,r19
  80a820:	817fffc4 	addi	r5,r16,-1
  80a824:	24c05d36 	bltu	r4,r19,80a99c <__udivdi3+0x5e8>
  80a828:	20805c2e 	bgeu	r4,r2,80a99c <__udivdi3+0x5e8>
  80a82c:	843fff84 	addi	r16,r16,-2
  80a830:	24c9883a 	add	r4,r4,r19
  80a834:	20abc83a 	sub	r21,r4,r2
  80a838:	a809883a 	mov	r4,r21
  80a83c:	e00b883a 	mov	r5,fp
  80a840:	080b0f00 	call	80b0f0 <__umodsi3>
  80a844:	a809883a 	mov	r4,r21
  80a848:	e00b883a 	mov	r5,fp
  80a84c:	102b883a 	mov	r21,r2
  80a850:	080b08c0 	call	80b08c <__udivsi3>
  80a854:	9009883a 	mov	r4,r18
  80a858:	100b883a 	mov	r5,r2
  80a85c:	102f883a 	mov	r23,r2
  80a860:	080b14c0 	call	80b14c <__mulsi3>
  80a864:	d8c00017 	ldw	r3,0(sp)
  80a868:	a82a943a 	slli	r21,r21,16
  80a86c:	100d883a 	mov	r6,r2
  80a870:	1cbfffcc 	andi	r18,r3,65535
  80a874:	aca4b03a 	or	r18,r21,r18
  80a878:	9080062e 	bgeu	r18,r2,80a894 <__udivdi3+0x4e0>
  80a87c:	94e5883a 	add	r18,r18,r19
  80a880:	b8bfffc4 	addi	r2,r23,-1
  80a884:	94c04136 	bltu	r18,r19,80a98c <__udivdi3+0x5d8>
  80a888:	9180402e 	bgeu	r18,r6,80a98c <__udivdi3+0x5d8>
  80a88c:	bdffff84 	addi	r23,r23,-2
  80a890:	94e5883a 	add	r18,r18,r19
  80a894:	8004943a 	slli	r2,r16,16
  80a898:	bd7fffcc 	andi	r21,r23,65535
  80a89c:	b73fffcc 	andi	fp,r22,65535
  80a8a0:	15e0b03a 	or	r16,r2,r23
  80a8a4:	8026d43a 	srli	r19,r16,16
  80a8a8:	a809883a 	mov	r4,r21
  80a8ac:	e00b883a 	mov	r5,fp
  80a8b0:	91a5c83a 	sub	r18,r18,r6
  80a8b4:	b02cd43a 	srli	r22,r22,16
  80a8b8:	080b14c0 	call	80b14c <__mulsi3>
  80a8bc:	9809883a 	mov	r4,r19
  80a8c0:	e00b883a 	mov	r5,fp
  80a8c4:	102f883a 	mov	r23,r2
  80a8c8:	080b14c0 	call	80b14c <__mulsi3>
  80a8cc:	9809883a 	mov	r4,r19
  80a8d0:	b00b883a 	mov	r5,r22
  80a8d4:	1027883a 	mov	r19,r2
  80a8d8:	080b14c0 	call	80b14c <__mulsi3>
  80a8dc:	a809883a 	mov	r4,r21
  80a8e0:	b00b883a 	mov	r5,r22
  80a8e4:	102b883a 	mov	r21,r2
  80a8e8:	080b14c0 	call	80b14c <__mulsi3>
  80a8ec:	b806d43a 	srli	r3,r23,16
  80a8f0:	14c5883a 	add	r2,r2,r19
  80a8f4:	1887883a 	add	r3,r3,r2
  80a8f8:	1cc0022e 	bgeu	r3,r19,80a904 <__udivdi3+0x550>
  80a8fc:	00800074 	movhi	r2,1
  80a900:	a8ab883a 	add	r21,r21,r2
  80a904:	1804d43a 	srli	r2,r3,16
  80a908:	156b883a 	add	r21,r2,r21
  80a90c:	95400936 	bltu	r18,r21,80a934 <__udivdi3+0x580>
  80a910:	95400326 	beq	r18,r21,80a920 <__udivdi3+0x56c>
  80a914:	8005883a 	mov	r2,r16
  80a918:	0007883a 	mov	r3,zero
  80a91c:	003efc06 	br	80a510 <__udivdi3+0x15c>
  80a920:	1806943a 	slli	r3,r3,16
  80a924:	a44c983a 	sll	r6,r20,r17
  80a928:	bdffffcc 	andi	r23,r23,65535
  80a92c:	1dc7883a 	add	r3,r3,r23
  80a930:	30fff82e 	bgeu	r6,r3,80a914 <__udivdi3+0x560>
  80a934:	80bfffc4 	addi	r2,r16,-1
  80a938:	0007883a 	mov	r3,zero
  80a93c:	003ef406 	br	80a510 <__udivdi3+0x15c>
  80a940:	3804d43a 	srli	r2,r7,16
  80a944:	01000404 	movi	r4,16
  80a948:	003f0306 	br	80a558 <__udivdi3+0x1a4>
  80a94c:	3007883a 	mov	r3,r6
  80a950:	003eb106 	br	80a418 <__udivdi3+0x64>
  80a954:	0007883a 	mov	r3,zero
  80a958:	00800044 	movi	r2,1
  80a95c:	003eec06 	br	80a510 <__udivdi3+0x15c>
  80a960:	3805883a 	mov	r2,r7
  80a964:	0009883a 	mov	r4,zero
  80a968:	003efb06 	br	80a558 <__udivdi3+0x1a4>
  80a96c:	8006d43a 	srli	r3,r16,16
  80a970:	04400404 	movi	r17,16
  80a974:	003f0e06 	br	80a5b0 <__udivdi3+0x1fc>
  80a978:	3006d43a 	srli	r3,r6,16
  80a97c:	04400404 	movi	r17,16
  80a980:	003ea506 	br	80a418 <__udivdi3+0x64>
  80a984:	8007883a 	mov	r3,r16
  80a988:	003f0906 	br	80a5b0 <__udivdi3+0x1fc>
  80a98c:	102f883a 	mov	r23,r2
  80a990:	003fc006 	br	80a894 <__udivdi3+0x4e0>
  80a994:	1839883a 	mov	fp,r3
  80a998:	003f8206 	br	80a7a4 <__udivdi3+0x3f0>
  80a99c:	2821883a 	mov	r16,r5
  80a9a0:	003fa406 	br	80a834 <__udivdi3+0x480>
  80a9a4:	182f883a 	mov	r23,r3
  80a9a8:	003f6806 	br	80a74c <__udivdi3+0x398>
  80a9ac:	94bfff84 	addi	r18,r18,-2
  80a9b0:	003f3706 	br	80a690 <__udivdi3+0x2dc>
  80a9b4:	94bfff84 	addi	r18,r18,-2
  80a9b8:	003ece06 	br	80a4f4 <__udivdi3+0x140>
  80a9bc:	ad7fff84 	addi	r21,r21,-2
  80a9c0:	2409883a 	add	r4,r4,r16
  80a9c4:	003eb606 	br	80a4a0 <__udivdi3+0xec>
  80a9c8:	ad7fff84 	addi	r21,r21,-2
  80a9cc:	2409883a 	add	r4,r4,r16
  80a9d0:	003f1806 	br	80a634 <__udivdi3+0x280>

0080a9d4 <__umoddi3>:
  80a9d4:	defff304 	addi	sp,sp,-52
  80a9d8:	dc400415 	stw	r17,16(sp)
  80a9dc:	dc000315 	stw	r16,12(sp)
  80a9e0:	dfc00c15 	stw	ra,48(sp)
  80a9e4:	df000b15 	stw	fp,44(sp)
  80a9e8:	ddc00a15 	stw	r23,40(sp)
  80a9ec:	dd800915 	stw	r22,36(sp)
  80a9f0:	dd400815 	stw	r21,32(sp)
  80a9f4:	dd000715 	stw	r20,28(sp)
  80a9f8:	dcc00615 	stw	r19,24(sp)
  80a9fc:	dc800515 	stw	r18,20(sp)
  80aa00:	2823883a 	mov	r17,r5
  80aa04:	2021883a 	mov	r16,r4
  80aa08:	38003b1e 	bne	r7,zero,80aaf8 <__umoddi3+0x124>
  80aa0c:	3825883a 	mov	r18,r7
  80aa10:	3029883a 	mov	r20,r6
  80aa14:	2027883a 	mov	r19,r4
  80aa18:	29805b2e 	bgeu	r5,r6,80ab88 <__umoddi3+0x1b4>
  80aa1c:	00bfffd4 	movui	r2,65535
  80aa20:	282d883a 	mov	r22,r5
  80aa24:	11809a2e 	bgeu	r2,r6,80ac90 <__umoddi3+0x2bc>
  80aa28:	00804034 	movhi	r2,256
  80aa2c:	30814436 	bltu	r6,r2,80af40 <__umoddi3+0x56c>
  80aa30:	3006d63a 	srli	r3,r6,24
  80aa34:	04800604 	movi	r18,24
  80aa38:	00802074 	movhi	r2,129
  80aa3c:	1885883a 	add	r2,r3,r2
  80aa40:	1082e303 	ldbu	r2,2956(r2)
  80aa44:	00c00804 	movi	r3,32
  80aa48:	1485883a 	add	r2,r2,r18
  80aa4c:	18a5c83a 	sub	r18,r3,r2
  80aa50:	18800526 	beq	r3,r2,80aa68 <__umoddi3+0x94>
  80aa54:	8ca2983a 	sll	r17,r17,r18
  80aa58:	8084d83a 	srl	r2,r16,r2
  80aa5c:	34a8983a 	sll	r20,r6,r18
  80aa60:	84a6983a 	sll	r19,r16,r18
  80aa64:	146cb03a 	or	r22,r2,r17
  80aa68:	a02ed43a 	srli	r23,r20,16
  80aa6c:	b009883a 	mov	r4,r22
  80aa70:	a57fffcc 	andi	r21,r20,65535
  80aa74:	b80b883a 	mov	r5,r23
  80aa78:	080b0f00 	call	80b0f0 <__umodsi3>
  80aa7c:	b80b883a 	mov	r5,r23
  80aa80:	b009883a 	mov	r4,r22
  80aa84:	1023883a 	mov	r17,r2
  80aa88:	080b08c0 	call	80b08c <__udivsi3>
  80aa8c:	a809883a 	mov	r4,r21
  80aa90:	100b883a 	mov	r5,r2
  80aa94:	080b14c0 	call	80b14c <__mulsi3>
  80aa98:	8822943a 	slli	r17,r17,16
  80aa9c:	9808d43a 	srli	r4,r19,16
  80aaa0:	8908b03a 	or	r4,r17,r4
  80aaa4:	2080042e 	bgeu	r4,r2,80aab8 <__umoddi3+0xe4>
  80aaa8:	2509883a 	add	r4,r4,r20
  80aaac:	25000236 	bltu	r4,r20,80aab8 <__umoddi3+0xe4>
  80aab0:	2080012e 	bgeu	r4,r2,80aab8 <__umoddi3+0xe4>
  80aab4:	2509883a 	add	r4,r4,r20
  80aab8:	20a1c83a 	sub	r16,r4,r2
  80aabc:	b80b883a 	mov	r5,r23
  80aac0:	8009883a 	mov	r4,r16
  80aac4:	080b0f00 	call	80b0f0 <__umodsi3>
  80aac8:	b80b883a 	mov	r5,r23
  80aacc:	8009883a 	mov	r4,r16
  80aad0:	1023883a 	mov	r17,r2
  80aad4:	080b08c0 	call	80b08c <__udivsi3>
  80aad8:	8822943a 	slli	r17,r17,16
  80aadc:	100b883a 	mov	r5,r2
  80aae0:	a809883a 	mov	r4,r21
  80aae4:	080b14c0 	call	80b14c <__mulsi3>
  80aae8:	98ffffcc 	andi	r3,r19,65535
  80aaec:	88c6b03a 	or	r3,r17,r3
  80aaf0:	18805e2e 	bgeu	r3,r2,80ac6c <__umoddi3+0x298>
  80aaf4:	00005906 	br	80ac5c <__umoddi3+0x288>
  80aaf8:	2005883a 	mov	r2,r4
  80aafc:	29c00d2e 	bgeu	r5,r7,80ab34 <__umoddi3+0x160>
  80ab00:	2807883a 	mov	r3,r5
  80ab04:	dfc00c17 	ldw	ra,48(sp)
  80ab08:	df000b17 	ldw	fp,44(sp)
  80ab0c:	ddc00a17 	ldw	r23,40(sp)
  80ab10:	dd800917 	ldw	r22,36(sp)
  80ab14:	dd400817 	ldw	r21,32(sp)
  80ab18:	dd000717 	ldw	r20,28(sp)
  80ab1c:	dcc00617 	ldw	r19,24(sp)
  80ab20:	dc800517 	ldw	r18,20(sp)
  80ab24:	dc400417 	ldw	r17,16(sp)
  80ab28:	dc000317 	ldw	r16,12(sp)
  80ab2c:	dec00d04 	addi	sp,sp,52
  80ab30:	f800283a 	ret
  80ab34:	013fffd4 	movui	r4,65535
  80ab38:	2807883a 	mov	r3,r5
  80ab3c:	21c0592e 	bgeu	r4,r7,80aca4 <__umoddi3+0x2d0>
  80ab40:	01004034 	movhi	r4,256
  80ab44:	39010336 	bltu	r7,r4,80af54 <__umoddi3+0x580>
  80ab48:	3808d63a 	srli	r4,r7,24
  80ab4c:	02000604 	movi	r8,24
  80ab50:	01402074 	movhi	r5,129
  80ab54:	214b883a 	add	r5,r4,r5
  80ab58:	2d02e303 	ldbu	r20,2956(r5)
  80ab5c:	01000804 	movi	r4,32
  80ab60:	a229883a 	add	r20,r20,r8
  80ab64:	252bc83a 	sub	r21,r4,r20
  80ab68:	2500531e 	bne	r4,r20,80acb8 <__umoddi3+0x2e4>
  80ab6c:	3c400136 	bltu	r7,r17,80ab74 <__umoddi3+0x1a0>
  80ab70:	81bfe436 	bltu	r16,r6,80ab04 <__umoddi3+0x130>
  80ab74:	8185c83a 	sub	r2,r16,r6
  80ab78:	89cfc83a 	sub	r7,r17,r7
  80ab7c:	8087803a 	cmpltu	r3,r16,r2
  80ab80:	38c7c83a 	sub	r3,r7,r3
  80ab84:	003fdf06 	br	80ab04 <__umoddi3+0x130>
  80ab88:	3000041e 	bne	r6,zero,80ab9c <__umoddi3+0x1c8>
  80ab8c:	000b883a 	mov	r5,zero
  80ab90:	01000044 	movi	r4,1
  80ab94:	080b08c0 	call	80b08c <__udivsi3>
  80ab98:	1029883a 	mov	r20,r2
  80ab9c:	00bfffd4 	movui	r2,65535
  80aba0:	1500362e 	bgeu	r2,r20,80ac7c <__umoddi3+0x2a8>
  80aba4:	00804034 	movhi	r2,256
  80aba8:	a080ed36 	bltu	r20,r2,80af60 <__umoddi3+0x58c>
  80abac:	a006d63a 	srli	r3,r20,24
  80abb0:	04800604 	movi	r18,24
  80abb4:	00802074 	movhi	r2,129
  80abb8:	1885883a 	add	r2,r3,r2
  80abbc:	1582e303 	ldbu	r22,2956(r2)
  80abc0:	00800804 	movi	r2,32
  80abc4:	b4ad883a 	add	r22,r22,r18
  80abc8:	15a5c83a 	sub	r18,r2,r22
  80abcc:	1580a51e 	bne	r2,r22,80ae64 <__umoddi3+0x490>
  80abd0:	a02ed43a 	srli	r23,r20,16
  80abd4:	8d23c83a 	sub	r17,r17,r20
  80abd8:	a57fffcc 	andi	r21,r20,65535
  80abdc:	8809883a 	mov	r4,r17
  80abe0:	b80b883a 	mov	r5,r23
  80abe4:	080b0f00 	call	80b0f0 <__umodsi3>
  80abe8:	8809883a 	mov	r4,r17
  80abec:	b80b883a 	mov	r5,r23
  80abf0:	1023883a 	mov	r17,r2
  80abf4:	080b08c0 	call	80b08c <__udivsi3>
  80abf8:	1009883a 	mov	r4,r2
  80abfc:	a80b883a 	mov	r5,r21
  80ac00:	080b14c0 	call	80b14c <__mulsi3>
  80ac04:	8822943a 	slli	r17,r17,16
  80ac08:	9808d43a 	srli	r4,r19,16
  80ac0c:	8908b03a 	or	r4,r17,r4
  80ac10:	2080032e 	bgeu	r4,r2,80ac20 <__umoddi3+0x24c>
  80ac14:	2509883a 	add	r4,r4,r20
  80ac18:	25000136 	bltu	r4,r20,80ac20 <__umoddi3+0x24c>
  80ac1c:	2080dc36 	bltu	r4,r2,80af90 <__umoddi3+0x5bc>
  80ac20:	20a1c83a 	sub	r16,r4,r2
  80ac24:	b80b883a 	mov	r5,r23
  80ac28:	8009883a 	mov	r4,r16
  80ac2c:	080b0f00 	call	80b0f0 <__umodsi3>
  80ac30:	b80b883a 	mov	r5,r23
  80ac34:	8009883a 	mov	r4,r16
  80ac38:	1023883a 	mov	r17,r2
  80ac3c:	8822943a 	slli	r17,r17,16
  80ac40:	080b08c0 	call	80b08c <__udivsi3>
  80ac44:	a80b883a 	mov	r5,r21
  80ac48:	1009883a 	mov	r4,r2
  80ac4c:	080b14c0 	call	80b14c <__mulsi3>
  80ac50:	9cffffcc 	andi	r19,r19,65535
  80ac54:	8cc6b03a 	or	r3,r17,r19
  80ac58:	1880042e 	bgeu	r3,r2,80ac6c <__umoddi3+0x298>
  80ac5c:	1d07883a 	add	r3,r3,r20
  80ac60:	1d000236 	bltu	r3,r20,80ac6c <__umoddi3+0x298>
  80ac64:	1880012e 	bgeu	r3,r2,80ac6c <__umoddi3+0x298>
  80ac68:	1d07883a 	add	r3,r3,r20
  80ac6c:	1885c83a 	sub	r2,r3,r2
  80ac70:	1484d83a 	srl	r2,r2,r18
  80ac74:	0007883a 	mov	r3,zero
  80ac78:	003fa206 	br	80ab04 <__umoddi3+0x130>
  80ac7c:	a0804030 	cmpltui	r2,r20,256
  80ac80:	1000ba1e 	bne	r2,zero,80af6c <__umoddi3+0x598>
  80ac84:	a006d23a 	srli	r3,r20,8
  80ac88:	04800204 	movi	r18,8
  80ac8c:	003fc906 	br	80abb4 <__umoddi3+0x1e0>
  80ac90:	30804030 	cmpltui	r2,r6,256
  80ac94:	1000ad1e 	bne	r2,zero,80af4c <__umoddi3+0x578>
  80ac98:	3006d23a 	srli	r3,r6,8
  80ac9c:	04800204 	movi	r18,8
  80aca0:	003f6506 	br	80aa38 <__umoddi3+0x64>
  80aca4:	39004030 	cmpltui	r4,r7,256
  80aca8:	2000b21e 	bne	r4,zero,80af74 <__umoddi3+0x5a0>
  80acac:	3808d23a 	srli	r4,r7,8
  80acb0:	02000204 	movi	r8,8
  80acb4:	003fa606 	br	80ab50 <__umoddi3+0x17c>
  80acb8:	3d4e983a 	sll	r7,r7,r21
  80acbc:	3508d83a 	srl	r4,r6,r20
  80acc0:	8d2cd83a 	srl	r22,r17,r20
  80acc4:	8504d83a 	srl	r2,r16,r20
  80acc8:	21e4b03a 	or	r18,r4,r7
  80accc:	8d62983a 	sll	r17,r17,r21
  80acd0:	9026d43a 	srli	r19,r18,16
  80acd4:	354c983a 	sll	r6,r6,r21
  80acd8:	1444b03a 	or	r2,r2,r17
  80acdc:	b009883a 	mov	r4,r22
  80ace0:	980b883a 	mov	r5,r19
  80ace4:	d9800115 	stw	r6,4(sp)
  80ace8:	d8800015 	stw	r2,0(sp)
  80acec:	080b0f00 	call	80b0f0 <__umodsi3>
  80acf0:	980b883a 	mov	r5,r19
  80acf4:	b009883a 	mov	r4,r22
  80acf8:	102f883a 	mov	r23,r2
  80acfc:	947fffcc 	andi	r17,r18,65535
  80ad00:	080b08c0 	call	80b08c <__udivsi3>
  80ad04:	8809883a 	mov	r4,r17
  80ad08:	100b883a 	mov	r5,r2
  80ad0c:	1039883a 	mov	fp,r2
  80ad10:	080b14c0 	call	80b14c <__mulsi3>
  80ad14:	d8c00017 	ldw	r3,0(sp)
  80ad18:	b82e943a 	slli	r23,r23,16
  80ad1c:	8560983a 	sll	r16,r16,r21
  80ad20:	1808d43a 	srli	r4,r3,16
  80ad24:	b908b03a 	or	r4,r23,r4
  80ad28:	2080062e 	bgeu	r4,r2,80ad44 <__umoddi3+0x370>
  80ad2c:	2489883a 	add	r4,r4,r18
  80ad30:	e17fffc4 	addi	r5,fp,-1
  80ad34:	24809436 	bltu	r4,r18,80af88 <__umoddi3+0x5b4>
  80ad38:	2080932e 	bgeu	r4,r2,80af88 <__umoddi3+0x5b4>
  80ad3c:	e73fff84 	addi	fp,fp,-2
  80ad40:	2489883a 	add	r4,r4,r18
  80ad44:	20adc83a 	sub	r22,r4,r2
  80ad48:	980b883a 	mov	r5,r19
  80ad4c:	b009883a 	mov	r4,r22
  80ad50:	080b0f00 	call	80b0f0 <__umodsi3>
  80ad54:	980b883a 	mov	r5,r19
  80ad58:	b009883a 	mov	r4,r22
  80ad5c:	102f883a 	mov	r23,r2
  80ad60:	080b08c0 	call	80b08c <__udivsi3>
  80ad64:	100b883a 	mov	r5,r2
  80ad68:	8809883a 	mov	r4,r17
  80ad6c:	d8800215 	stw	r2,8(sp)
  80ad70:	080b14c0 	call	80b14c <__mulsi3>
  80ad74:	d8c00017 	ldw	r3,0(sp)
  80ad78:	b82e943a 	slli	r23,r23,16
  80ad7c:	d9400217 	ldw	r5,8(sp)
  80ad80:	1c7fffcc 	andi	r17,r3,65535
  80ad84:	bc62b03a 	or	r17,r23,r17
  80ad88:	8880062e 	bgeu	r17,r2,80ada4 <__umoddi3+0x3d0>
  80ad8c:	8ca3883a 	add	r17,r17,r18
  80ad90:	28ffffc4 	addi	r3,r5,-1
  80ad94:	8c807a36 	bltu	r17,r18,80af80 <__umoddi3+0x5ac>
  80ad98:	8880792e 	bgeu	r17,r2,80af80 <__umoddi3+0x5ac>
  80ad9c:	297fff84 	addi	r5,r5,-2
  80ada0:	8ca3883a 	add	r17,r17,r18
  80ada4:	e02c943a 	slli	r22,fp,16
  80ada8:	d9c00117 	ldw	r7,4(sp)
  80adac:	29bfffcc 	andi	r6,r5,65535
  80adb0:	b16cb03a 	or	r22,r22,r5
  80adb4:	38ffffcc 	andi	r3,r7,65535
  80adb8:	b02cd43a 	srli	r22,r22,16
  80adbc:	180b883a 	mov	r5,r3
  80adc0:	3009883a 	mov	r4,r6
  80adc4:	3838d43a 	srli	fp,r7,16
  80adc8:	182f883a 	mov	r23,r3
  80adcc:	d9800015 	stw	r6,0(sp)
  80add0:	88a3c83a 	sub	r17,r17,r2
  80add4:	080b14c0 	call	80b14c <__mulsi3>
  80add8:	b80b883a 	mov	r5,r23
  80addc:	b009883a 	mov	r4,r22
  80ade0:	102f883a 	mov	r23,r2
  80ade4:	080b14c0 	call	80b14c <__mulsi3>
  80ade8:	e00b883a 	mov	r5,fp
  80adec:	b009883a 	mov	r4,r22
  80adf0:	102d883a 	mov	r22,r2
  80adf4:	080b14c0 	call	80b14c <__mulsi3>
  80adf8:	d9800017 	ldw	r6,0(sp)
  80adfc:	e00b883a 	mov	r5,fp
  80ae00:	1039883a 	mov	fp,r2
  80ae04:	3009883a 	mov	r4,r6
  80ae08:	080b14c0 	call	80b14c <__mulsi3>
  80ae0c:	b808d43a 	srli	r4,r23,16
  80ae10:	1585883a 	add	r2,r2,r22
  80ae14:	2089883a 	add	r4,r4,r2
  80ae18:	2580022e 	bgeu	r4,r22,80ae24 <__umoddi3+0x450>
  80ae1c:	00800074 	movhi	r2,1
  80ae20:	e0b9883a 	add	fp,fp,r2
  80ae24:	2006d43a 	srli	r3,r4,16
  80ae28:	2008943a 	slli	r4,r4,16
  80ae2c:	bdffffcc 	andi	r23,r23,65535
  80ae30:	1f07883a 	add	r3,r3,fp
  80ae34:	25c9883a 	add	r4,r4,r23
  80ae38:	88c03a36 	bltu	r17,r3,80af24 <__umoddi3+0x550>
  80ae3c:	88c03826 	beq	r17,r3,80af20 <__umoddi3+0x54c>
  80ae40:	8109c83a 	sub	r4,r16,r4
  80ae44:	8121803a 	cmpltu	r16,r16,r4
  80ae48:	88c7c83a 	sub	r3,r17,r3
  80ae4c:	1c07c83a 	sub	r3,r3,r16
  80ae50:	1d04983a 	sll	r2,r3,r20
  80ae54:	2548d83a 	srl	r4,r4,r21
  80ae58:	1d46d83a 	srl	r3,r3,r21
  80ae5c:	1104b03a 	or	r2,r2,r4
  80ae60:	003f2806 	br	80ab04 <__umoddi3+0x130>
  80ae64:	a4a8983a 	sll	r20,r20,r18
  80ae68:	8da6d83a 	srl	r19,r17,r22
  80ae6c:	8ca2983a 	sll	r17,r17,r18
  80ae70:	a02ed43a 	srli	r23,r20,16
  80ae74:	9809883a 	mov	r4,r19
  80ae78:	85acd83a 	srl	r22,r16,r22
  80ae7c:	b80b883a 	mov	r5,r23
  80ae80:	080b0f00 	call	80b0f0 <__umodsi3>
  80ae84:	9809883a 	mov	r4,r19
  80ae88:	b80b883a 	mov	r5,r23
  80ae8c:	b46cb03a 	or	r22,r22,r17
  80ae90:	a57fffcc 	andi	r21,r20,65535
  80ae94:	1023883a 	mov	r17,r2
  80ae98:	080b08c0 	call	80b08c <__udivsi3>
  80ae9c:	a809883a 	mov	r4,r21
  80aea0:	100b883a 	mov	r5,r2
  80aea4:	080b14c0 	call	80b14c <__mulsi3>
  80aea8:	8822943a 	slli	r17,r17,16
  80aeac:	b008d43a 	srli	r4,r22,16
  80aeb0:	84a6983a 	sll	r19,r16,r18
  80aeb4:	8908b03a 	or	r4,r17,r4
  80aeb8:	2080042e 	bgeu	r4,r2,80aecc <__umoddi3+0x4f8>
  80aebc:	2509883a 	add	r4,r4,r20
  80aec0:	25000236 	bltu	r4,r20,80aecc <__umoddi3+0x4f8>
  80aec4:	2080012e 	bgeu	r4,r2,80aecc <__umoddi3+0x4f8>
  80aec8:	2509883a 	add	r4,r4,r20
  80aecc:	20a1c83a 	sub	r16,r4,r2
  80aed0:	8009883a 	mov	r4,r16
  80aed4:	b80b883a 	mov	r5,r23
  80aed8:	080b0f00 	call	80b0f0 <__umodsi3>
  80aedc:	8009883a 	mov	r4,r16
  80aee0:	1021883a 	mov	r16,r2
  80aee4:	b80b883a 	mov	r5,r23
  80aee8:	8020943a 	slli	r16,r16,16
  80aeec:	080b08c0 	call	80b08c <__udivsi3>
  80aef0:	100b883a 	mov	r5,r2
  80aef4:	a809883a 	mov	r4,r21
  80aef8:	b47fffcc 	andi	r17,r22,65535
  80aefc:	080b14c0 	call	80b14c <__mulsi3>
  80af00:	8462b03a 	or	r17,r16,r17
  80af04:	8880042e 	bgeu	r17,r2,80af18 <__umoddi3+0x544>
  80af08:	8d23883a 	add	r17,r17,r20
  80af0c:	8d000236 	bltu	r17,r20,80af18 <__umoddi3+0x544>
  80af10:	8880012e 	bgeu	r17,r2,80af18 <__umoddi3+0x544>
  80af14:	8d23883a 	add	r17,r17,r20
  80af18:	88a3c83a 	sub	r17,r17,r2
  80af1c:	003f2f06 	br	80abdc <__umoddi3+0x208>
  80af20:	813fc72e 	bgeu	r16,r4,80ae40 <__umoddi3+0x46c>
  80af24:	d8800117 	ldw	r2,4(sp)
  80af28:	20a7c83a 	sub	r19,r4,r2
  80af2c:	24c9803a 	cmpltu	r4,r4,r19
  80af30:	2489883a 	add	r4,r4,r18
  80af34:	1907c83a 	sub	r3,r3,r4
  80af38:	9809883a 	mov	r4,r19
  80af3c:	003fc006 	br	80ae40 <__umoddi3+0x46c>
  80af40:	3006d43a 	srli	r3,r6,16
  80af44:	04800404 	movi	r18,16
  80af48:	003ebb06 	br	80aa38 <__umoddi3+0x64>
  80af4c:	3007883a 	mov	r3,r6
  80af50:	003eb906 	br	80aa38 <__umoddi3+0x64>
  80af54:	3808d43a 	srli	r4,r7,16
  80af58:	02000404 	movi	r8,16
  80af5c:	003efc06 	br	80ab50 <__umoddi3+0x17c>
  80af60:	a006d43a 	srli	r3,r20,16
  80af64:	04800404 	movi	r18,16
  80af68:	003f1206 	br	80abb4 <__umoddi3+0x1e0>
  80af6c:	a007883a 	mov	r3,r20
  80af70:	003f1006 	br	80abb4 <__umoddi3+0x1e0>
  80af74:	3809883a 	mov	r4,r7
  80af78:	0011883a 	mov	r8,zero
  80af7c:	003ef406 	br	80ab50 <__umoddi3+0x17c>
  80af80:	180b883a 	mov	r5,r3
  80af84:	003f8706 	br	80ada4 <__umoddi3+0x3d0>
  80af88:	2839883a 	mov	fp,r5
  80af8c:	003f6d06 	br	80ad44 <__umoddi3+0x370>
  80af90:	2509883a 	add	r4,r4,r20
  80af94:	003f2206 	br	80ac20 <__umoddi3+0x24c>

0080af98 <__divsi3>:
  80af98:	20001a16 	blt	r4,zero,80b004 <__divsi3+0x6c>
  80af9c:	000f883a 	mov	r7,zero
  80afa0:	2800020e 	bge	r5,zero,80afac <__divsi3+0x14>
  80afa4:	014bc83a 	sub	r5,zero,r5
  80afa8:	39c0005c 	xori	r7,r7,1
  80afac:	200d883a 	mov	r6,r4
  80afb0:	00c00044 	movi	r3,1
  80afb4:	2900092e 	bgeu	r5,r4,80afdc <__divsi3+0x44>
  80afb8:	00800804 	movi	r2,32
  80afbc:	00c00044 	movi	r3,1
  80afc0:	00000106 	br	80afc8 <__divsi3+0x30>
  80afc4:	10001226 	beq	r2,zero,80b010 <__divsi3+0x78>
  80afc8:	294b883a 	add	r5,r5,r5
  80afcc:	10bfffc4 	addi	r2,r2,-1
  80afd0:	18c7883a 	add	r3,r3,r3
  80afd4:	293ffb36 	bltu	r5,r4,80afc4 <__divsi3+0x2c>
  80afd8:	18000d26 	beq	r3,zero,80b010 <__divsi3+0x78>
  80afdc:	0005883a 	mov	r2,zero
  80afe0:	31400236 	bltu	r6,r5,80afec <__divsi3+0x54>
  80afe4:	314dc83a 	sub	r6,r6,r5
  80afe8:	10c4b03a 	or	r2,r2,r3
  80afec:	1806d07a 	srli	r3,r3,1
  80aff0:	280ad07a 	srli	r5,r5,1
  80aff4:	183ffa1e 	bne	r3,zero,80afe0 <__divsi3+0x48>
  80aff8:	38000126 	beq	r7,zero,80b000 <__divsi3+0x68>
  80affc:	0085c83a 	sub	r2,zero,r2
  80b000:	f800283a 	ret
  80b004:	0109c83a 	sub	r4,zero,r4
  80b008:	01c00044 	movi	r7,1
  80b00c:	003fe406 	br	80afa0 <__divsi3+0x8>
  80b010:	0005883a 	mov	r2,zero
  80b014:	003ff806 	br	80aff8 <__divsi3+0x60>

0080b018 <__modsi3>:
  80b018:	20001916 	blt	r4,zero,80b080 <__modsi3+0x68>
  80b01c:	000f883a 	mov	r7,zero
  80b020:	2005883a 	mov	r2,r4
  80b024:	2800010e 	bge	r5,zero,80b02c <__modsi3+0x14>
  80b028:	014bc83a 	sub	r5,zero,r5
  80b02c:	00c00044 	movi	r3,1
  80b030:	2900092e 	bgeu	r5,r4,80b058 <__modsi3+0x40>
  80b034:	01800804 	movi	r6,32
  80b038:	00c00044 	movi	r3,1
  80b03c:	00000106 	br	80b044 <__modsi3+0x2c>
  80b040:	30000d26 	beq	r6,zero,80b078 <__modsi3+0x60>
  80b044:	294b883a 	add	r5,r5,r5
  80b048:	31bfffc4 	addi	r6,r6,-1
  80b04c:	18c7883a 	add	r3,r3,r3
  80b050:	293ffb36 	bltu	r5,r4,80b040 <__modsi3+0x28>
  80b054:	18000826 	beq	r3,zero,80b078 <__modsi3+0x60>
  80b058:	1806d07a 	srli	r3,r3,1
  80b05c:	11400136 	bltu	r2,r5,80b064 <__modsi3+0x4c>
  80b060:	1145c83a 	sub	r2,r2,r5
  80b064:	280ad07a 	srli	r5,r5,1
  80b068:	183ffb1e 	bne	r3,zero,80b058 <__modsi3+0x40>
  80b06c:	38000126 	beq	r7,zero,80b074 <__modsi3+0x5c>
  80b070:	0085c83a 	sub	r2,zero,r2
  80b074:	f800283a 	ret
  80b078:	2005883a 	mov	r2,r4
  80b07c:	003ffb06 	br	80b06c <__modsi3+0x54>
  80b080:	0109c83a 	sub	r4,zero,r4
  80b084:	01c00044 	movi	r7,1
  80b088:	003fe506 	br	80b020 <__modsi3+0x8>

0080b08c <__udivsi3>:
  80b08c:	200d883a 	mov	r6,r4
  80b090:	2900152e 	bgeu	r5,r4,80b0e8 <__udivsi3+0x5c>
  80b094:	28001416 	blt	r5,zero,80b0e8 <__udivsi3+0x5c>
  80b098:	00800804 	movi	r2,32
  80b09c:	00c00044 	movi	r3,1
  80b0a0:	00000206 	br	80b0ac <__udivsi3+0x20>
  80b0a4:	10000e26 	beq	r2,zero,80b0e0 <__udivsi3+0x54>
  80b0a8:	28000516 	blt	r5,zero,80b0c0 <__udivsi3+0x34>
  80b0ac:	294b883a 	add	r5,r5,r5
  80b0b0:	10bfffc4 	addi	r2,r2,-1
  80b0b4:	18c7883a 	add	r3,r3,r3
  80b0b8:	293ffa36 	bltu	r5,r4,80b0a4 <__udivsi3+0x18>
  80b0bc:	18000826 	beq	r3,zero,80b0e0 <__udivsi3+0x54>
  80b0c0:	0005883a 	mov	r2,zero
  80b0c4:	31400236 	bltu	r6,r5,80b0d0 <__udivsi3+0x44>
  80b0c8:	314dc83a 	sub	r6,r6,r5
  80b0cc:	10c4b03a 	or	r2,r2,r3
  80b0d0:	1806d07a 	srli	r3,r3,1
  80b0d4:	280ad07a 	srli	r5,r5,1
  80b0d8:	183ffa1e 	bne	r3,zero,80b0c4 <__udivsi3+0x38>
  80b0dc:	f800283a 	ret
  80b0e0:	0005883a 	mov	r2,zero
  80b0e4:	f800283a 	ret
  80b0e8:	00c00044 	movi	r3,1
  80b0ec:	003ff406 	br	80b0c0 <__udivsi3+0x34>

0080b0f0 <__umodsi3>:
  80b0f0:	2005883a 	mov	r2,r4
  80b0f4:	2900132e 	bgeu	r5,r4,80b144 <__umodsi3+0x54>
  80b0f8:	28001216 	blt	r5,zero,80b144 <__umodsi3+0x54>
  80b0fc:	01800804 	movi	r6,32
  80b100:	00c00044 	movi	r3,1
  80b104:	00000206 	br	80b110 <__umodsi3+0x20>
  80b108:	30000c26 	beq	r6,zero,80b13c <__umodsi3+0x4c>
  80b10c:	28000516 	blt	r5,zero,80b124 <__umodsi3+0x34>
  80b110:	294b883a 	add	r5,r5,r5
  80b114:	31bfffc4 	addi	r6,r6,-1
  80b118:	18c7883a 	add	r3,r3,r3
  80b11c:	293ffa36 	bltu	r5,r4,80b108 <__umodsi3+0x18>
  80b120:	18000626 	beq	r3,zero,80b13c <__umodsi3+0x4c>
  80b124:	1806d07a 	srli	r3,r3,1
  80b128:	11400136 	bltu	r2,r5,80b130 <__umodsi3+0x40>
  80b12c:	1145c83a 	sub	r2,r2,r5
  80b130:	280ad07a 	srli	r5,r5,1
  80b134:	183ffb1e 	bne	r3,zero,80b124 <__umodsi3+0x34>
  80b138:	f800283a 	ret
  80b13c:	2005883a 	mov	r2,r4
  80b140:	f800283a 	ret
  80b144:	00c00044 	movi	r3,1
  80b148:	003ff606 	br	80b124 <__umodsi3+0x34>

0080b14c <__mulsi3>:
  80b14c:	0005883a 	mov	r2,zero
  80b150:	20000726 	beq	r4,zero,80b170 <__mulsi3+0x24>
  80b154:	20c0004c 	andi	r3,r4,1
  80b158:	2008d07a 	srli	r4,r4,1
  80b15c:	18000126 	beq	r3,zero,80b164 <__mulsi3+0x18>
  80b160:	1145883a 	add	r2,r2,r5
  80b164:	294b883a 	add	r5,r5,r5
  80b168:	203ffa1e 	bne	r4,zero,80b154 <__mulsi3+0x8>
  80b16c:	f800283a 	ret
  80b170:	f800283a 	ret

0080b174 <__adddf3>:
  80b174:	02000434 	movhi	r8,16
  80b178:	423fffc4 	addi	r8,r8,-1
  80b17c:	2806d53a 	srli	r3,r5,20
  80b180:	3804d53a 	srli	r2,r7,20
  80b184:	2a14703a 	and	r10,r5,r8
  80b188:	3a12703a 	and	r9,r7,r8
  80b18c:	280ad7fa 	srli	r5,r5,31
  80b190:	501490fa 	slli	r10,r10,3
  80b194:	2018d77a 	srli	r12,r4,29
  80b198:	481290fa 	slli	r9,r9,3
  80b19c:	3016d77a 	srli	r11,r6,29
  80b1a0:	380ed7fa 	srli	r7,r7,31
  80b1a4:	defffb04 	addi	sp,sp,-20
  80b1a8:	dc800215 	stw	r18,8(sp)
  80b1ac:	dc000015 	stw	r16,0(sp)
  80b1b0:	1c81ffcc 	andi	r18,r3,2047
  80b1b4:	1081ffcc 	andi	r2,r2,2047
  80b1b8:	dfc00415 	stw	ra,16(sp)
  80b1bc:	dcc00315 	stw	r19,12(sp)
  80b1c0:	dc400115 	stw	r17,4(sp)
  80b1c4:	201c90fa 	slli	r14,r4,3
  80b1c8:	301a90fa 	slli	r13,r6,3
  80b1cc:	2821883a 	mov	r16,r5
  80b1d0:	6294b03a 	or	r10,r12,r10
  80b1d4:	5a52b03a 	or	r9,r11,r9
  80b1d8:	9087c83a 	sub	r3,r18,r2
  80b1dc:	29c06126 	beq	r5,r7,80b364 <__adddf3+0x1f0>
  80b1e0:	00c0550e 	bge	zero,r3,80b338 <__adddf3+0x1c4>
  80b1e4:	10007326 	beq	r2,zero,80b3b4 <__adddf3+0x240>
  80b1e8:	9081ffd8 	cmpnei	r2,r18,2047
  80b1ec:	1000bd26 	beq	r2,zero,80b4e4 <__adddf3+0x370>
  80b1f0:	4a402034 	orhi	r9,r9,128
  80b1f4:	18800e48 	cmpgei	r2,r3,57
  80b1f8:	1000ef1e 	bne	r2,zero,80b5b8 <__adddf3+0x444>
  80b1fc:	18800808 	cmpgei	r2,r3,32
  80b200:	1001321e 	bne	r2,zero,80b6cc <__adddf3+0x558>
  80b204:	00800804 	movi	r2,32
  80b208:	10c5c83a 	sub	r2,r2,r3
  80b20c:	68c8d83a 	srl	r4,r13,r3
  80b210:	48a2983a 	sll	r17,r9,r2
  80b214:	689a983a 	sll	r13,r13,r2
  80b218:	48c6d83a 	srl	r3,r9,r3
  80b21c:	8922b03a 	or	r17,r17,r4
  80b220:	681ac03a 	cmpne	r13,r13,zero
  80b224:	8b62b03a 	or	r17,r17,r13
  80b228:	50d5c83a 	sub	r10,r10,r3
  80b22c:	7463c83a 	sub	r17,r14,r17
  80b230:	7451803a 	cmpltu	r8,r14,r17
  80b234:	5211c83a 	sub	r8,r10,r8
  80b238:	4080202c 	andhi	r2,r8,128
  80b23c:	10008d26 	beq	r2,zero,80b474 <__adddf3+0x300>
  80b240:	02402034 	movhi	r9,128
  80b244:	4a7fffc4 	addi	r9,r9,-1
  80b248:	4266703a 	and	r19,r8,r9
  80b24c:	9800b326 	beq	r19,zero,80b51c <__adddf3+0x3a8>
  80b250:	9809883a 	mov	r4,r19
  80b254:	080d8600 	call	80d860 <__clzsi2>
  80b258:	10fffe04 	addi	r3,r2,-8
  80b25c:	02000804 	movi	r8,32
  80b260:	40d1c83a 	sub	r8,r8,r3
  80b264:	8a10d83a 	srl	r8,r17,r8
  80b268:	98d2983a 	sll	r9,r19,r3
  80b26c:	88e2983a 	sll	r17,r17,r3
  80b270:	4250b03a 	or	r8,r8,r9
  80b274:	1c80b216 	blt	r3,r18,80b540 <__adddf3+0x3cc>
  80b278:	1c87c83a 	sub	r3,r3,r18
  80b27c:	19000044 	addi	r4,r3,1
  80b280:	20800808 	cmpgei	r2,r4,32
  80b284:	10006f1e 	bne	r2,zero,80b444 <__adddf3+0x2d0>
  80b288:	00800804 	movi	r2,32
  80b28c:	1105c83a 	sub	r2,r2,r4
  80b290:	8906d83a 	srl	r3,r17,r4
  80b294:	88a2983a 	sll	r17,r17,r2
  80b298:	4084983a 	sll	r2,r8,r2
  80b29c:	4110d83a 	srl	r8,r8,r4
  80b2a0:	8822c03a 	cmpne	r17,r17,zero
  80b2a4:	10c4b03a 	or	r2,r2,r3
  80b2a8:	1462b03a 	or	r17,r2,r17
  80b2ac:	0025883a 	mov	r18,zero
  80b2b0:	888001cc 	andi	r2,r17,7
  80b2b4:	10000726 	beq	r2,zero,80b2d4 <__adddf3+0x160>
  80b2b8:	888003cc 	andi	r2,r17,15
  80b2bc:	10800120 	cmpeqi	r2,r2,4
  80b2c0:	1000041e 	bne	r2,zero,80b2d4 <__adddf3+0x160>
  80b2c4:	88c00104 	addi	r3,r17,4
  80b2c8:	1c63803a 	cmpltu	r17,r3,r17
  80b2cc:	4451883a 	add	r8,r8,r17
  80b2d0:	1823883a 	mov	r17,r3
  80b2d4:	4080202c 	andhi	r2,r8,128
  80b2d8:	10006826 	beq	r2,zero,80b47c <__adddf3+0x308>
  80b2dc:	90c00044 	addi	r3,r18,1
  80b2e0:	1881ffe0 	cmpeqi	r2,r3,2047
  80b2e4:	18c1ffcc 	andi	r3,r3,2047
  80b2e8:	10007a1e 	bne	r2,zero,80b4d4 <__adddf3+0x360>
  80b2ec:	00bfe034 	movhi	r2,65408
  80b2f0:	10bfffc4 	addi	r2,r2,-1
  80b2f4:	4090703a 	and	r8,r8,r2
  80b2f8:	4004977a 	slli	r2,r8,29
  80b2fc:	4010927a 	slli	r8,r8,9
  80b300:	8822d0fa 	srli	r17,r17,3
  80b304:	4010d33a 	srli	r8,r8,12
  80b308:	1444b03a 	or	r2,r2,r17
  80b30c:	1806953a 	slli	r3,r3,20
  80b310:	802097fa 	slli	r16,r16,31
  80b314:	1a06b03a 	or	r3,r3,r8
  80b318:	1c06b03a 	or	r3,r3,r16
  80b31c:	dfc00417 	ldw	ra,16(sp)
  80b320:	dcc00317 	ldw	r19,12(sp)
  80b324:	dc800217 	ldw	r18,8(sp)
  80b328:	dc400117 	ldw	r17,4(sp)
  80b32c:	dc000017 	ldw	r16,0(sp)
  80b330:	dec00504 	addi	sp,sp,20
  80b334:	f800283a 	ret
  80b338:	18002626 	beq	r3,zero,80b3d4 <__adddf3+0x260>
  80b33c:	1487c83a 	sub	r3,r2,r18
  80b340:	9000ba1e 	bne	r18,zero,80b62c <__adddf3+0x4b8>
  80b344:	5388b03a 	or	r4,r10,r14
  80b348:	20011826 	beq	r4,zero,80b7ac <__adddf3+0x638>
  80b34c:	193fffc4 	addi	r4,r3,-1
  80b350:	20015726 	beq	r4,zero,80b8b0 <__adddf3+0x73c>
  80b354:	18c1ffd8 	cmpnei	r3,r3,2047
  80b358:	18013026 	beq	r3,zero,80b81c <__adddf3+0x6a8>
  80b35c:	2007883a 	mov	r3,r4
  80b360:	0000b506 	br	80b638 <__adddf3+0x4c4>
  80b364:	00c07b0e 	bge	zero,r3,80b554 <__adddf3+0x3e0>
  80b368:	10002e26 	beq	r2,zero,80b424 <__adddf3+0x2b0>
  80b36c:	9081ffd8 	cmpnei	r2,r18,2047
  80b370:	10005c26 	beq	r2,zero,80b4e4 <__adddf3+0x370>
  80b374:	4a402034 	orhi	r9,r9,128
  80b378:	18800e48 	cmpgei	r2,r3,57
  80b37c:	10004b1e 	bne	r2,zero,80b4ac <__adddf3+0x338>
  80b380:	18800808 	cmpgei	r2,r3,32
  80b384:	1000ec26 	beq	r2,zero,80b738 <__adddf3+0x5c4>
  80b388:	1c7ff804 	addi	r17,r3,-32
  80b38c:	19000820 	cmpeqi	r4,r3,32
  80b390:	4c44d83a 	srl	r2,r9,r17
  80b394:	2000041e 	bne	r4,zero,80b3a8 <__adddf3+0x234>
  80b398:	01001004 	movi	r4,64
  80b39c:	20c7c83a 	sub	r3,r4,r3
  80b3a0:	48d2983a 	sll	r9,r9,r3
  80b3a4:	6a5ab03a 	or	r13,r13,r9
  80b3a8:	6822c03a 	cmpne	r17,r13,zero
  80b3ac:	88a2b03a 	or	r17,r17,r2
  80b3b0:	00004006 	br	80b4b4 <__adddf3+0x340>
  80b3b4:	4b44b03a 	or	r2,r9,r13
  80b3b8:	10008226 	beq	r2,zero,80b5c4 <__adddf3+0x450>
  80b3bc:	18bfffc4 	addi	r2,r3,-1
  80b3c0:	10011026 	beq	r2,zero,80b804 <__adddf3+0x690>
  80b3c4:	18c1ffd8 	cmpnei	r3,r3,2047
  80b3c8:	18004626 	beq	r3,zero,80b4e4 <__adddf3+0x370>
  80b3cc:	1007883a 	mov	r3,r2
  80b3d0:	003f8806 	br	80b1f4 <__adddf3+0x80>
  80b3d4:	90800044 	addi	r2,r18,1
  80b3d8:	1081ff8c 	andi	r2,r2,2046
  80b3dc:	1000a51e 	bne	r2,zero,80b674 <__adddf3+0x500>
  80b3e0:	538ab03a 	or	r5,r10,r14
  80b3e4:	4b44b03a 	or	r2,r9,r13
  80b3e8:	9000f81e 	bne	r18,zero,80b7cc <__adddf3+0x658>
  80b3ec:	28013726 	beq	r5,zero,80b8cc <__adddf3+0x758>
  80b3f0:	10011226 	beq	r2,zero,80b83c <__adddf3+0x6c8>
  80b3f4:	7363c83a 	sub	r17,r14,r13
  80b3f8:	7445803a 	cmpltu	r2,r14,r17
  80b3fc:	5251c83a 	sub	r8,r10,r9
  80b400:	4091c83a 	sub	r8,r8,r2
  80b404:	4080202c 	andhi	r2,r8,128
  80b408:	10018f26 	beq	r2,zero,80ba48 <__adddf3+0x8d4>
  80b40c:	6ba3c83a 	sub	r17,r13,r14
  80b410:	4a95c83a 	sub	r10,r9,r10
  80b414:	6c51803a 	cmpltu	r8,r13,r17
  80b418:	5211c83a 	sub	r8,r10,r8
  80b41c:	3821883a 	mov	r16,r7
  80b420:	003fa306 	br	80b2b0 <__adddf3+0x13c>
  80b424:	4b44b03a 	or	r2,r9,r13
  80b428:	10006626 	beq	r2,zero,80b5c4 <__adddf3+0x450>
  80b42c:	18bfffc4 	addi	r2,r3,-1
  80b430:	1000ec26 	beq	r2,zero,80b7e4 <__adddf3+0x670>
  80b434:	18c1ffd8 	cmpnei	r3,r3,2047
  80b438:	18012d26 	beq	r3,zero,80b8f0 <__adddf3+0x77c>
  80b43c:	1007883a 	mov	r3,r2
  80b440:	003fcd06 	br	80b378 <__adddf3+0x204>
  80b444:	18fff844 	addi	r3,r3,-31
  80b448:	20800820 	cmpeqi	r2,r4,32
  80b44c:	40c6d83a 	srl	r3,r8,r3
  80b450:	1000041e 	bne	r2,zero,80b464 <__adddf3+0x2f0>
  80b454:	00801004 	movi	r2,64
  80b458:	1109c83a 	sub	r4,r2,r4
  80b45c:	4110983a 	sll	r8,r8,r4
  80b460:	8a22b03a 	or	r17,r17,r8
  80b464:	8822c03a 	cmpne	r17,r17,zero
  80b468:	88e2b03a 	or	r17,r17,r3
  80b46c:	0011883a 	mov	r8,zero
  80b470:	0025883a 	mov	r18,zero
  80b474:	888001cc 	andi	r2,r17,7
  80b478:	103f8f1e 	bne	r2,zero,80b2b8 <__adddf3+0x144>
  80b47c:	8822d0fa 	srli	r17,r17,3
  80b480:	4004977a 	slli	r2,r8,29
  80b484:	4014d0fa 	srli	r10,r8,3
  80b488:	9007883a 	mov	r3,r18
  80b48c:	8884b03a 	or	r2,r17,r2
  80b490:	1901ffe0 	cmpeqi	r4,r3,2047
  80b494:	2000191e 	bne	r4,zero,80b4fc <__adddf3+0x388>
  80b498:	02000434 	movhi	r8,16
  80b49c:	423fffc4 	addi	r8,r8,-1
  80b4a0:	5210703a 	and	r8,r10,r8
  80b4a4:	18c1ffcc 	andi	r3,r3,2047
  80b4a8:	003f9806 	br	80b30c <__adddf3+0x198>
  80b4ac:	4b62b03a 	or	r17,r9,r13
  80b4b0:	8822c03a 	cmpne	r17,r17,zero
  80b4b4:	8ba3883a 	add	r17,r17,r14
  80b4b8:	8b91803a 	cmpltu	r8,r17,r14
  80b4bc:	4291883a 	add	r8,r8,r10
  80b4c0:	4080202c 	andhi	r2,r8,128
  80b4c4:	103feb26 	beq	r2,zero,80b474 <__adddf3+0x300>
  80b4c8:	94800044 	addi	r18,r18,1
  80b4cc:	9081ffe0 	cmpeqi	r2,r18,2047
  80b4d0:	10007426 	beq	r2,zero,80b6a4 <__adddf3+0x530>
  80b4d4:	00c1ffc4 	movi	r3,2047
  80b4d8:	0011883a 	mov	r8,zero
  80b4dc:	0005883a 	mov	r2,zero
  80b4e0:	003f8a06 	br	80b30c <__adddf3+0x198>
  80b4e4:	500a977a 	slli	r5,r10,29
  80b4e8:	00c80034 	movhi	r3,8192
  80b4ec:	18ffffc4 	addi	r3,r3,-1
  80b4f0:	5014d0fa 	srli	r10,r10,3
  80b4f4:	20c4703a 	and	r2,r4,r3
  80b4f8:	1144b03a 	or	r2,r2,r5
  80b4fc:	1286b03a 	or	r3,r2,r10
  80b500:	18015426 	beq	r3,zero,80ba54 <__adddf3+0x8e0>
  80b504:	00c00434 	movhi	r3,16
  80b508:	18ffffc4 	addi	r3,r3,-1
  80b50c:	52000234 	orhi	r8,r10,8
  80b510:	40d0703a 	and	r8,r8,r3
  80b514:	00c1ffc4 	movi	r3,2047
  80b518:	003f7c06 	br	80b30c <__adddf3+0x198>
  80b51c:	8809883a 	mov	r4,r17
  80b520:	080d8600 	call	80d860 <__clzsi2>
  80b524:	10c00604 	addi	r3,r2,24
  80b528:	19000808 	cmpgei	r4,r3,32
  80b52c:	203f4b26 	beq	r4,zero,80b25c <__adddf3+0xe8>
  80b530:	123ffe04 	addi	r8,r2,-8
  80b534:	8a10983a 	sll	r8,r17,r8
  80b538:	0023883a 	mov	r17,zero
  80b53c:	1cbf4e0e 	bge	r3,r18,80b278 <__adddf3+0x104>
  80b540:	00bfe034 	movhi	r2,65408
  80b544:	10bfffc4 	addi	r2,r2,-1
  80b548:	90e5c83a 	sub	r18,r18,r3
  80b54c:	4090703a 	and	r8,r8,r2
  80b550:	003f5706 	br	80b2b0 <__adddf3+0x13c>
  80b554:	18002226 	beq	r3,zero,80b5e0 <__adddf3+0x46c>
  80b558:	1487c83a 	sub	r3,r2,r18
  80b55c:	90006e26 	beq	r18,zero,80b718 <__adddf3+0x5a4>
  80b560:	1101ffd8 	cmpnei	r4,r2,2047
  80b564:	2000e926 	beq	r4,zero,80b90c <__adddf3+0x798>
  80b568:	52802034 	orhi	r10,r10,128
  80b56c:	19000e48 	cmpgei	r4,r3,57
  80b570:	2000b91e 	bne	r4,zero,80b858 <__adddf3+0x6e4>
  80b574:	19000808 	cmpgei	r4,r3,32
  80b578:	2001101e 	bne	r4,zero,80b9bc <__adddf3+0x848>
  80b57c:	01000804 	movi	r4,32
  80b580:	20c9c83a 	sub	r4,r4,r3
  80b584:	5122983a 	sll	r17,r10,r4
  80b588:	70cad83a 	srl	r5,r14,r3
  80b58c:	7108983a 	sll	r4,r14,r4
  80b590:	50d4d83a 	srl	r10,r10,r3
  80b594:	8962b03a 	or	r17,r17,r5
  80b598:	2008c03a 	cmpne	r4,r4,zero
  80b59c:	8922b03a 	or	r17,r17,r4
  80b5a0:	4a93883a 	add	r9,r9,r10
  80b5a4:	8b63883a 	add	r17,r17,r13
  80b5a8:	8b51803a 	cmpltu	r8,r17,r13
  80b5ac:	4251883a 	add	r8,r8,r9
  80b5b0:	1025883a 	mov	r18,r2
  80b5b4:	003fc206 	br	80b4c0 <__adddf3+0x34c>
  80b5b8:	4b62b03a 	or	r17,r9,r13
  80b5bc:	8822c03a 	cmpne	r17,r17,zero
  80b5c0:	003f1a06 	br	80b22c <__adddf3+0xb8>
  80b5c4:	500c977a 	slli	r6,r10,29
  80b5c8:	01480034 	movhi	r5,8192
  80b5cc:	297fffc4 	addi	r5,r5,-1
  80b5d0:	2144703a 	and	r2,r4,r5
  80b5d4:	5014d0fa 	srli	r10,r10,3
  80b5d8:	1184b03a 	or	r2,r2,r6
  80b5dc:	003fac06 	br	80b490 <__adddf3+0x31c>
  80b5e0:	90800044 	addi	r2,r18,1
  80b5e4:	1141ff8c 	andi	r5,r2,2046
  80b5e8:	28005e1e 	bne	r5,zero,80b764 <__adddf3+0x5f0>
  80b5ec:	5384b03a 	or	r2,r10,r14
  80b5f0:	9000a71e 	bne	r18,zero,80b890 <__adddf3+0x71c>
  80b5f4:	1000e526 	beq	r2,zero,80b98c <__adddf3+0x818>
  80b5f8:	4b44b03a 	or	r2,r9,r13
  80b5fc:	10008f26 	beq	r2,zero,80b83c <__adddf3+0x6c8>
  80b600:	7363883a 	add	r17,r14,r13
  80b604:	5255883a 	add	r10,r10,r9
  80b608:	8b91803a 	cmpltu	r8,r17,r14
  80b60c:	5211883a 	add	r8,r10,r8
  80b610:	4080202c 	andhi	r2,r8,128
  80b614:	103f9726 	beq	r2,zero,80b474 <__adddf3+0x300>
  80b618:	00bfe034 	movhi	r2,65408
  80b61c:	10bfffc4 	addi	r2,r2,-1
  80b620:	4090703a 	and	r8,r8,r2
  80b624:	04800044 	movi	r18,1
  80b628:	003f9206 	br	80b474 <__adddf3+0x300>
  80b62c:	1101ffd8 	cmpnei	r4,r2,2047
  80b630:	20007a26 	beq	r4,zero,80b81c <__adddf3+0x6a8>
  80b634:	52802034 	orhi	r10,r10,128
  80b638:	19000e48 	cmpgei	r4,r3,57
  80b63c:	20002e1e 	bne	r4,zero,80b6f8 <__adddf3+0x584>
  80b640:	19000808 	cmpgei	r4,r3,32
  80b644:	2000871e 	bne	r4,zero,80b864 <__adddf3+0x6f0>
  80b648:	01000804 	movi	r4,32
  80b64c:	20c9c83a 	sub	r4,r4,r3
  80b650:	5122983a 	sll	r17,r10,r4
  80b654:	70cad83a 	srl	r5,r14,r3
  80b658:	711c983a 	sll	r14,r14,r4
  80b65c:	50d4d83a 	srl	r10,r10,r3
  80b660:	8962b03a 	or	r17,r17,r5
  80b664:	701cc03a 	cmpne	r14,r14,zero
  80b668:	8ba2b03a 	or	r17,r17,r14
  80b66c:	4a93c83a 	sub	r9,r9,r10
  80b670:	00002306 	br	80b700 <__adddf3+0x58c>
  80b674:	7363c83a 	sub	r17,r14,r13
  80b678:	5267c83a 	sub	r19,r10,r9
  80b67c:	7451803a 	cmpltu	r8,r14,r17
  80b680:	9a27c83a 	sub	r19,r19,r8
  80b684:	9880202c 	andhi	r2,r19,128
  80b688:	1000421e 	bne	r2,zero,80b794 <__adddf3+0x620>
  80b68c:	8cc4b03a 	or	r2,r17,r19
  80b690:	103eee1e 	bne	r2,zero,80b24c <__adddf3+0xd8>
  80b694:	0015883a 	mov	r10,zero
  80b698:	0021883a 	mov	r16,zero
  80b69c:	003f7e06 	br	80b498 <__adddf3+0x324>
  80b6a0:	04800084 	movi	r18,2
  80b6a4:	00bfe034 	movhi	r2,65408
  80b6a8:	10bfffc4 	addi	r2,r2,-1
  80b6ac:	8806d07a 	srli	r3,r17,1
  80b6b0:	4090703a 	and	r8,r8,r2
  80b6b4:	400497fa 	slli	r2,r8,31
  80b6b8:	8c40004c 	andi	r17,r17,1
  80b6bc:	1c62b03a 	or	r17,r3,r17
  80b6c0:	4010d07a 	srli	r8,r8,1
  80b6c4:	1462b03a 	or	r17,r2,r17
  80b6c8:	003ef906 	br	80b2b0 <__adddf3+0x13c>
  80b6cc:	1c7ff804 	addi	r17,r3,-32
  80b6d0:	19000820 	cmpeqi	r4,r3,32
  80b6d4:	4c44d83a 	srl	r2,r9,r17
  80b6d8:	2000041e 	bne	r4,zero,80b6ec <__adddf3+0x578>
  80b6dc:	01001004 	movi	r4,64
  80b6e0:	20c7c83a 	sub	r3,r4,r3
  80b6e4:	48d2983a 	sll	r9,r9,r3
  80b6e8:	6a5ab03a 	or	r13,r13,r9
  80b6ec:	6822c03a 	cmpne	r17,r13,zero
  80b6f0:	88a2b03a 	or	r17,r17,r2
  80b6f4:	003ecd06 	br	80b22c <__adddf3+0xb8>
  80b6f8:	5394b03a 	or	r10,r10,r14
  80b6fc:	5022c03a 	cmpne	r17,r10,zero
  80b700:	6c63c83a 	sub	r17,r13,r17
  80b704:	6c51803a 	cmpltu	r8,r13,r17
  80b708:	4a11c83a 	sub	r8,r9,r8
  80b70c:	3821883a 	mov	r16,r7
  80b710:	1025883a 	mov	r18,r2
  80b714:	003ec806 	br	80b238 <__adddf3+0xc4>
  80b718:	5388b03a 	or	r4,r10,r14
  80b71c:	20008226 	beq	r4,zero,80b928 <__adddf3+0x7b4>
  80b720:	193fffc4 	addi	r4,r3,-1
  80b724:	2000b026 	beq	r4,zero,80b9e8 <__adddf3+0x874>
  80b728:	18c1ffd8 	cmpnei	r3,r3,2047
  80b72c:	18007726 	beq	r3,zero,80b90c <__adddf3+0x798>
  80b730:	2007883a 	mov	r3,r4
  80b734:	003f8d06 	br	80b56c <__adddf3+0x3f8>
  80b738:	00800804 	movi	r2,32
  80b73c:	10c5c83a 	sub	r2,r2,r3
  80b740:	68c8d83a 	srl	r4,r13,r3
  80b744:	48a2983a 	sll	r17,r9,r2
  80b748:	689a983a 	sll	r13,r13,r2
  80b74c:	48c6d83a 	srl	r3,r9,r3
  80b750:	8922b03a 	or	r17,r17,r4
  80b754:	681ac03a 	cmpne	r13,r13,zero
  80b758:	8b62b03a 	or	r17,r17,r13
  80b75c:	50d5883a 	add	r10,r10,r3
  80b760:	003f5406 	br	80b4b4 <__adddf3+0x340>
  80b764:	10c1ffe0 	cmpeqi	r3,r2,2047
  80b768:	183f5a1e 	bne	r3,zero,80b4d4 <__adddf3+0x360>
  80b76c:	7351883a 	add	r8,r14,r13
  80b770:	4387803a 	cmpltu	r3,r8,r14
  80b774:	5255883a 	add	r10,r10,r9
  80b778:	50c7883a 	add	r3,r10,r3
  80b77c:	401ad07a 	srli	r13,r8,1
  80b780:	182297fa 	slli	r17,r3,31
  80b784:	1810d07a 	srli	r8,r3,1
  80b788:	1025883a 	mov	r18,r2
  80b78c:	8b62b03a 	or	r17,r17,r13
  80b790:	003f3806 	br	80b474 <__adddf3+0x300>
  80b794:	6ba3c83a 	sub	r17,r13,r14
  80b798:	4a93c83a 	sub	r9,r9,r10
  80b79c:	6c51803a 	cmpltu	r8,r13,r17
  80b7a0:	4a27c83a 	sub	r19,r9,r8
  80b7a4:	3821883a 	mov	r16,r7
  80b7a8:	003ea806 	br	80b24c <__adddf3+0xd8>
  80b7ac:	480a977a 	slli	r5,r9,29
  80b7b0:	01080034 	movhi	r4,8192
  80b7b4:	213fffc4 	addi	r4,r4,-1
  80b7b8:	3104703a 	and	r2,r6,r4
  80b7bc:	4814d0fa 	srli	r10,r9,3
  80b7c0:	1144b03a 	or	r2,r2,r5
  80b7c4:	3821883a 	mov	r16,r7
  80b7c8:	003f3106 	br	80b490 <__adddf3+0x31c>
  80b7cc:	28005d1e 	bne	r5,zero,80b944 <__adddf3+0x7d0>
  80b7d0:	1000121e 	bne	r2,zero,80b81c <__adddf3+0x6a8>
  80b7d4:	0021883a 	mov	r16,zero
  80b7d8:	4015883a 	mov	r10,r8
  80b7dc:	00bfffc4 	movi	r2,-1
  80b7e0:	003f4806 	br	80b504 <__adddf3+0x390>
  80b7e4:	7363883a 	add	r17,r14,r13
  80b7e8:	5255883a 	add	r10,r10,r9
  80b7ec:	8b91803a 	cmpltu	r8,r17,r14
  80b7f0:	5211883a 	add	r8,r10,r8
  80b7f4:	4080202c 	andhi	r2,r8,128
  80b7f8:	103fa91e 	bne	r2,zero,80b6a0 <__adddf3+0x52c>
  80b7fc:	04800044 	movi	r18,1
  80b800:	003f1c06 	br	80b474 <__adddf3+0x300>
  80b804:	7363c83a 	sub	r17,r14,r13
  80b808:	5255c83a 	sub	r10,r10,r9
  80b80c:	7451803a 	cmpltu	r8,r14,r17
  80b810:	5211c83a 	sub	r8,r10,r8
  80b814:	04800044 	movi	r18,1
  80b818:	003e8706 	br	80b238 <__adddf3+0xc4>
  80b81c:	4806977a 	slli	r3,r9,29
  80b820:	00880034 	movhi	r2,8192
  80b824:	10bfffc4 	addi	r2,r2,-1
  80b828:	3084703a 	and	r2,r6,r2
  80b82c:	4814d0fa 	srli	r10,r9,3
  80b830:	10c4b03a 	or	r2,r2,r3
  80b834:	3821883a 	mov	r16,r7
  80b838:	003f3006 	br	80b4fc <__adddf3+0x388>
  80b83c:	500a977a 	slli	r5,r10,29
  80b840:	00880034 	movhi	r2,8192
  80b844:	10bfffc4 	addi	r2,r2,-1
  80b848:	2084703a 	and	r2,r4,r2
  80b84c:	5014d0fa 	srli	r10,r10,3
  80b850:	1144b03a 	or	r2,r2,r5
  80b854:	003f1006 	br	80b498 <__adddf3+0x324>
  80b858:	5394b03a 	or	r10,r10,r14
  80b85c:	5022c03a 	cmpne	r17,r10,zero
  80b860:	003f5006 	br	80b5a4 <__adddf3+0x430>
  80b864:	1c7ff804 	addi	r17,r3,-32
  80b868:	19400820 	cmpeqi	r5,r3,32
  80b86c:	5448d83a 	srl	r4,r10,r17
  80b870:	2800041e 	bne	r5,zero,80b884 <__adddf3+0x710>
  80b874:	01401004 	movi	r5,64
  80b878:	28c7c83a 	sub	r3,r5,r3
  80b87c:	50d4983a 	sll	r10,r10,r3
  80b880:	729cb03a 	or	r14,r14,r10
  80b884:	7022c03a 	cmpne	r17,r14,zero
  80b888:	8922b03a 	or	r17,r17,r4
  80b88c:	003f9c06 	br	80b700 <__adddf3+0x58c>
  80b890:	10005a1e 	bne	r2,zero,80b9fc <__adddf3+0x888>
  80b894:	4804977a 	slli	r2,r9,29
  80b898:	00c80034 	movhi	r3,8192
  80b89c:	18ffffc4 	addi	r3,r3,-1
  80b8a0:	30cc703a 	and	r6,r6,r3
  80b8a4:	4814d0fa 	srli	r10,r9,3
  80b8a8:	1184b03a 	or	r2,r2,r6
  80b8ac:	003f1306 	br	80b4fc <__adddf3+0x388>
  80b8b0:	6ba3c83a 	sub	r17,r13,r14
  80b8b4:	4a95c83a 	sub	r10,r9,r10
  80b8b8:	6c51803a 	cmpltu	r8,r13,r17
  80b8bc:	5211c83a 	sub	r8,r10,r8
  80b8c0:	3821883a 	mov	r16,r7
  80b8c4:	04800044 	movi	r18,1
  80b8c8:	003e5b06 	br	80b238 <__adddf3+0xc4>
  80b8cc:	103f7126 	beq	r2,zero,80b694 <__adddf3+0x520>
  80b8d0:	4808977a 	slli	r4,r9,29
  80b8d4:	00880034 	movhi	r2,8192
  80b8d8:	10bfffc4 	addi	r2,r2,-1
  80b8dc:	3084703a 	and	r2,r6,r2
  80b8e0:	4814d0fa 	srli	r10,r9,3
  80b8e4:	1104b03a 	or	r2,r2,r4
  80b8e8:	3821883a 	mov	r16,r7
  80b8ec:	003eea06 	br	80b498 <__adddf3+0x324>
  80b8f0:	5006977a 	slli	r3,r10,29
  80b8f4:	00880034 	movhi	r2,8192
  80b8f8:	10bfffc4 	addi	r2,r2,-1
  80b8fc:	2084703a 	and	r2,r4,r2
  80b900:	5014d0fa 	srli	r10,r10,3
  80b904:	10c4b03a 	or	r2,r2,r3
  80b908:	003efc06 	br	80b4fc <__adddf3+0x388>
  80b90c:	4806977a 	slli	r3,r9,29
  80b910:	00880034 	movhi	r2,8192
  80b914:	10bfffc4 	addi	r2,r2,-1
  80b918:	3084703a 	and	r2,r6,r2
  80b91c:	4814d0fa 	srli	r10,r9,3
  80b920:	10c4b03a 	or	r2,r2,r3
  80b924:	003ef506 	br	80b4fc <__adddf3+0x388>
  80b928:	4808977a 	slli	r4,r9,29
  80b92c:	00880034 	movhi	r2,8192
  80b930:	10bfffc4 	addi	r2,r2,-1
  80b934:	3084703a 	and	r2,r6,r2
  80b938:	4814d0fa 	srli	r10,r9,3
  80b93c:	1104b03a 	or	r2,r2,r4
  80b940:	003ed306 	br	80b490 <__adddf3+0x31c>
  80b944:	500a977a 	slli	r5,r10,29
  80b948:	5014d0fa 	srli	r10,r10,3
  80b94c:	10001626 	beq	r2,zero,80b9a8 <__adddf3+0x834>
  80b950:	00c80034 	movhi	r3,8192
  80b954:	18ffffc4 	addi	r3,r3,-1
  80b958:	20c4703a 	and	r2,r4,r3
  80b95c:	5100022c 	andhi	r4,r10,8
  80b960:	1144b03a 	or	r2,r2,r5
  80b964:	203ee526 	beq	r4,zero,80b4fc <__adddf3+0x388>
  80b968:	4808d0fa 	srli	r4,r9,3
  80b96c:	2140022c 	andhi	r5,r4,8
  80b970:	283ee21e 	bne	r5,zero,80b4fc <__adddf3+0x388>
  80b974:	4812977a 	slli	r9,r9,29
  80b978:	30c4703a 	and	r2,r6,r3
  80b97c:	3821883a 	mov	r16,r7
  80b980:	1244b03a 	or	r2,r2,r9
  80b984:	2015883a 	mov	r10,r4
  80b988:	003edc06 	br	80b4fc <__adddf3+0x388>
  80b98c:	4804977a 	slli	r2,r9,29
  80b990:	01080034 	movhi	r4,8192
  80b994:	213fffc4 	addi	r4,r4,-1
  80b998:	310c703a 	and	r6,r6,r4
  80b99c:	4814d0fa 	srli	r10,r9,3
  80b9a0:	1184b03a 	or	r2,r2,r6
  80b9a4:	003ebc06 	br	80b498 <__adddf3+0x324>
  80b9a8:	00880034 	movhi	r2,8192
  80b9ac:	10bfffc4 	addi	r2,r2,-1
  80b9b0:	2084703a 	and	r2,r4,r2
  80b9b4:	1144b03a 	or	r2,r2,r5
  80b9b8:	003ed006 	br	80b4fc <__adddf3+0x388>
  80b9bc:	193ff804 	addi	r4,r3,-32
  80b9c0:	19400820 	cmpeqi	r5,r3,32
  80b9c4:	5108d83a 	srl	r4,r10,r4
  80b9c8:	2800041e 	bne	r5,zero,80b9dc <__adddf3+0x868>
  80b9cc:	01401004 	movi	r5,64
  80b9d0:	28c7c83a 	sub	r3,r5,r3
  80b9d4:	50d4983a 	sll	r10,r10,r3
  80b9d8:	729cb03a 	or	r14,r14,r10
  80b9dc:	7022c03a 	cmpne	r17,r14,zero
  80b9e0:	8922b03a 	or	r17,r17,r4
  80b9e4:	003eef06 	br	80b5a4 <__adddf3+0x430>
  80b9e8:	7363883a 	add	r17,r14,r13
  80b9ec:	5255883a 	add	r10,r10,r9
  80b9f0:	8b51803a 	cmpltu	r8,r17,r13
  80b9f4:	5211883a 	add	r8,r10,r8
  80b9f8:	003f7e06 	br	80b7f4 <__adddf3+0x680>
  80b9fc:	4b50b03a 	or	r8,r9,r13
  80ba00:	500a977a 	slli	r5,r10,29
  80ba04:	5014d0fa 	srli	r10,r10,3
  80ba08:	403fe726 	beq	r8,zero,80b9a8 <__adddf3+0x834>
  80ba0c:	00c80034 	movhi	r3,8192
  80ba10:	18ffffc4 	addi	r3,r3,-1
  80ba14:	20c4703a 	and	r2,r4,r3
  80ba18:	5100022c 	andhi	r4,r10,8
  80ba1c:	1144b03a 	or	r2,r2,r5
  80ba20:	203eb626 	beq	r4,zero,80b4fc <__adddf3+0x388>
  80ba24:	4808d0fa 	srli	r4,r9,3
  80ba28:	2140022c 	andhi	r5,r4,8
  80ba2c:	283eb31e 	bne	r5,zero,80b4fc <__adddf3+0x388>
  80ba30:	4804977a 	slli	r2,r9,29
  80ba34:	30cc703a 	and	r6,r6,r3
  80ba38:	3821883a 	mov	r16,r7
  80ba3c:	3084b03a 	or	r2,r6,r2
  80ba40:	2015883a 	mov	r10,r4
  80ba44:	003ead06 	br	80b4fc <__adddf3+0x388>
  80ba48:	8a04b03a 	or	r2,r17,r8
  80ba4c:	103f1126 	beq	r2,zero,80b694 <__adddf3+0x520>
  80ba50:	003e8806 	br	80b474 <__adddf3+0x300>
  80ba54:	0005883a 	mov	r2,zero
  80ba58:	00c1ffc4 	movi	r3,2047
  80ba5c:	0011883a 	mov	r8,zero
  80ba60:	003e2a06 	br	80b30c <__adddf3+0x198>

0080ba64 <__divdf3>:
  80ba64:	2810d53a 	srli	r8,r5,20
  80ba68:	defff004 	addi	sp,sp,-64
  80ba6c:	dc000615 	stw	r16,24(sp)
  80ba70:	04000434 	movhi	r16,16
  80ba74:	df000e15 	stw	fp,56(sp)
  80ba78:	ddc00d15 	stw	r23,52(sp)
  80ba7c:	dd800c15 	stw	r22,48(sp)
  80ba80:	dd000a15 	stw	r20,40(sp)
  80ba84:	843fffc4 	addi	r16,r16,-1
  80ba88:	dfc00f15 	stw	ra,60(sp)
  80ba8c:	dd400b15 	stw	r21,44(sp)
  80ba90:	dcc00915 	stw	r19,36(sp)
  80ba94:	dc800815 	stw	r18,32(sp)
  80ba98:	dc400715 	stw	r17,28(sp)
  80ba9c:	4201ffcc 	andi	r8,r8,2047
  80baa0:	282ed7fa 	srli	r23,r5,31
  80baa4:	3039883a 	mov	fp,r6
  80baa8:	382d883a 	mov	r22,r7
  80baac:	2029883a 	mov	r20,r4
  80bab0:	2c20703a 	and	r16,r5,r16
  80bab4:	40006826 	beq	r8,zero,80bc58 <__divdf3+0x1f4>
  80bab8:	4081ffe0 	cmpeqi	r2,r8,2047
  80babc:	1000791e 	bne	r2,zero,80bca4 <__divdf3+0x240>
  80bac0:	2026d77a 	srli	r19,r4,29
  80bac4:	800a90fa 	slli	r5,r16,3
  80bac8:	202890fa 	slli	r20,r4,3
  80bacc:	44bf0044 	addi	r18,r8,-1023
  80bad0:	994ab03a 	or	r5,r19,r5
  80bad4:	2cc02034 	orhi	r19,r5,128
  80bad8:	0021883a 	mov	r16,zero
  80badc:	0023883a 	mov	r17,zero
  80bae0:	b010d53a 	srli	r8,r22,20
  80bae4:	00c00434 	movhi	r3,16
  80bae8:	18ffffc4 	addi	r3,r3,-1
  80baec:	4201ffcc 	andi	r8,r8,2047
  80baf0:	b02ad7fa 	srli	r21,r22,31
  80baf4:	b0ec703a 	and	r22,r22,r3
  80baf8:	40004626 	beq	r8,zero,80bc14 <__divdf3+0x1b0>
  80bafc:	4081ffe0 	cmpeqi	r2,r8,2047
  80bb00:	10006f1e 	bne	r2,zero,80bcc0 <__divdf3+0x25c>
  80bb04:	b00690fa 	slli	r3,r22,3
  80bb08:	e004d77a 	srli	r2,fp,29
  80bb0c:	e01290fa 	slli	r9,fp,3
  80bb10:	423f0044 	addi	r8,r8,-1023
  80bb14:	10c6b03a 	or	r3,r2,r3
  80bb18:	1d802034 	orhi	r22,r3,128
  80bb1c:	9225c83a 	sub	r18,r18,r8
  80bb20:	0007883a 	mov	r3,zero
  80bb24:	80800428 	cmpgeui	r2,r16,16
  80bb28:	bd4ef03a 	xor	r7,r23,r21
  80bb2c:	1000a71e 	bne	r2,zero,80bdcc <__divdf3+0x368>
  80bb30:	800c90ba 	slli	r6,r16,2
  80bb34:	00802074 	movhi	r2,129
  80bb38:	3085883a 	add	r2,r6,r2
  80bb3c:	10aed117 	ldw	r2,-17596(r2)
  80bb40:	1000683a 	jmp	r2
  80bb44:	0080bdcc 	andi	r2,zero,759
  80bb48:	0080bbf0 	cmpltui	r2,zero,751
  80bb4c:	0080bba0 	cmpeqi	r2,zero,750
  80bb50:	0080bc00 	call	80bc0 <__alt_mem_sdram-0x77f440>
  80bb54:	0080bba0 	cmpeqi	r2,zero,750
  80bb58:	0080bd70 	cmpltui	r2,zero,757
  80bb5c:	0080bba0 	cmpeqi	r2,zero,750
  80bb60:	0080bc00 	call	80bc0 <__alt_mem_sdram-0x77f440>
  80bb64:	0080bbf0 	cmpltui	r2,zero,751
  80bb68:	0080bbf0 	cmpltui	r2,zero,751
  80bb6c:	0080bd70 	cmpltui	r2,zero,757
  80bb70:	0080bc00 	call	80bc0 <__alt_mem_sdram-0x77f440>
  80bb74:	0080bb84 	movi	r2,750
  80bb78:	0080bb84 	movi	r2,750
  80bb7c:	0080bb84 	movi	r2,750
  80bb80:	0080bd88 	cmpgei	r2,zero,758
  80bb84:	b80f883a 	mov	r7,r23
  80bb88:	888000a0 	cmpeqi	r2,r17,2
  80bb8c:	1000181e 	bne	r2,zero,80bbf0 <__divdf3+0x18c>
  80bb90:	888000e0 	cmpeqi	r2,r17,3
  80bb94:	1001f61e 	bne	r2,zero,80c370 <__divdf3+0x90c>
  80bb98:	88800060 	cmpeqi	r2,r17,1
  80bb9c:	10006126 	beq	r2,zero,80bd24 <__divdf3+0x2c0>
  80bba0:	0007883a 	mov	r3,zero
  80bba4:	000b883a 	mov	r5,zero
  80bba8:	0029883a 	mov	r20,zero
  80bbac:	1806953a 	slli	r3,r3,20
  80bbb0:	380e97fa 	slli	r7,r7,31
  80bbb4:	a005883a 	mov	r2,r20
  80bbb8:	1946b03a 	or	r3,r3,r5
  80bbbc:	19c6b03a 	or	r3,r3,r7
  80bbc0:	dfc00f17 	ldw	ra,60(sp)
  80bbc4:	df000e17 	ldw	fp,56(sp)
  80bbc8:	ddc00d17 	ldw	r23,52(sp)
  80bbcc:	dd800c17 	ldw	r22,48(sp)
  80bbd0:	dd400b17 	ldw	r21,44(sp)
  80bbd4:	dd000a17 	ldw	r20,40(sp)
  80bbd8:	dcc00917 	ldw	r19,36(sp)
  80bbdc:	dc800817 	ldw	r18,32(sp)
  80bbe0:	dc400717 	ldw	r17,28(sp)
  80bbe4:	dc000617 	ldw	r16,24(sp)
  80bbe8:	dec01004 	addi	sp,sp,64
  80bbec:	f800283a 	ret
  80bbf0:	00c1ffc4 	movi	r3,2047
  80bbf4:	000b883a 	mov	r5,zero
  80bbf8:	0029883a 	mov	r20,zero
  80bbfc:	003feb06 	br	80bbac <__divdf3+0x148>
  80bc00:	a80f883a 	mov	r7,r21
  80bc04:	b027883a 	mov	r19,r22
  80bc08:	4829883a 	mov	r20,r9
  80bc0c:	1823883a 	mov	r17,r3
  80bc10:	003fdd06 	br	80bb88 <__divdf3+0x124>
  80bc14:	b712b03a 	or	r9,r22,fp
  80bc18:	48003e26 	beq	r9,zero,80bd14 <__divdf3+0x2b0>
  80bc1c:	b0017726 	beq	r22,zero,80c1fc <__divdf3+0x798>
  80bc20:	b009883a 	mov	r4,r22
  80bc24:	080d8600 	call	80d860 <__clzsi2>
  80bc28:	117ffd44 	addi	r5,r2,-11
  80bc2c:	01000744 	movi	r4,29
  80bc30:	127ffe04 	addi	r9,r2,-8
  80bc34:	2149c83a 	sub	r4,r4,r5
  80bc38:	b246983a 	sll	r3,r22,r9
  80bc3c:	e108d83a 	srl	r4,fp,r4
  80bc40:	e252983a 	sll	r9,fp,r9
  80bc44:	20ecb03a 	or	r22,r4,r3
  80bc48:	1491883a 	add	r8,r2,r18
  80bc4c:	4480fcc4 	addi	r18,r8,1011
  80bc50:	0007883a 	mov	r3,zero
  80bc54:	003fb306 	br	80bb24 <__divdf3+0xc0>
  80bc58:	8126b03a 	or	r19,r16,r4
  80bc5c:	2023883a 	mov	r17,r4
  80bc60:	98002726 	beq	r19,zero,80bd00 <__divdf3+0x29c>
  80bc64:	80017026 	beq	r16,zero,80c228 <__divdf3+0x7c4>
  80bc68:	8009883a 	mov	r4,r16
  80bc6c:	080d8600 	call	80d860 <__clzsi2>
  80bc70:	113ffd44 	addi	r4,r2,-11
  80bc74:	00c00744 	movi	r3,29
  80bc78:	14fffe04 	addi	r19,r2,-8
  80bc7c:	1907c83a 	sub	r3,r3,r4
  80bc80:	84ca983a 	sll	r5,r16,r19
  80bc84:	88c6d83a 	srl	r3,r17,r3
  80bc88:	8ce8983a 	sll	r20,r17,r19
  80bc8c:	1966b03a 	or	r19,r3,r5
  80bc90:	023f0344 	movi	r8,-1011
  80bc94:	40a5c83a 	sub	r18,r8,r2
  80bc98:	0021883a 	mov	r16,zero
  80bc9c:	0023883a 	mov	r17,zero
  80bca0:	003f8f06 	br	80bae0 <__divdf3+0x7c>
  80bca4:	8126b03a 	or	r19,r16,r4
  80bca8:	9800101e 	bne	r19,zero,80bcec <__divdf3+0x288>
  80bcac:	0029883a 	mov	r20,zero
  80bcb0:	04000204 	movi	r16,8
  80bcb4:	0481ffc4 	movi	r18,2047
  80bcb8:	04400084 	movi	r17,2
  80bcbc:	003f8806 	br	80bae0 <__divdf3+0x7c>
  80bcc0:	b712b03a 	or	r9,r22,fp
  80bcc4:	94be0044 	addi	r18,r18,-2047
  80bcc8:	4800041e 	bne	r9,zero,80bcdc <__divdf3+0x278>
  80bccc:	84000094 	ori	r16,r16,2
  80bcd0:	002d883a 	mov	r22,zero
  80bcd4:	00c00084 	movi	r3,2
  80bcd8:	003f9206 	br	80bb24 <__divdf3+0xc0>
  80bcdc:	840000d4 	ori	r16,r16,3
  80bce0:	e013883a 	mov	r9,fp
  80bce4:	00c000c4 	movi	r3,3
  80bce8:	003f8e06 	br	80bb24 <__divdf3+0xc0>
  80bcec:	8027883a 	mov	r19,r16
  80bcf0:	0481ffc4 	movi	r18,2047
  80bcf4:	04000304 	movi	r16,12
  80bcf8:	044000c4 	movi	r17,3
  80bcfc:	003f7806 	br	80bae0 <__divdf3+0x7c>
  80bd00:	0029883a 	mov	r20,zero
  80bd04:	04000104 	movi	r16,4
  80bd08:	0025883a 	mov	r18,zero
  80bd0c:	04400044 	movi	r17,1
  80bd10:	003f7306 	br	80bae0 <__divdf3+0x7c>
  80bd14:	84000054 	ori	r16,r16,1
  80bd18:	002d883a 	mov	r22,zero
  80bd1c:	00c00044 	movi	r3,1
  80bd20:	003f8006 	br	80bb24 <__divdf3+0xc0>
  80bd24:	9440ffc4 	addi	r17,r18,1023
  80bd28:	0441050e 	bge	zero,r17,80c140 <__divdf3+0x6dc>
  80bd2c:	a08001cc 	andi	r2,r20,7
  80bd30:	10016c1e 	bne	r2,zero,80c2e4 <__divdf3+0x880>
  80bd34:	a008d0fa 	srli	r4,r20,3
  80bd38:	9880402c 	andhi	r2,r19,256
  80bd3c:	10000426 	beq	r2,zero,80bd50 <__divdf3+0x2ec>
  80bd40:	00bfc034 	movhi	r2,65280
  80bd44:	10bfffc4 	addi	r2,r2,-1
  80bd48:	98a6703a 	and	r19,r19,r2
  80bd4c:	94410004 	addi	r17,r18,1024
  80bd50:	8881ffc8 	cmpgei	r2,r17,2047
  80bd54:	103fa61e 	bne	r2,zero,80bbf0 <__divdf3+0x18c>
  80bd58:	9828977a 	slli	r20,r19,29
  80bd5c:	980a927a 	slli	r5,r19,9
  80bd60:	88c1ffcc 	andi	r3,r17,2047
  80bd64:	a128b03a 	or	r20,r20,r4
  80bd68:	280ad33a 	srli	r5,r5,12
  80bd6c:	003f8f06 	br	80bbac <__divdf3+0x148>
  80bd70:	01400434 	movhi	r5,16
  80bd74:	000f883a 	mov	r7,zero
  80bd78:	297fffc4 	addi	r5,r5,-1
  80bd7c:	053fffc4 	movi	r20,-1
  80bd80:	00c1ffc4 	movi	r3,2047
  80bd84:	003f8906 	br	80bbac <__divdf3+0x148>
  80bd88:	9880022c 	andhi	r2,r19,8
  80bd8c:	10000926 	beq	r2,zero,80bdb4 <__divdf3+0x350>
  80bd90:	b080022c 	andhi	r2,r22,8
  80bd94:	1000071e 	bne	r2,zero,80bdb4 <__divdf3+0x350>
  80bd98:	00800434 	movhi	r2,16
  80bd9c:	b1400234 	orhi	r5,r22,8
  80bda0:	10bfffc4 	addi	r2,r2,-1
  80bda4:	288a703a 	and	r5,r5,r2
  80bda8:	a80f883a 	mov	r7,r21
  80bdac:	4829883a 	mov	r20,r9
  80bdb0:	003ff306 	br	80bd80 <__divdf3+0x31c>
  80bdb4:	00800434 	movhi	r2,16
  80bdb8:	99400234 	orhi	r5,r19,8
  80bdbc:	10bfffc4 	addi	r2,r2,-1
  80bdc0:	288a703a 	and	r5,r5,r2
  80bdc4:	b80f883a 	mov	r7,r23
  80bdc8:	003fed06 	br	80bd80 <__divdf3+0x31c>
  80bdcc:	b4c10536 	bltu	r22,r19,80c1e4 <__divdf3+0x780>
  80bdd0:	b4c10326 	beq	r22,r19,80c1e0 <__divdf3+0x77c>
  80bdd4:	94bfffc4 	addi	r18,r18,-1
  80bdd8:	a039883a 	mov	fp,r20
  80bddc:	9821883a 	mov	r16,r19
  80bde0:	0023883a 	mov	r17,zero
  80bde4:	b006923a 	slli	r3,r22,8
  80bde8:	482cd63a 	srli	r22,r9,24
  80bdec:	8009883a 	mov	r4,r16
  80bdf0:	182ed43a 	srli	r23,r3,16
  80bdf4:	b0ecb03a 	or	r22,r22,r3
  80bdf8:	d9c00015 	stw	r7,0(sp)
  80bdfc:	b80b883a 	mov	r5,r23
  80be00:	482a923a 	slli	r21,r9,8
  80be04:	b53fffcc 	andi	r20,r22,65535
  80be08:	080b08c0 	call	80b08c <__udivsi3>
  80be0c:	100b883a 	mov	r5,r2
  80be10:	a009883a 	mov	r4,r20
  80be14:	1027883a 	mov	r19,r2
  80be18:	080b14c0 	call	80b14c <__mulsi3>
  80be1c:	8009883a 	mov	r4,r16
  80be20:	b80b883a 	mov	r5,r23
  80be24:	1021883a 	mov	r16,r2
  80be28:	080b0f00 	call	80b0f0 <__umodsi3>
  80be2c:	1004943a 	slli	r2,r2,16
  80be30:	e008d43a 	srli	r4,fp,16
  80be34:	d9c00017 	ldw	r7,0(sp)
  80be38:	2088b03a 	or	r4,r4,r2
  80be3c:	2400042e 	bgeu	r4,r16,80be50 <__divdf3+0x3ec>
  80be40:	2589883a 	add	r4,r4,r22
  80be44:	98bfffc4 	addi	r2,r19,-1
  80be48:	2581082e 	bgeu	r4,r22,80c26c <__divdf3+0x808>
  80be4c:	1027883a 	mov	r19,r2
  80be50:	2421c83a 	sub	r16,r4,r16
  80be54:	b80b883a 	mov	r5,r23
  80be58:	8009883a 	mov	r4,r16
  80be5c:	d9c00215 	stw	r7,8(sp)
  80be60:	080b08c0 	call	80b08c <__udivsi3>
  80be64:	100b883a 	mov	r5,r2
  80be68:	a009883a 	mov	r4,r20
  80be6c:	d8800115 	stw	r2,4(sp)
  80be70:	080b14c0 	call	80b14c <__mulsi3>
  80be74:	b80b883a 	mov	r5,r23
  80be78:	8009883a 	mov	r4,r16
  80be7c:	d8800015 	stw	r2,0(sp)
  80be80:	080b0f00 	call	80b0f0 <__umodsi3>
  80be84:	100c943a 	slli	r6,r2,16
  80be88:	d8c00017 	ldw	r3,0(sp)
  80be8c:	e73fffcc 	andi	fp,fp,65535
  80be90:	e18cb03a 	or	r6,fp,r6
  80be94:	da000117 	ldw	r8,4(sp)
  80be98:	d9c00217 	ldw	r7,8(sp)
  80be9c:	30c0042e 	bgeu	r6,r3,80beb0 <__divdf3+0x44c>
  80bea0:	358d883a 	add	r6,r6,r22
  80bea4:	40bfffc4 	addi	r2,r8,-1
  80bea8:	3580ec2e 	bgeu	r6,r22,80c25c <__divdf3+0x7f8>
  80beac:	1011883a 	mov	r8,r2
  80beb0:	9826943a 	slli	r19,r19,16
  80beb4:	af3fffcc 	andi	fp,r21,65535
  80beb8:	30c7c83a 	sub	r3,r6,r3
  80bebc:	9a26b03a 	or	r19,r19,r8
  80bec0:	9810d43a 	srli	r8,r19,16
  80bec4:	9abfffcc 	andi	r10,r19,65535
  80bec8:	5009883a 	mov	r4,r10
  80becc:	e00b883a 	mov	r5,fp
  80bed0:	d9c00515 	stw	r7,20(sp)
  80bed4:	d8c00315 	stw	r3,12(sp)
  80bed8:	da800415 	stw	r10,16(sp)
  80bedc:	da000015 	stw	r8,0(sp)
  80bee0:	080b14c0 	call	80b14c <__mulsi3>
  80bee4:	da000017 	ldw	r8,0(sp)
  80bee8:	e00b883a 	mov	r5,fp
  80beec:	d8800215 	stw	r2,8(sp)
  80bef0:	4009883a 	mov	r4,r8
  80bef4:	080b14c0 	call	80b14c <__mulsi3>
  80bef8:	da000017 	ldw	r8,0(sp)
  80befc:	a820d43a 	srli	r16,r21,16
  80bf00:	d8800115 	stw	r2,4(sp)
  80bf04:	4009883a 	mov	r4,r8
  80bf08:	800b883a 	mov	r5,r16
  80bf0c:	080b14c0 	call	80b14c <__mulsi3>
  80bf10:	da800417 	ldw	r10,16(sp)
  80bf14:	8009883a 	mov	r4,r16
  80bf18:	d8800015 	stw	r2,0(sp)
  80bf1c:	500b883a 	mov	r5,r10
  80bf20:	080b14c0 	call	80b14c <__mulsi3>
  80bf24:	d9800217 	ldw	r6,8(sp)
  80bf28:	da000117 	ldw	r8,4(sp)
  80bf2c:	da400017 	ldw	r9,0(sp)
  80bf30:	3008d43a 	srli	r4,r6,16
  80bf34:	1205883a 	add	r2,r2,r8
  80bf38:	d8c00317 	ldw	r3,12(sp)
  80bf3c:	2089883a 	add	r4,r4,r2
  80bf40:	d9c00517 	ldw	r7,20(sp)
  80bf44:	2200022e 	bgeu	r4,r8,80bf50 <__divdf3+0x4ec>
  80bf48:	00800074 	movhi	r2,1
  80bf4c:	4893883a 	add	r9,r9,r2
  80bf50:	200ad43a 	srli	r5,r4,16
  80bf54:	2008943a 	slli	r4,r4,16
  80bf58:	31bfffcc 	andi	r6,r6,65535
  80bf5c:	2a4b883a 	add	r5,r5,r9
  80bf60:	218d883a 	add	r6,r4,r6
  80bf64:	19409436 	bltu	r3,r5,80c1b8 <__divdf3+0x754>
  80bf68:	19409226 	beq	r3,r5,80c1b4 <__divdf3+0x750>
  80bf6c:	898dc83a 	sub	r6,r17,r6
  80bf70:	89a3803a 	cmpltu	r17,r17,r6
  80bf74:	1947c83a 	sub	r3,r3,r5
  80bf78:	1c47c83a 	sub	r3,r3,r17
  80bf7c:	9440ffc4 	addi	r17,r18,1023
  80bf80:	b0c0d326 	beq	r22,r3,80c2d0 <__divdf3+0x86c>
  80bf84:	1809883a 	mov	r4,r3
  80bf88:	b80b883a 	mov	r5,r23
  80bf8c:	d9800315 	stw	r6,12(sp)
  80bf90:	d9c00215 	stw	r7,8(sp)
  80bf94:	d8c00015 	stw	r3,0(sp)
  80bf98:	080b08c0 	call	80b08c <__udivsi3>
  80bf9c:	100b883a 	mov	r5,r2
  80bfa0:	a009883a 	mov	r4,r20
  80bfa4:	d8800115 	stw	r2,4(sp)
  80bfa8:	080b14c0 	call	80b14c <__mulsi3>
  80bfac:	d8c00017 	ldw	r3,0(sp)
  80bfb0:	b80b883a 	mov	r5,r23
  80bfb4:	d8800015 	stw	r2,0(sp)
  80bfb8:	1809883a 	mov	r4,r3
  80bfbc:	080b0f00 	call	80b0f0 <__umodsi3>
  80bfc0:	d9800317 	ldw	r6,12(sp)
  80bfc4:	1006943a 	slli	r3,r2,16
  80bfc8:	da400017 	ldw	r9,0(sp)
  80bfcc:	3008d43a 	srli	r4,r6,16
  80bfd0:	da000117 	ldw	r8,4(sp)
  80bfd4:	d9c00217 	ldw	r7,8(sp)
  80bfd8:	20c6b03a 	or	r3,r4,r3
  80bfdc:	1a40062e 	bgeu	r3,r9,80bff8 <__divdf3+0x594>
  80bfe0:	1d87883a 	add	r3,r3,r22
  80bfe4:	40bfffc4 	addi	r2,r8,-1
  80bfe8:	1d80c836 	bltu	r3,r22,80c30c <__divdf3+0x8a8>
  80bfec:	1a40c72e 	bgeu	r3,r9,80c30c <__divdf3+0x8a8>
  80bff0:	423fff84 	addi	r8,r8,-2
  80bff4:	1d87883a 	add	r3,r3,r22
  80bff8:	1a47c83a 	sub	r3,r3,r9
  80bffc:	1809883a 	mov	r4,r3
  80c000:	b80b883a 	mov	r5,r23
  80c004:	d9800415 	stw	r6,16(sp)
  80c008:	d9c00315 	stw	r7,12(sp)
  80c00c:	da000215 	stw	r8,8(sp)
  80c010:	d8c00115 	stw	r3,4(sp)
  80c014:	080b08c0 	call	80b08c <__udivsi3>
  80c018:	100b883a 	mov	r5,r2
  80c01c:	a009883a 	mov	r4,r20
  80c020:	d8800015 	stw	r2,0(sp)
  80c024:	080b14c0 	call	80b14c <__mulsi3>
  80c028:	d8c00117 	ldw	r3,4(sp)
  80c02c:	b80b883a 	mov	r5,r23
  80c030:	102f883a 	mov	r23,r2
  80c034:	1809883a 	mov	r4,r3
  80c038:	080b0f00 	call	80b0f0 <__umodsi3>
  80c03c:	d9800417 	ldw	r6,16(sp)
  80c040:	1004943a 	slli	r2,r2,16
  80c044:	da400017 	ldw	r9,0(sp)
  80c048:	31bfffcc 	andi	r6,r6,65535
  80c04c:	308cb03a 	or	r6,r6,r2
  80c050:	da000217 	ldw	r8,8(sp)
  80c054:	d9c00317 	ldw	r7,12(sp)
  80c058:	35c0062e 	bgeu	r6,r23,80c074 <__divdf3+0x610>
  80c05c:	358d883a 	add	r6,r6,r22
  80c060:	48bfffc4 	addi	r2,r9,-1
  80c064:	3580a736 	bltu	r6,r22,80c304 <__divdf3+0x8a0>
  80c068:	35c0a62e 	bgeu	r6,r23,80c304 <__divdf3+0x8a0>
  80c06c:	4a7fff84 	addi	r9,r9,-2
  80c070:	358d883a 	add	r6,r6,r22
  80c074:	4028943a 	slli	r20,r8,16
  80c078:	35d5c83a 	sub	r10,r6,r23
  80c07c:	e009883a 	mov	r4,fp
  80c080:	a268b03a 	or	r20,r20,r9
  80c084:	a23fffcc 	andi	r8,r20,65535
  80c088:	a02ed43a 	srli	r23,r20,16
  80c08c:	400b883a 	mov	r5,r8
  80c090:	d9c00315 	stw	r7,12(sp)
  80c094:	da800215 	stw	r10,8(sp)
  80c098:	da000115 	stw	r8,4(sp)
  80c09c:	080b14c0 	call	80b14c <__mulsi3>
  80c0a0:	e00b883a 	mov	r5,fp
  80c0a4:	b809883a 	mov	r4,r23
  80c0a8:	1039883a 	mov	fp,r2
  80c0ac:	080b14c0 	call	80b14c <__mulsi3>
  80c0b0:	8009883a 	mov	r4,r16
  80c0b4:	b80b883a 	mov	r5,r23
  80c0b8:	d8800015 	stw	r2,0(sp)
  80c0bc:	080b14c0 	call	80b14c <__mulsi3>
  80c0c0:	da000117 	ldw	r8,4(sp)
  80c0c4:	8009883a 	mov	r4,r16
  80c0c8:	1021883a 	mov	r16,r2
  80c0cc:	400b883a 	mov	r5,r8
  80c0d0:	080b14c0 	call	80b14c <__mulsi3>
  80c0d4:	d9800017 	ldw	r6,0(sp)
  80c0d8:	e006d43a 	srli	r3,fp,16
  80c0dc:	da800217 	ldw	r10,8(sp)
  80c0e0:	1185883a 	add	r2,r2,r6
  80c0e4:	1887883a 	add	r3,r3,r2
  80c0e8:	d9c00317 	ldw	r7,12(sp)
  80c0ec:	1980022e 	bgeu	r3,r6,80c0f8 <__divdf3+0x694>
  80c0f0:	00800074 	movhi	r2,1
  80c0f4:	80a1883a 	add	r16,r16,r2
  80c0f8:	1808d43a 	srli	r4,r3,16
  80c0fc:	1806943a 	slli	r3,r3,16
  80c100:	e73fffcc 	andi	fp,fp,65535
  80c104:	2409883a 	add	r4,r4,r16
  80c108:	1f07883a 	add	r3,r3,fp
  80c10c:	51000436 	bltu	r10,r4,80c120 <__divdf3+0x6bc>
  80c110:	51000226 	beq	r10,r4,80c11c <__divdf3+0x6b8>
  80c114:	a5000054 	ori	r20,r20,1
  80c118:	003f0306 	br	80bd28 <__divdf3+0x2c4>
  80c11c:	183f0226 	beq	r3,zero,80bd28 <__divdf3+0x2c4>
  80c120:	b28d883a 	add	r6,r22,r10
  80c124:	a0bfffc4 	addi	r2,r20,-1
  80c128:	35806536 	bltu	r6,r22,80c2c0 <__divdf3+0x85c>
  80c12c:	31008036 	bltu	r6,r4,80c330 <__divdf3+0x8cc>
  80c130:	31009426 	beq	r6,r4,80c384 <__divdf3+0x920>
  80c134:	1029883a 	mov	r20,r2
  80c138:	003ff606 	br	80c114 <__divdf3+0x6b0>
  80c13c:	053fffc4 	movi	r20,-1
  80c140:	01400044 	movi	r5,1
  80c144:	2c4bc83a 	sub	r5,r5,r17
  80c148:	28800e48 	cmpgei	r2,r5,57
  80c14c:	103e941e 	bne	r2,zero,80bba0 <__divdf3+0x13c>
  80c150:	28800808 	cmpgei	r2,r5,32
  80c154:	1000491e 	bne	r2,zero,80c27c <__divdf3+0x818>
  80c158:	92010784 	addi	r8,r18,1054
  80c15c:	9a04983a 	sll	r2,r19,r8
  80c160:	a146d83a 	srl	r3,r20,r5
  80c164:	a210983a 	sll	r8,r20,r8
  80c168:	994ad83a 	srl	r5,r19,r5
  80c16c:	10e8b03a 	or	r20,r2,r3
  80c170:	4010c03a 	cmpne	r8,r8,zero
  80c174:	a228b03a 	or	r20,r20,r8
  80c178:	a08001cc 	andi	r2,r20,7
  80c17c:	10000726 	beq	r2,zero,80c19c <__divdf3+0x738>
  80c180:	a08003cc 	andi	r2,r20,15
  80c184:	10800120 	cmpeqi	r2,r2,4
  80c188:	1000041e 	bne	r2,zero,80c19c <__divdf3+0x738>
  80c18c:	a0800104 	addi	r2,r20,4
  80c190:	1529803a 	cmpltu	r20,r2,r20
  80c194:	2d0b883a 	add	r5,r5,r20
  80c198:	1029883a 	mov	r20,r2
  80c19c:	2880202c 	andhi	r2,r5,128
  80c1a0:	10006f26 	beq	r2,zero,80c360 <__divdf3+0x8fc>
  80c1a4:	00c00044 	movi	r3,1
  80c1a8:	000b883a 	mov	r5,zero
  80c1ac:	0029883a 	mov	r20,zero
  80c1b0:	003e7e06 	br	80bbac <__divdf3+0x148>
  80c1b4:	89bf6d2e 	bgeu	r17,r6,80bf6c <__divdf3+0x508>
  80c1b8:	8d63883a 	add	r17,r17,r21
  80c1bc:	8d45803a 	cmpltu	r2,r17,r21
  80c1c0:	1585883a 	add	r2,r2,r22
  80c1c4:	1887883a 	add	r3,r3,r2
  80c1c8:	98bfffc4 	addi	r2,r19,-1
  80c1cc:	b0c0202e 	bgeu	r22,r3,80c250 <__divdf3+0x7ec>
  80c1d0:	19405136 	bltu	r3,r5,80c318 <__divdf3+0x8b4>
  80c1d4:	28c04f26 	beq	r5,r3,80c314 <__divdf3+0x8b0>
  80c1d8:	1027883a 	mov	r19,r2
  80c1dc:	003f6306 	br	80bf6c <__divdf3+0x508>
  80c1e0:	a27efc36 	bltu	r20,r9,80bdd4 <__divdf3+0x370>
  80c1e4:	983897fa 	slli	fp,r19,31
  80c1e8:	a004d07a 	srli	r2,r20,1
  80c1ec:	9820d07a 	srli	r16,r19,1
  80c1f0:	a02297fa 	slli	r17,r20,31
  80c1f4:	e0b8b03a 	or	fp,fp,r2
  80c1f8:	003efa06 	br	80bde4 <__divdf3+0x380>
  80c1fc:	e009883a 	mov	r4,fp
  80c200:	080d8600 	call	80d860 <__clzsi2>
  80c204:	11400544 	addi	r5,r2,21
  80c208:	29000748 	cmpgei	r4,r5,29
  80c20c:	1007883a 	mov	r3,r2
  80c210:	10800804 	addi	r2,r2,32
  80c214:	203e8526 	beq	r4,zero,80bc2c <__divdf3+0x1c8>
  80c218:	18fffe04 	addi	r3,r3,-8
  80c21c:	e0ec983a 	sll	r22,fp,r3
  80c220:	0013883a 	mov	r9,zero
  80c224:	003e8806 	br	80bc48 <__divdf3+0x1e4>
  80c228:	080d8600 	call	80d860 <__clzsi2>
  80c22c:	11000544 	addi	r4,r2,21
  80c230:	20c00748 	cmpgei	r3,r4,29
  80c234:	100b883a 	mov	r5,r2
  80c238:	10800804 	addi	r2,r2,32
  80c23c:	183e8d26 	beq	r3,zero,80bc74 <__divdf3+0x210>
  80c240:	297ffe04 	addi	r5,r5,-8
  80c244:	a166983a 	sll	r19,r20,r5
  80c248:	0029883a 	mov	r20,zero
  80c24c:	003e9006 	br	80bc90 <__divdf3+0x22c>
  80c250:	b0ffe11e 	bne	r22,r3,80c1d8 <__divdf3+0x774>
  80c254:	8d7fe036 	bltu	r17,r21,80c1d8 <__divdf3+0x774>
  80c258:	003fdd06 	br	80c1d0 <__divdf3+0x76c>
  80c25c:	30ff132e 	bgeu	r6,r3,80beac <__divdf3+0x448>
  80c260:	423fff84 	addi	r8,r8,-2
  80c264:	358d883a 	add	r6,r6,r22
  80c268:	003f1106 	br	80beb0 <__divdf3+0x44c>
  80c26c:	243ef72e 	bgeu	r4,r16,80be4c <__divdf3+0x3e8>
  80c270:	9cffff84 	addi	r19,r19,-2
  80c274:	2589883a 	add	r4,r4,r22
  80c278:	003ef506 	br	80be50 <__divdf3+0x3ec>
  80c27c:	00fff844 	movi	r3,-31
  80c280:	1c47c83a 	sub	r3,r3,r17
  80c284:	29400820 	cmpeqi	r5,r5,32
  80c288:	98c6d83a 	srl	r3,r19,r3
  80c28c:	2800031e 	bne	r5,zero,80c29c <__divdf3+0x838>
  80c290:	91410f84 	addi	r5,r18,1086
  80c294:	994a983a 	sll	r5,r19,r5
  80c298:	a168b03a 	or	r20,r20,r5
  80c29c:	a028c03a 	cmpne	r20,r20,zero
  80c2a0:	a0e8b03a 	or	r20,r20,r3
  80c2a4:	a4c001cc 	andi	r19,r20,7
  80c2a8:	9800291e 	bne	r19,zero,80c350 <__divdf3+0x8ec>
  80c2ac:	000b883a 	mov	r5,zero
  80c2b0:	a028d0fa 	srli	r20,r20,3
  80c2b4:	0007883a 	mov	r3,zero
  80c2b8:	a4e8b03a 	or	r20,r20,r19
  80c2bc:	003e3b06 	br	80bbac <__divdf3+0x148>
  80c2c0:	1029883a 	mov	r20,r2
  80c2c4:	313f931e 	bne	r6,r4,80c114 <__divdf3+0x6b0>
  80c2c8:	1d7f921e 	bne	r3,r21,80c114 <__divdf3+0x6b0>
  80c2cc:	003e9606 	br	80bd28 <__divdf3+0x2c4>
  80c2d0:	047f9a0e 	bge	zero,r17,80c13c <__divdf3+0x6d8>
  80c2d4:	0009883a 	mov	r4,zero
  80c2d8:	05000044 	movi	r20,1
  80c2dc:	9d27883a 	add	r19,r19,r20
  80c2e0:	003e9506 	br	80bd38 <__divdf3+0x2d4>
  80c2e4:	a08003cc 	andi	r2,r20,15
  80c2e8:	10800118 	cmpnei	r2,r2,4
  80c2ec:	103e9126 	beq	r2,zero,80bd34 <__divdf3+0x2d0>
  80c2f0:	a1000104 	addi	r4,r20,4
  80c2f4:	00bffec4 	movi	r2,-5
  80c2f8:	2008d0fa 	srli	r4,r4,3
  80c2fc:	1529803a 	cmpltu	r20,r2,r20
  80c300:	003ff606 	br	80c2dc <__divdf3+0x878>
  80c304:	1013883a 	mov	r9,r2
  80c308:	003f5a06 	br	80c074 <__divdf3+0x610>
  80c30c:	1011883a 	mov	r8,r2
  80c310:	003f3906 	br	80bff8 <__divdf3+0x594>
  80c314:	89bfb02e 	bgeu	r17,r6,80c1d8 <__divdf3+0x774>
  80c318:	8d63883a 	add	r17,r17,r21
  80c31c:	8d45803a 	cmpltu	r2,r17,r21
  80c320:	1585883a 	add	r2,r2,r22
  80c324:	9cffff84 	addi	r19,r19,-2
  80c328:	1887883a 	add	r3,r3,r2
  80c32c:	003f0f06 	br	80bf6c <__divdf3+0x508>
  80c330:	ad45883a 	add	r2,r21,r21
  80c334:	156b803a 	cmpltu	r21,r2,r21
  80c338:	adad883a 	add	r22,r21,r22
  80c33c:	358d883a 	add	r6,r6,r22
  80c340:	a53fff84 	addi	r20,r20,-2
  80c344:	102b883a 	mov	r21,r2
  80c348:	313fdf26 	beq	r6,r4,80c2c8 <__divdf3+0x864>
  80c34c:	003f7106 	br	80c114 <__divdf3+0x6b0>
  80c350:	a08003cc 	andi	r2,r20,15
  80c354:	10800118 	cmpnei	r2,r2,4
  80c358:	000b883a 	mov	r5,zero
  80c35c:	103f8b1e 	bne	r2,zero,80c18c <__divdf3+0x728>
  80c360:	2804927a 	slli	r2,r5,9
  80c364:	2826977a 	slli	r19,r5,29
  80c368:	100ad33a 	srli	r5,r2,12
  80c36c:	003fd006 	br	80c2b0 <__divdf3+0x84c>
  80c370:	00800434 	movhi	r2,16
  80c374:	99400234 	orhi	r5,r19,8
  80c378:	10bfffc4 	addi	r2,r2,-1
  80c37c:	288a703a 	and	r5,r5,r2
  80c380:	003e7f06 	br	80bd80 <__divdf3+0x31c>
  80c384:	a8ffea36 	bltu	r21,r3,80c330 <__divdf3+0x8cc>
  80c388:	1029883a 	mov	r20,r2
  80c38c:	1d7f611e 	bne	r3,r21,80c114 <__divdf3+0x6b0>
  80c390:	003e6506 	br	80bd28 <__divdf3+0x2c4>

0080c394 <__eqdf2>:
  80c394:	2810d53a 	srli	r8,r5,20
  80c398:	3806d53a 	srli	r3,r7,20
  80c39c:	00800434 	movhi	r2,16
  80c3a0:	4201ffcc 	andi	r8,r8,2047
  80c3a4:	10bfffc4 	addi	r2,r2,-1
  80c3a8:	4241ffd8 	cmpnei	r9,r8,2047
  80c3ac:	2814d7fa 	srli	r10,r5,31
  80c3b0:	3816d7fa 	srli	r11,r7,31
  80c3b4:	288a703a 	and	r5,r5,r2
  80c3b8:	388e703a 	and	r7,r7,r2
  80c3bc:	1881ffcc 	andi	r2,r3,2047
  80c3c0:	48000626 	beq	r9,zero,80c3dc <__eqdf2+0x48>
  80c3c4:	10c1ffe0 	cmpeqi	r3,r2,2047
  80c3c8:	1800021e 	bne	r3,zero,80c3d4 <__eqdf2+0x40>
  80c3cc:	4080011e 	bne	r8,r2,80c3d4 <__eqdf2+0x40>
  80c3d0:	29c00826 	beq	r5,r7,80c3f4 <__eqdf2+0x60>
  80c3d4:	00800044 	movi	r2,1
  80c3d8:	f800283a 	ret
  80c3dc:	2906b03a 	or	r3,r5,r4
  80c3e0:	183ffc1e 	bne	r3,zero,80c3d4 <__eqdf2+0x40>
  80c3e4:	1081ffd8 	cmpnei	r2,r2,2047
  80c3e8:	103ffa1e 	bne	r2,zero,80c3d4 <__eqdf2+0x40>
  80c3ec:	398eb03a 	or	r7,r7,r6
  80c3f0:	383ff81e 	bne	r7,zero,80c3d4 <__eqdf2+0x40>
  80c3f4:	21bff71e 	bne	r4,r6,80c3d4 <__eqdf2+0x40>
  80c3f8:	52c00426 	beq	r10,r11,80c40c <__eqdf2+0x78>
  80c3fc:	403ff51e 	bne	r8,zero,80c3d4 <__eqdf2+0x40>
  80c400:	290ab03a 	or	r5,r5,r4
  80c404:	2804c03a 	cmpne	r2,r5,zero
  80c408:	f800283a 	ret
  80c40c:	0005883a 	mov	r2,zero
  80c410:	f800283a 	ret

0080c414 <__gedf2>:
  80c414:	2810d53a 	srli	r8,r5,20
  80c418:	3812d53a 	srli	r9,r7,20
  80c41c:	00c00434 	movhi	r3,16
  80c420:	4201ffcc 	andi	r8,r8,2047
  80c424:	18ffffc4 	addi	r3,r3,-1
  80c428:	4281ffd8 	cmpnei	r10,r8,2047
  80c42c:	2816d7fa 	srli	r11,r5,31
  80c430:	3804d7fa 	srli	r2,r7,31
  80c434:	28ca703a 	and	r5,r5,r3
  80c438:	38ce703a 	and	r7,r7,r3
  80c43c:	48c1ffcc 	andi	r3,r9,2047
  80c440:	50000a26 	beq	r10,zero,80c46c <__gedf2+0x58>
  80c444:	1a41ffd8 	cmpnei	r9,r3,2047
  80c448:	48000c26 	beq	r9,zero,80c47c <__gedf2+0x68>
  80c44c:	4000171e 	bne	r8,zero,80c4ac <__gedf2+0x98>
  80c450:	2912b03a 	or	r9,r5,r4
  80c454:	1800121e 	bne	r3,zero,80c4a0 <__gedf2+0x8c>
  80c458:	3994b03a 	or	r10,r7,r6
  80c45c:	5000101e 	bne	r10,zero,80c4a0 <__gedf2+0x8c>
  80c460:	48000a1e 	bne	r9,zero,80c48c <__gedf2+0x78>
  80c464:	0005883a 	mov	r2,zero
  80c468:	f800283a 	ret
  80c46c:	2912b03a 	or	r9,r5,r4
  80c470:	48001d1e 	bne	r9,zero,80c4e8 <__gedf2+0xd4>
  80c474:	1a41ffe0 	cmpeqi	r9,r3,2047
  80c478:	48000c26 	beq	r9,zero,80c4ac <__gedf2+0x98>
  80c47c:	3992b03a 	or	r9,r7,r6
  80c480:	4800191e 	bne	r9,zero,80c4e8 <__gedf2+0xd4>
  80c484:	40000526 	beq	r8,zero,80c49c <__gedf2+0x88>
  80c488:	58800c26 	beq	r11,r2,80c4bc <__gedf2+0xa8>
  80c48c:	00800044 	movi	r2,1
  80c490:	58000526 	beq	r11,zero,80c4a8 <__gedf2+0x94>
  80c494:	00bfffc4 	movi	r2,-1
  80c498:	f800283a 	ret
  80c49c:	2912b03a 	or	r9,r5,r4
  80c4a0:	483ff91e 	bne	r9,zero,80c488 <__gedf2+0x74>
  80c4a4:	103ffb26 	beq	r2,zero,80c494 <__gedf2+0x80>
  80c4a8:	f800283a 	ret
  80c4ac:	183ff61e 	bne	r3,zero,80c488 <__gedf2+0x74>
  80c4b0:	3992b03a 	or	r9,r7,r6
  80c4b4:	483ff41e 	bne	r9,zero,80c488 <__gedf2+0x74>
  80c4b8:	003ff406 	br	80c48c <__gedf2+0x78>
  80c4bc:	1a000716 	blt	r3,r8,80c4dc <__gedf2+0xc8>
  80c4c0:	40fff816 	blt	r8,r3,80c4a4 <__gedf2+0x90>
  80c4c4:	397ff136 	bltu	r7,r5,80c48c <__gedf2+0x78>
  80c4c8:	29c00926 	beq	r5,r7,80c4f0 <__gedf2+0xdc>
  80c4cc:	29ffe52e 	bgeu	r5,r7,80c464 <__gedf2+0x50>
  80c4d0:	583ff026 	beq	r11,zero,80c494 <__gedf2+0x80>
  80c4d4:	5805883a 	mov	r2,r11
  80c4d8:	f800283a 	ret
  80c4dc:	103fed1e 	bne	r2,zero,80c494 <__gedf2+0x80>
  80c4e0:	00800044 	movi	r2,1
  80c4e4:	f800283a 	ret
  80c4e8:	00bfff84 	movi	r2,-2
  80c4ec:	f800283a 	ret
  80c4f0:	313fe636 	bltu	r6,r4,80c48c <__gedf2+0x78>
  80c4f4:	21bfdb2e 	bgeu	r4,r6,80c464 <__gedf2+0x50>
  80c4f8:	003ff506 	br	80c4d0 <__gedf2+0xbc>

0080c4fc <__ledf2>:
  80c4fc:	2810d53a 	srli	r8,r5,20
  80c500:	3812d53a 	srli	r9,r7,20
  80c504:	00c00434 	movhi	r3,16
  80c508:	4201ffcc 	andi	r8,r8,2047
  80c50c:	18ffffc4 	addi	r3,r3,-1
  80c510:	4281ffd8 	cmpnei	r10,r8,2047
  80c514:	2816d7fa 	srli	r11,r5,31
  80c518:	3804d7fa 	srli	r2,r7,31
  80c51c:	28ca703a 	and	r5,r5,r3
  80c520:	38ce703a 	and	r7,r7,r3
  80c524:	48c1ffcc 	andi	r3,r9,2047
  80c528:	50000a26 	beq	r10,zero,80c554 <__ledf2+0x58>
  80c52c:	1a41ffd8 	cmpnei	r9,r3,2047
  80c530:	48000c26 	beq	r9,zero,80c564 <__ledf2+0x68>
  80c534:	4000191e 	bne	r8,zero,80c59c <__ledf2+0xa0>
  80c538:	2912b03a 	or	r9,r5,r4
  80c53c:	18000d1e 	bne	r3,zero,80c574 <__ledf2+0x78>
  80c540:	3994b03a 	or	r10,r7,r6
  80c544:	50000b1e 	bne	r10,zero,80c574 <__ledf2+0x78>
  80c548:	48000c1e 	bne	r9,zero,80c57c <__ledf2+0x80>
  80c54c:	0005883a 	mov	r2,zero
  80c550:	f800283a 	ret
  80c554:	2912b03a 	or	r9,r5,r4
  80c558:	48000c1e 	bne	r9,zero,80c58c <__ledf2+0x90>
  80c55c:	1a41ffe0 	cmpeqi	r9,r3,2047
  80c560:	48000e26 	beq	r9,zero,80c59c <__ledf2+0xa0>
  80c564:	3992b03a 	or	r9,r7,r6
  80c568:	4800081e 	bne	r9,zero,80c58c <__ledf2+0x90>
  80c56c:	4000021e 	bne	r8,zero,80c578 <__ledf2+0x7c>
  80c570:	2912b03a 	or	r9,r5,r4
  80c574:	48000726 	beq	r9,zero,80c594 <__ledf2+0x98>
  80c578:	58800c26 	beq	r11,r2,80c5ac <__ledf2+0xb0>
  80c57c:	00800044 	movi	r2,1
  80c580:	58000526 	beq	r11,zero,80c598 <__ledf2+0x9c>
  80c584:	00bfffc4 	movi	r2,-1
  80c588:	f800283a 	ret
  80c58c:	00800084 	movi	r2,2
  80c590:	f800283a 	ret
  80c594:	103ffb26 	beq	r2,zero,80c584 <__ledf2+0x88>
  80c598:	f800283a 	ret
  80c59c:	183ff61e 	bne	r3,zero,80c578 <__ledf2+0x7c>
  80c5a0:	3992b03a 	or	r9,r7,r6
  80c5a4:	483ff41e 	bne	r9,zero,80c578 <__ledf2+0x7c>
  80c5a8:	003ff406 	br	80c57c <__ledf2+0x80>
  80c5ac:	1a00030e 	bge	r3,r8,80c5bc <__ledf2+0xc0>
  80c5b0:	103ff41e 	bne	r2,zero,80c584 <__ledf2+0x88>
  80c5b4:	00800044 	movi	r2,1
  80c5b8:	f800283a 	ret
  80c5bc:	40fff516 	blt	r8,r3,80c594 <__ledf2+0x98>
  80c5c0:	397fee36 	bltu	r7,r5,80c57c <__ledf2+0x80>
  80c5c4:	29c00426 	beq	r5,r7,80c5d8 <__ledf2+0xdc>
  80c5c8:	29ffe02e 	bgeu	r5,r7,80c54c <__ledf2+0x50>
  80c5cc:	583fed26 	beq	r11,zero,80c584 <__ledf2+0x88>
  80c5d0:	5805883a 	mov	r2,r11
  80c5d4:	f800283a 	ret
  80c5d8:	313fe836 	bltu	r6,r4,80c57c <__ledf2+0x80>
  80c5dc:	21bfdb2e 	bgeu	r4,r6,80c54c <__ledf2+0x50>
  80c5e0:	003ffa06 	br	80c5cc <__ledf2+0xd0>

0080c5e4 <__muldf3>:
  80c5e4:	2810d53a 	srli	r8,r5,20
  80c5e8:	defff004 	addi	sp,sp,-64
  80c5ec:	00800434 	movhi	r2,16
  80c5f0:	df000e15 	stw	fp,56(sp)
  80c5f4:	dd000a15 	stw	r20,40(sp)
  80c5f8:	dcc00915 	stw	r19,36(sp)
  80c5fc:	dc400715 	stw	r17,28(sp)
  80c600:	10bfffc4 	addi	r2,r2,-1
  80c604:	dfc00f15 	stw	ra,60(sp)
  80c608:	ddc00d15 	stw	r23,52(sp)
  80c60c:	dd800c15 	stw	r22,48(sp)
  80c610:	dd400b15 	stw	r21,44(sp)
  80c614:	dc800815 	stw	r18,32(sp)
  80c618:	dc000615 	stw	r16,24(sp)
  80c61c:	4201ffcc 	andi	r8,r8,2047
  80c620:	2828d7fa 	srli	r20,r5,31
  80c624:	2023883a 	mov	r17,r4
  80c628:	3039883a 	mov	fp,r6
  80c62c:	28a6703a 	and	r19,r5,r2
  80c630:	40013426 	beq	r8,zero,80cb04 <__muldf3+0x520>
  80c634:	4081ffe0 	cmpeqi	r2,r8,2047
  80c638:	1001461e 	bne	r2,zero,80cb54 <__muldf3+0x570>
  80c63c:	980a90fa 	slli	r5,r19,3
  80c640:	2026d77a 	srli	r19,r4,29
  80c644:	202490fa 	slli	r18,r4,3
  80c648:	423f0044 	addi	r8,r8,-1023
  80c64c:	9966b03a 	or	r19,r19,r5
  80c650:	9cc02034 	orhi	r19,r19,128
  80c654:	002b883a 	mov	r21,zero
  80c658:	002d883a 	mov	r22,zero
  80c65c:	3804d53a 	srli	r2,r7,20
  80c660:	00c00434 	movhi	r3,16
  80c664:	18ffffc4 	addi	r3,r3,-1
  80c668:	1081ffcc 	andi	r2,r2,2047
  80c66c:	382ed7fa 	srli	r23,r7,31
  80c670:	38e0703a 	and	r16,r7,r3
  80c674:	10011026 	beq	r2,zero,80cab8 <__muldf3+0x4d4>
  80c678:	10c1ffe0 	cmpeqi	r3,r2,2047
  80c67c:	18013c1e 	bne	r3,zero,80cb70 <__muldf3+0x58c>
  80c680:	e008d77a 	srli	r4,fp,29
  80c684:	802090fa 	slli	r16,r16,3
  80c688:	e02290fa 	slli	r17,fp,3
  80c68c:	10bf0044 	addi	r2,r2,-1023
  80c690:	2420b03a 	or	r16,r4,r16
  80c694:	84002034 	orhi	r16,r16,128
  80c698:	4091883a 	add	r8,r8,r2
  80c69c:	0009883a 	mov	r4,zero
  80c6a0:	a8800428 	cmpgeui	r2,r21,16
  80c6a4:	a5ccf03a 	xor	r6,r20,r23
  80c6a8:	41c00044 	addi	r7,r8,1
  80c6ac:	1000371e 	bne	r2,zero,80c78c <__muldf3+0x1a8>
  80c6b0:	a80490ba 	slli	r2,r21,2
  80c6b4:	00c02074 	movhi	r3,129
  80c6b8:	10c7883a 	add	r3,r2,r3
  80c6bc:	18b1b117 	ldw	r2,-14652(r3)
  80c6c0:	1000683a 	jmp	r2
  80c6c4:	0080c78c 	andi	r2,zero,798
  80c6c8:	0080c708 	cmpgei	r2,zero,796
  80c6cc:	0080c708 	cmpgei	r2,zero,796
  80c6d0:	0080c704 	movi	r2,796
  80c6d4:	0080c714 	movui	r2,796
  80c6d8:	0080c714 	movui	r2,796
  80c6dc:	0080cbe4 	muli	r2,zero,815
  80c6e0:	0080c704 	movi	r2,796
  80c6e4:	0080c714 	movui	r2,796
  80c6e8:	0080cbe4 	muli	r2,zero,815
  80c6ec:	0080c714 	movui	r2,796
  80c6f0:	0080c704 	movi	r2,796
  80c6f4:	0080cb8c 	andi	r2,zero,814
  80c6f8:	0080cb8c 	andi	r2,zero,814
  80c6fc:	0080cb8c 	andi	r2,zero,814
  80c700:	0080cc70 	cmpltui	r2,zero,817
  80c704:	b80d883a 	mov	r6,r23
  80c708:	8027883a 	mov	r19,r16
  80c70c:	8825883a 	mov	r18,r17
  80c710:	202d883a 	mov	r22,r4
  80c714:	b08000a0 	cmpeqi	r2,r22,2
  80c718:	1000181e 	bne	r2,zero,80c77c <__muldf3+0x198>
  80c71c:	b08000e0 	cmpeqi	r2,r22,3
  80c720:	1001961e 	bne	r2,zero,80cd7c <__muldf3+0x798>
  80c724:	b0800060 	cmpeqi	r2,r22,1
  80c728:	1000c926 	beq	r2,zero,80ca50 <__muldf3+0x46c>
  80c72c:	0007883a 	mov	r3,zero
  80c730:	0027883a 	mov	r19,zero
  80c734:	0025883a 	mov	r18,zero
  80c738:	1806953a 	slli	r3,r3,20
  80c73c:	300c97fa 	slli	r6,r6,31
  80c740:	9005883a 	mov	r2,r18
  80c744:	1cc6b03a 	or	r3,r3,r19
  80c748:	1986b03a 	or	r3,r3,r6
  80c74c:	dfc00f17 	ldw	ra,60(sp)
  80c750:	df000e17 	ldw	fp,56(sp)
  80c754:	ddc00d17 	ldw	r23,52(sp)
  80c758:	dd800c17 	ldw	r22,48(sp)
  80c75c:	dd400b17 	ldw	r21,44(sp)
  80c760:	dd000a17 	ldw	r20,40(sp)
  80c764:	dcc00917 	ldw	r19,36(sp)
  80c768:	dc800817 	ldw	r18,32(sp)
  80c76c:	dc400717 	ldw	r17,28(sp)
  80c770:	dc000617 	ldw	r16,24(sp)
  80c774:	dec01004 	addi	sp,sp,64
  80c778:	f800283a 	ret
  80c77c:	00c1ffc4 	movi	r3,2047
  80c780:	0027883a 	mov	r19,zero
  80c784:	0025883a 	mov	r18,zero
  80c788:	003feb06 	br	80c738 <__muldf3+0x154>
  80c78c:	9028d43a 	srli	r20,r18,16
  80c790:	8f3fffcc 	andi	fp,r17,65535
  80c794:	957fffcc 	andi	r21,r18,65535
  80c798:	a80b883a 	mov	r5,r21
  80c79c:	e009883a 	mov	r4,fp
  80c7a0:	d9800315 	stw	r6,12(sp)
  80c7a4:	da000215 	stw	r8,8(sp)
  80c7a8:	d9c00115 	stw	r7,4(sp)
  80c7ac:	8822d43a 	srli	r17,r17,16
  80c7b0:	080b14c0 	call	80b14c <__mulsi3>
  80c7b4:	e00b883a 	mov	r5,fp
  80c7b8:	a009883a 	mov	r4,r20
  80c7bc:	102d883a 	mov	r22,r2
  80c7c0:	080b14c0 	call	80b14c <__mulsi3>
  80c7c4:	880b883a 	mov	r5,r17
  80c7c8:	a009883a 	mov	r4,r20
  80c7cc:	102f883a 	mov	r23,r2
  80c7d0:	080b14c0 	call	80b14c <__mulsi3>
  80c7d4:	a80b883a 	mov	r5,r21
  80c7d8:	8809883a 	mov	r4,r17
  80c7dc:	d8800015 	stw	r2,0(sp)
  80c7e0:	080b14c0 	call	80b14c <__mulsi3>
  80c7e4:	b006d43a 	srli	r3,r22,16
  80c7e8:	15e5883a 	add	r18,r2,r23
  80c7ec:	d9c00117 	ldw	r7,4(sp)
  80c7f0:	1c87883a 	add	r3,r3,r18
  80c7f4:	da000217 	ldw	r8,8(sp)
  80c7f8:	d9800317 	ldw	r6,12(sp)
  80c7fc:	1dc0042e 	bgeu	r3,r23,80c810 <__muldf3+0x22c>
  80c800:	d9000017 	ldw	r4,0(sp)
  80c804:	00800074 	movhi	r2,1
  80c808:	2085883a 	add	r2,r4,r2
  80c80c:	d8800015 	stw	r2,0(sp)
  80c810:	1804943a 	slli	r2,r3,16
  80c814:	85ffffcc 	andi	r23,r16,65535
  80c818:	b5bfffcc 	andi	r22,r22,65535
  80c81c:	1585883a 	add	r2,r2,r22
  80c820:	a80b883a 	mov	r5,r21
  80c824:	b809883a 	mov	r4,r23
  80c828:	1824d43a 	srli	r18,r3,16
  80c82c:	d9800515 	stw	r6,20(sp)
  80c830:	da000415 	stw	r8,16(sp)
  80c834:	d9c00315 	stw	r7,12(sp)
  80c838:	8020d43a 	srli	r16,r16,16
  80c83c:	d8800115 	stw	r2,4(sp)
  80c840:	080b14c0 	call	80b14c <__mulsi3>
  80c844:	a009883a 	mov	r4,r20
  80c848:	b80b883a 	mov	r5,r23
  80c84c:	d8800215 	stw	r2,8(sp)
  80c850:	080b14c0 	call	80b14c <__mulsi3>
  80c854:	a009883a 	mov	r4,r20
  80c858:	800b883a 	mov	r5,r16
  80c85c:	102d883a 	mov	r22,r2
  80c860:	080b14c0 	call	80b14c <__mulsi3>
  80c864:	a80b883a 	mov	r5,r21
  80c868:	8009883a 	mov	r4,r16
  80c86c:	1029883a 	mov	r20,r2
  80c870:	080b14c0 	call	80b14c <__mulsi3>
  80c874:	da800217 	ldw	r10,8(sp)
  80c878:	1585883a 	add	r2,r2,r22
  80c87c:	d9c00317 	ldw	r7,12(sp)
  80c880:	5006d43a 	srli	r3,r10,16
  80c884:	da000417 	ldw	r8,16(sp)
  80c888:	d9800517 	ldw	r6,20(sp)
  80c88c:	1887883a 	add	r3,r3,r2
  80c890:	1d80022e 	bgeu	r3,r22,80c89c <__muldf3+0x2b8>
  80c894:	00800074 	movhi	r2,1
  80c898:	a0a9883a 	add	r20,r20,r2
  80c89c:	1804d43a 	srli	r2,r3,16
  80c8a0:	1806943a 	slli	r3,r3,16
  80c8a4:	982cd43a 	srli	r22,r19,16
  80c8a8:	9d7fffcc 	andi	r21,r19,65535
  80c8ac:	e009883a 	mov	r4,fp
  80c8b0:	54ffffcc 	andi	r19,r10,65535
  80c8b4:	a80b883a 	mov	r5,r21
  80c8b8:	1ce7883a 	add	r19,r3,r19
  80c8bc:	d9800515 	stw	r6,20(sp)
  80c8c0:	da000415 	stw	r8,16(sp)
  80c8c4:	d9c00315 	stw	r7,12(sp)
  80c8c8:	1529883a 	add	r20,r2,r20
  80c8cc:	080b14c0 	call	80b14c <__mulsi3>
  80c8d0:	e00b883a 	mov	r5,fp
  80c8d4:	b009883a 	mov	r4,r22
  80c8d8:	d8800215 	stw	r2,8(sp)
  80c8dc:	080b14c0 	call	80b14c <__mulsi3>
  80c8e0:	8809883a 	mov	r4,r17
  80c8e4:	b00b883a 	mov	r5,r22
  80c8e8:	1039883a 	mov	fp,r2
  80c8ec:	080b14c0 	call	80b14c <__mulsi3>
  80c8f0:	8809883a 	mov	r4,r17
  80c8f4:	a80b883a 	mov	r5,r21
  80c8f8:	1023883a 	mov	r17,r2
  80c8fc:	080b14c0 	call	80b14c <__mulsi3>
  80c900:	d8c00217 	ldw	r3,8(sp)
  80c904:	1705883a 	add	r2,r2,fp
  80c908:	d9c00317 	ldw	r7,12(sp)
  80c90c:	1808d43a 	srli	r4,r3,16
  80c910:	da000417 	ldw	r8,16(sp)
  80c914:	d9800517 	ldw	r6,20(sp)
  80c918:	2089883a 	add	r4,r4,r2
  80c91c:	94e5883a 	add	r18,r18,r19
  80c920:	2700022e 	bgeu	r4,fp,80c92c <__muldf3+0x348>
  80c924:	00800074 	movhi	r2,1
  80c928:	88a3883a 	add	r17,r17,r2
  80c92c:	2004d43a 	srli	r2,r4,16
  80c930:	2038943a 	slli	fp,r4,16
  80c934:	18ffffcc 	andi	r3,r3,65535
  80c938:	b809883a 	mov	r4,r23
  80c93c:	a80b883a 	mov	r5,r21
  80c940:	d9800415 	stw	r6,16(sp)
  80c944:	da000315 	stw	r8,12(sp)
  80c948:	d9c00215 	stw	r7,8(sp)
  80c94c:	e0f9883a 	add	fp,fp,r3
  80c950:	1463883a 	add	r17,r2,r17
  80c954:	080b14c0 	call	80b14c <__mulsi3>
  80c958:	b80b883a 	mov	r5,r23
  80c95c:	b009883a 	mov	r4,r22
  80c960:	102f883a 	mov	r23,r2
  80c964:	080b14c0 	call	80b14c <__mulsi3>
  80c968:	b00b883a 	mov	r5,r22
  80c96c:	8009883a 	mov	r4,r16
  80c970:	102d883a 	mov	r22,r2
  80c974:	080b14c0 	call	80b14c <__mulsi3>
  80c978:	a80b883a 	mov	r5,r21
  80c97c:	8009883a 	mov	r4,r16
  80c980:	1021883a 	mov	r16,r2
  80c984:	080b14c0 	call	80b14c <__mulsi3>
  80c988:	b80ad43a 	srli	r5,r23,16
  80c98c:	1585883a 	add	r2,r2,r22
  80c990:	d9c00217 	ldw	r7,8(sp)
  80c994:	288b883a 	add	r5,r5,r2
  80c998:	da000317 	ldw	r8,12(sp)
  80c99c:	d9800417 	ldw	r6,16(sp)
  80c9a0:	2d80022e 	bgeu	r5,r22,80c9ac <__muldf3+0x3c8>
  80c9a4:	00800074 	movhi	r2,1
  80c9a8:	80a1883a 	add	r16,r16,r2
  80c9ac:	2806943a 	slli	r3,r5,16
  80c9b0:	d8800017 	ldw	r2,0(sp)
  80c9b4:	bdffffcc 	andi	r23,r23,65535
  80c9b8:	1dc7883a 	add	r3,r3,r23
  80c9bc:	90ab883a 	add	r21,r18,r2
  80c9c0:	acd5803a 	cmpltu	r10,r21,r19
  80c9c4:	1d07883a 	add	r3,r3,r20
  80c9c8:	af2b883a 	add	r21,r21,fp
  80c9cc:	1a97883a 	add	r11,r3,r10
  80c9d0:	af09803a 	cmpltu	r4,r21,fp
  80c9d4:	2826d43a 	srli	r19,r5,16
  80c9d8:	5c53883a 	add	r9,r11,r17
  80c9dc:	4905883a 	add	r2,r9,r4
  80c9e0:	1d07803a 	cmpltu	r3,r3,r20
  80c9e4:	5a95803a 	cmpltu	r10,r11,r10
  80c9e8:	1a86b03a 	or	r3,r3,r10
  80c9ec:	1109803a 	cmpltu	r4,r2,r4
  80c9f0:	4c53803a 	cmpltu	r9,r9,r17
  80c9f4:	1ce7883a 	add	r19,r3,r19
  80c9f8:	4908b03a 	or	r4,r9,r4
  80c9fc:	a824927a 	slli	r18,r21,9
  80ca00:	d8c00117 	ldw	r3,4(sp)
  80ca04:	9927883a 	add	r19,r19,r4
  80ca08:	9c27883a 	add	r19,r19,r16
  80ca0c:	9826927a 	slli	r19,r19,9
  80ca10:	a82ad5fa 	srli	r21,r21,23
  80ca14:	100ad5fa 	srli	r5,r2,23
  80ca18:	90e4b03a 	or	r18,r18,r3
  80ca1c:	1004927a 	slli	r2,r2,9
  80ca20:	9024c03a 	cmpne	r18,r18,zero
  80ca24:	9564b03a 	or	r18,r18,r21
  80ca28:	98c0402c 	andhi	r3,r19,256
  80ca2c:	90a4b03a 	or	r18,r18,r2
  80ca30:	9966b03a 	or	r19,r19,r5
  80ca34:	1800b626 	beq	r3,zero,80cd10 <__muldf3+0x72c>
  80ca38:	9006d07a 	srli	r3,r18,1
  80ca3c:	980497fa 	slli	r2,r19,31
  80ca40:	9480004c 	andi	r18,r18,1
  80ca44:	9826d07a 	srli	r19,r19,1
  80ca48:	1c86b03a 	or	r3,r3,r18
  80ca4c:	18a4b03a 	or	r18,r3,r2
  80ca50:	3900ffc4 	addi	r4,r7,1023
  80ca54:	0100690e 	bge	zero,r4,80cbfc <__muldf3+0x618>
  80ca58:	908001cc 	andi	r2,r18,7
  80ca5c:	10000726 	beq	r2,zero,80ca7c <__muldf3+0x498>
  80ca60:	908003cc 	andi	r2,r18,15
  80ca64:	10800120 	cmpeqi	r2,r2,4
  80ca68:	1000041e 	bne	r2,zero,80ca7c <__muldf3+0x498>
  80ca6c:	90800104 	addi	r2,r18,4
  80ca70:	14a5803a 	cmpltu	r18,r2,r18
  80ca74:	9ca7883a 	add	r19,r19,r18
  80ca78:	1025883a 	mov	r18,r2
  80ca7c:	9880402c 	andhi	r2,r19,256
  80ca80:	10000426 	beq	r2,zero,80ca94 <__muldf3+0x4b0>
  80ca84:	00bfc034 	movhi	r2,65280
  80ca88:	10bfffc4 	addi	r2,r2,-1
  80ca8c:	98a6703a 	and	r19,r19,r2
  80ca90:	39010004 	addi	r4,r7,1024
  80ca94:	2081ffc8 	cmpgei	r2,r4,2047
  80ca98:	103f381e 	bne	r2,zero,80c77c <__muldf3+0x198>
  80ca9c:	9804977a 	slli	r2,r19,29
  80caa0:	9024d0fa 	srli	r18,r18,3
  80caa4:	9826927a 	slli	r19,r19,9
  80caa8:	20c1ffcc 	andi	r3,r4,2047
  80caac:	14a4b03a 	or	r18,r2,r18
  80cab0:	9826d33a 	srli	r19,r19,12
  80cab4:	003f2006 	br	80c738 <__muldf3+0x154>
  80cab8:	8722b03a 	or	r17,r16,fp
  80cabc:	88004526 	beq	r17,zero,80cbd4 <__muldf3+0x5f0>
  80cac0:	da000015 	stw	r8,0(sp)
  80cac4:	80008626 	beq	r16,zero,80cce0 <__muldf3+0x6fc>
  80cac8:	8009883a 	mov	r4,r16
  80cacc:	080d8600 	call	80d860 <__clzsi2>
  80cad0:	da000017 	ldw	r8,0(sp)
  80cad4:	117ffd44 	addi	r5,r2,-11
  80cad8:	01000744 	movi	r4,29
  80cadc:	147ffe04 	addi	r17,r2,-8
  80cae0:	2149c83a 	sub	r4,r4,r5
  80cae4:	8460983a 	sll	r16,r16,r17
  80cae8:	e108d83a 	srl	r4,fp,r4
  80caec:	e462983a 	sll	r17,fp,r17
  80caf0:	2420b03a 	or	r16,r4,r16
  80caf4:	4091c83a 	sub	r8,r8,r2
  80caf8:	423f0344 	addi	r8,r8,-1011
  80cafc:	0009883a 	mov	r4,zero
  80cb00:	003ee706 	br	80c6a0 <__muldf3+0xbc>
  80cb04:	9924b03a 	or	r18,r19,r4
  80cb08:	90002d26 	beq	r18,zero,80cbc0 <__muldf3+0x5dc>
  80cb0c:	d9c00015 	stw	r7,0(sp)
  80cb10:	98006826 	beq	r19,zero,80ccb4 <__muldf3+0x6d0>
  80cb14:	9809883a 	mov	r4,r19
  80cb18:	080d8600 	call	80d860 <__clzsi2>
  80cb1c:	d9c00017 	ldw	r7,0(sp)
  80cb20:	113ffd44 	addi	r4,r2,-11
  80cb24:	00c00744 	movi	r3,29
  80cb28:	14bffe04 	addi	r18,r2,-8
  80cb2c:	1907c83a 	sub	r3,r3,r4
  80cb30:	9ca6983a 	sll	r19,r19,r18
  80cb34:	88c6d83a 	srl	r3,r17,r3
  80cb38:	8ca4983a 	sll	r18,r17,r18
  80cb3c:	1ce6b03a 	or	r19,r3,r19
  80cb40:	023f0344 	movi	r8,-1011
  80cb44:	4091c83a 	sub	r8,r8,r2
  80cb48:	002b883a 	mov	r21,zero
  80cb4c:	002d883a 	mov	r22,zero
  80cb50:	003ec206 	br	80c65c <__muldf3+0x78>
  80cb54:	9924b03a 	or	r18,r19,r4
  80cb58:	9000141e 	bne	r18,zero,80cbac <__muldf3+0x5c8>
  80cb5c:	0027883a 	mov	r19,zero
  80cb60:	05400204 	movi	r21,8
  80cb64:	0201ffc4 	movi	r8,2047
  80cb68:	05800084 	movi	r22,2
  80cb6c:	003ebb06 	br	80c65c <__muldf3+0x78>
  80cb70:	8722b03a 	or	r17,r16,fp
  80cb74:	4201ffc4 	addi	r8,r8,2047
  80cb78:	8800081e 	bne	r17,zero,80cb9c <__muldf3+0x5b8>
  80cb7c:	ad400094 	ori	r21,r21,2
  80cb80:	0021883a 	mov	r16,zero
  80cb84:	01000084 	movi	r4,2
  80cb88:	003ec506 	br	80c6a0 <__muldf3+0xbc>
  80cb8c:	b08000a0 	cmpeqi	r2,r22,2
  80cb90:	a00d883a 	mov	r6,r20
  80cb94:	103ee126 	beq	r2,zero,80c71c <__muldf3+0x138>
  80cb98:	003ef806 	br	80c77c <__muldf3+0x198>
  80cb9c:	ad4000d4 	ori	r21,r21,3
  80cba0:	e023883a 	mov	r17,fp
  80cba4:	010000c4 	movi	r4,3
  80cba8:	003ebd06 	br	80c6a0 <__muldf3+0xbc>
  80cbac:	2025883a 	mov	r18,r4
  80cbb0:	05400304 	movi	r21,12
  80cbb4:	0201ffc4 	movi	r8,2047
  80cbb8:	058000c4 	movi	r22,3
  80cbbc:	003ea706 	br	80c65c <__muldf3+0x78>
  80cbc0:	0027883a 	mov	r19,zero
  80cbc4:	05400104 	movi	r21,4
  80cbc8:	0011883a 	mov	r8,zero
  80cbcc:	05800044 	movi	r22,1
  80cbd0:	003ea206 	br	80c65c <__muldf3+0x78>
  80cbd4:	ad400054 	ori	r21,r21,1
  80cbd8:	0021883a 	mov	r16,zero
  80cbdc:	01000044 	movi	r4,1
  80cbe0:	003eaf06 	br	80c6a0 <__muldf3+0xbc>
  80cbe4:	04c00434 	movhi	r19,16
  80cbe8:	000d883a 	mov	r6,zero
  80cbec:	9cffffc4 	addi	r19,r19,-1
  80cbf0:	04bfffc4 	movi	r18,-1
  80cbf4:	00c1ffc4 	movi	r3,2047
  80cbf8:	003ecf06 	br	80c738 <__muldf3+0x154>
  80cbfc:	00800044 	movi	r2,1
  80cc00:	1105c83a 	sub	r2,r2,r4
  80cc04:	10c00e48 	cmpgei	r3,r2,57
  80cc08:	183ec81e 	bne	r3,zero,80c72c <__muldf3+0x148>
  80cc0c:	10c00808 	cmpgei	r3,r2,32
  80cc10:	1800411e 	bne	r3,zero,80cd18 <__muldf3+0x734>
  80cc14:	39c10784 	addi	r7,r7,1054
  80cc18:	99c6983a 	sll	r3,r19,r7
  80cc1c:	9088d83a 	srl	r4,r18,r2
  80cc20:	91ce983a 	sll	r7,r18,r7
  80cc24:	98a6d83a 	srl	r19,r19,r2
  80cc28:	1904b03a 	or	r2,r3,r4
  80cc2c:	3824c03a 	cmpne	r18,r7,zero
  80cc30:	1484b03a 	or	r2,r2,r18
  80cc34:	10c001cc 	andi	r3,r2,7
  80cc38:	18000726 	beq	r3,zero,80cc58 <__muldf3+0x674>
  80cc3c:	10c003cc 	andi	r3,r2,15
  80cc40:	18c00120 	cmpeqi	r3,r3,4
  80cc44:	1800041e 	bne	r3,zero,80cc58 <__muldf3+0x674>
  80cc48:	10c00104 	addi	r3,r2,4
  80cc4c:	1885803a 	cmpltu	r2,r3,r2
  80cc50:	98a7883a 	add	r19,r19,r2
  80cc54:	1805883a 	mov	r2,r3
  80cc58:	98c0202c 	andhi	r3,r19,128
  80cc5c:	18004326 	beq	r3,zero,80cd6c <__muldf3+0x788>
  80cc60:	00c00044 	movi	r3,1
  80cc64:	0027883a 	mov	r19,zero
  80cc68:	0025883a 	mov	r18,zero
  80cc6c:	003eb206 	br	80c738 <__muldf3+0x154>
  80cc70:	9880022c 	andhi	r2,r19,8
  80cc74:	10000926 	beq	r2,zero,80cc9c <__muldf3+0x6b8>
  80cc78:	8080022c 	andhi	r2,r16,8
  80cc7c:	1000071e 	bne	r2,zero,80cc9c <__muldf3+0x6b8>
  80cc80:	00800434 	movhi	r2,16
  80cc84:	84c00234 	orhi	r19,r16,8
  80cc88:	10bfffc4 	addi	r2,r2,-1
  80cc8c:	98a6703a 	and	r19,r19,r2
  80cc90:	b80d883a 	mov	r6,r23
  80cc94:	8825883a 	mov	r18,r17
  80cc98:	003fd606 	br	80cbf4 <__muldf3+0x610>
  80cc9c:	00800434 	movhi	r2,16
  80cca0:	9cc00234 	orhi	r19,r19,8
  80cca4:	10bfffc4 	addi	r2,r2,-1
  80cca8:	98a6703a 	and	r19,r19,r2
  80ccac:	a00d883a 	mov	r6,r20
  80ccb0:	003fd006 	br	80cbf4 <__muldf3+0x610>
  80ccb4:	080d8600 	call	80d860 <__clzsi2>
  80ccb8:	11000544 	addi	r4,r2,21
  80ccbc:	21400748 	cmpgei	r5,r4,29
  80ccc0:	1007883a 	mov	r3,r2
  80ccc4:	d9c00017 	ldw	r7,0(sp)
  80ccc8:	10800804 	addi	r2,r2,32
  80cccc:	283f9526 	beq	r5,zero,80cb24 <__muldf3+0x540>
  80ccd0:	18fffe04 	addi	r3,r3,-8
  80ccd4:	88e6983a 	sll	r19,r17,r3
  80ccd8:	0025883a 	mov	r18,zero
  80ccdc:	003f9806 	br	80cb40 <__muldf3+0x55c>
  80cce0:	e009883a 	mov	r4,fp
  80cce4:	080d8600 	call	80d860 <__clzsi2>
  80cce8:	11400544 	addi	r5,r2,21
  80ccec:	29000748 	cmpgei	r4,r5,29
  80ccf0:	1007883a 	mov	r3,r2
  80ccf4:	da000017 	ldw	r8,0(sp)
  80ccf8:	10800804 	addi	r2,r2,32
  80ccfc:	203f7626 	beq	r4,zero,80cad8 <__muldf3+0x4f4>
  80cd00:	1c3ffe04 	addi	r16,r3,-8
  80cd04:	e420983a 	sll	r16,fp,r16
  80cd08:	0023883a 	mov	r17,zero
  80cd0c:	003f7906 	br	80caf4 <__muldf3+0x510>
  80cd10:	400f883a 	mov	r7,r8
  80cd14:	003f4e06 	br	80ca50 <__muldf3+0x46c>
  80cd18:	00fff844 	movi	r3,-31
  80cd1c:	1907c83a 	sub	r3,r3,r4
  80cd20:	10800820 	cmpeqi	r2,r2,32
  80cd24:	98c6d83a 	srl	r3,r19,r3
  80cd28:	1000031e 	bne	r2,zero,80cd38 <__muldf3+0x754>
  80cd2c:	39c10f84 	addi	r7,r7,1086
  80cd30:	99e6983a 	sll	r19,r19,r7
  80cd34:	94e4b03a 	or	r18,r18,r19
  80cd38:	9024c03a 	cmpne	r18,r18,zero
  80cd3c:	90c4b03a 	or	r2,r18,r3
  80cd40:	148001cc 	andi	r18,r2,7
  80cd44:	9000051e 	bne	r18,zero,80cd5c <__muldf3+0x778>
  80cd48:	0027883a 	mov	r19,zero
  80cd4c:	1004d0fa 	srli	r2,r2,3
  80cd50:	0007883a 	mov	r3,zero
  80cd54:	14a4b03a 	or	r18,r2,r18
  80cd58:	003e7706 	br	80c738 <__muldf3+0x154>
  80cd5c:	10c003cc 	andi	r3,r2,15
  80cd60:	18c00118 	cmpnei	r3,r3,4
  80cd64:	0027883a 	mov	r19,zero
  80cd68:	183fb71e 	bne	r3,zero,80cc48 <__muldf3+0x664>
  80cd6c:	9806927a 	slli	r3,r19,9
  80cd70:	9824977a 	slli	r18,r19,29
  80cd74:	1826d33a 	srli	r19,r3,12
  80cd78:	003ff406 	br	80cd4c <__muldf3+0x768>
  80cd7c:	00800434 	movhi	r2,16
  80cd80:	9cc00234 	orhi	r19,r19,8
  80cd84:	10bfffc4 	addi	r2,r2,-1
  80cd88:	98a6703a 	and	r19,r19,r2
  80cd8c:	003f9906 	br	80cbf4 <__muldf3+0x610>

0080cd90 <__subdf3>:
  80cd90:	00800434 	movhi	r2,16
  80cd94:	3810d53a 	srli	r8,r7,20
  80cd98:	10bfffc4 	addi	r2,r2,-1
  80cd9c:	2806d53a 	srli	r3,r5,20
  80cda0:	2892703a 	and	r9,r5,r2
  80cda4:	3884703a 	and	r2,r7,r2
  80cda8:	280ad7fa 	srli	r5,r5,31
  80cdac:	481290fa 	slli	r9,r9,3
  80cdb0:	2018d77a 	srli	r12,r4,29
  80cdb4:	100490fa 	slli	r2,r2,3
  80cdb8:	3016d77a 	srli	r11,r6,29
  80cdbc:	defffb04 	addi	sp,sp,-20
  80cdc0:	4201ffcc 	andi	r8,r8,2047
  80cdc4:	dc800215 	stw	r18,8(sp)
  80cdc8:	dc400115 	stw	r17,4(sp)
  80cdcc:	1c81ffcc 	andi	r18,r3,2047
  80cdd0:	dfc00415 	stw	ra,16(sp)
  80cdd4:	dcc00315 	stw	r19,12(sp)
  80cdd8:	dc000015 	stw	r16,0(sp)
  80cddc:	4281ffd8 	cmpnei	r10,r8,2047
  80cde0:	2823883a 	mov	r17,r5
  80cde4:	201c90fa 	slli	r14,r4,3
  80cde8:	380ed7fa 	srli	r7,r7,31
  80cdec:	301a90fa 	slli	r13,r6,3
  80cdf0:	29403fcc 	andi	r5,r5,255
  80cdf4:	6252b03a 	or	r9,r12,r9
  80cdf8:	589eb03a 	or	r15,r11,r2
  80cdfc:	9207c83a 	sub	r3,r18,r8
  80ce00:	50006826 	beq	r10,zero,80cfa4 <__subdf3+0x214>
  80ce04:	3ac0005c 	xori	r11,r7,1
  80ce08:	2ac07326 	beq	r5,r11,80cfd8 <__subdf3+0x248>
  80ce0c:	00c0590e 	bge	zero,r3,80cf74 <__subdf3+0x1e4>
  80ce10:	4000691e 	bne	r8,zero,80cfb8 <__subdf3+0x228>
  80ce14:	7b44b03a 	or	r2,r15,r13
  80ce18:	1000fb26 	beq	r2,zero,80d208 <__subdf3+0x478>
  80ce1c:	18bfffc4 	addi	r2,r3,-1
  80ce20:	10019126 	beq	r2,zero,80d468 <__subdf3+0x6d8>
  80ce24:	18c1ffd8 	cmpnei	r3,r3,2047
  80ce28:	1800c326 	beq	r3,zero,80d138 <__subdf3+0x3a8>
  80ce2c:	1007883a 	mov	r3,r2
  80ce30:	18800e48 	cmpgei	r2,r3,57
  80ce34:	1000651e 	bne	r2,zero,80cfcc <__subdf3+0x23c>
  80ce38:	18800808 	cmpgei	r2,r3,32
  80ce3c:	1001331e 	bne	r2,zero,80d30c <__subdf3+0x57c>
  80ce40:	00800804 	movi	r2,32
  80ce44:	10c5c83a 	sub	r2,r2,r3
  80ce48:	78a0983a 	sll	r16,r15,r2
  80ce4c:	68c8d83a 	srl	r4,r13,r3
  80ce50:	689a983a 	sll	r13,r13,r2
  80ce54:	78c4d83a 	srl	r2,r15,r3
  80ce58:	8120b03a 	or	r16,r16,r4
  80ce5c:	681ac03a 	cmpne	r13,r13,zero
  80ce60:	8360b03a 	or	r16,r16,r13
  80ce64:	4893c83a 	sub	r9,r9,r2
  80ce68:	7421c83a 	sub	r16,r14,r16
  80ce6c:	7409803a 	cmpltu	r4,r14,r16
  80ce70:	4909c83a 	sub	r4,r9,r4
  80ce74:	2080202c 	andhi	r2,r4,128
  80ce78:	10009326 	beq	r2,zero,80d0c8 <__subdf3+0x338>
  80ce7c:	04c02034 	movhi	r19,128
  80ce80:	9cffffc4 	addi	r19,r19,-1
  80ce84:	24e6703a 	and	r19,r4,r19
  80ce88:	9800b926 	beq	r19,zero,80d170 <__subdf3+0x3e0>
  80ce8c:	9809883a 	mov	r4,r19
  80ce90:	080d8600 	call	80d860 <__clzsi2>
  80ce94:	10fffe04 	addi	r3,r2,-8
  80ce98:	01000804 	movi	r4,32
  80ce9c:	20c9c83a 	sub	r4,r4,r3
  80cea0:	8108d83a 	srl	r4,r16,r4
  80cea4:	98e6983a 	sll	r19,r19,r3
  80cea8:	80e0983a 	sll	r16,r16,r3
  80ceac:	24c8b03a 	or	r4,r4,r19
  80ceb0:	1c80b816 	blt	r3,r18,80d194 <__subdf3+0x404>
  80ceb4:	1c87c83a 	sub	r3,r3,r18
  80ceb8:	19400044 	addi	r5,r3,1
  80cebc:	28800808 	cmpgei	r2,r5,32
  80cec0:	1000751e 	bne	r2,zero,80d098 <__subdf3+0x308>
  80cec4:	00800804 	movi	r2,32
  80cec8:	1145c83a 	sub	r2,r2,r5
  80cecc:	8146d83a 	srl	r3,r16,r5
  80ced0:	80a0983a 	sll	r16,r16,r2
  80ced4:	2084983a 	sll	r2,r4,r2
  80ced8:	2148d83a 	srl	r4,r4,r5
  80cedc:	8020c03a 	cmpne	r16,r16,zero
  80cee0:	10c4b03a 	or	r2,r2,r3
  80cee4:	1420b03a 	or	r16,r2,r16
  80cee8:	0025883a 	mov	r18,zero
  80ceec:	808001cc 	andi	r2,r16,7
  80cef0:	10000726 	beq	r2,zero,80cf10 <__subdf3+0x180>
  80cef4:	808003cc 	andi	r2,r16,15
  80cef8:	10800120 	cmpeqi	r2,r2,4
  80cefc:	1000041e 	bne	r2,zero,80cf10 <__subdf3+0x180>
  80cf00:	80800104 	addi	r2,r16,4
  80cf04:	1421803a 	cmpltu	r16,r2,r16
  80cf08:	2409883a 	add	r4,r4,r16
  80cf0c:	1021883a 	mov	r16,r2
  80cf10:	2080202c 	andhi	r2,r4,128
  80cf14:	10006e26 	beq	r2,zero,80d0d0 <__subdf3+0x340>
  80cf18:	90c00044 	addi	r3,r18,1
  80cf1c:	1881ffe0 	cmpeqi	r2,r3,2047
  80cf20:	18c1ffcc 	andi	r3,r3,2047
  80cf24:	1000801e 	bne	r2,zero,80d128 <__subdf3+0x398>
  80cf28:	00bfe034 	movhi	r2,65408
  80cf2c:	10bfffc4 	addi	r2,r2,-1
  80cf30:	2088703a 	and	r4,r4,r2
  80cf34:	2004977a 	slli	r2,r4,29
  80cf38:	2008927a 	slli	r4,r4,9
  80cf3c:	8020d0fa 	srli	r16,r16,3
  80cf40:	2008d33a 	srli	r4,r4,12
  80cf44:	1404b03a 	or	r2,r2,r16
  80cf48:	1806953a 	slli	r3,r3,20
  80cf4c:	882297fa 	slli	r17,r17,31
  80cf50:	1906b03a 	or	r3,r3,r4
  80cf54:	1c46b03a 	or	r3,r3,r17
  80cf58:	dfc00417 	ldw	ra,16(sp)
  80cf5c:	dcc00317 	ldw	r19,12(sp)
  80cf60:	dc800217 	ldw	r18,8(sp)
  80cf64:	dc400117 	ldw	r17,4(sp)
  80cf68:	dc000017 	ldw	r16,0(sp)
  80cf6c:	dec00504 	addi	sp,sp,20
  80cf70:	f800283a 	ret
  80cf74:	18002c26 	beq	r3,zero,80d028 <__subdf3+0x298>
  80cf78:	4487c83a 	sub	r3,r8,r18
  80cf7c:	5823883a 	mov	r17,r11
  80cf80:	9000bb1e 	bne	r18,zero,80d270 <__subdf3+0x4e0>
  80cf84:	4b84b03a 	or	r2,r9,r14
  80cf88:	10011726 	beq	r2,zero,80d3e8 <__subdf3+0x658>
  80cf8c:	18bfffc4 	addi	r2,r3,-1
  80cf90:	10016326 	beq	r2,zero,80d520 <__subdf3+0x790>
  80cf94:	18c1ffd8 	cmpnei	r3,r3,2047
  80cf98:	18012c26 	beq	r3,zero,80d44c <__subdf3+0x6bc>
  80cf9c:	1007883a 	mov	r3,r2
  80cfa0:	0000b506 	br	80d278 <__subdf3+0x4e8>
  80cfa4:	7b44b03a 	or	r2,r15,r13
  80cfa8:	103f9626 	beq	r2,zero,80ce04 <__subdf3+0x74>
  80cfac:	3ac03fcc 	andi	r11,r7,255
  80cfb0:	29c07d26 	beq	r5,r7,80d1a8 <__subdf3+0x418>
  80cfb4:	00ffef0e 	bge	zero,r3,80cf74 <__subdf3+0x1e4>
  80cfb8:	9081ffd8 	cmpnei	r2,r18,2047
  80cfbc:	10005e26 	beq	r2,zero,80d138 <__subdf3+0x3a8>
  80cfc0:	18800e48 	cmpgei	r2,r3,57
  80cfc4:	7bc02034 	orhi	r15,r15,128
  80cfc8:	103f9b26 	beq	r2,zero,80ce38 <__subdf3+0xa8>
  80cfcc:	7b60b03a 	or	r16,r15,r13
  80cfd0:	8020c03a 	cmpne	r16,r16,zero
  80cfd4:	003fa406 	br	80ce68 <__subdf3+0xd8>
  80cfd8:	00c0730e 	bge	zero,r3,80d1a8 <__subdf3+0x418>
  80cfdc:	40002626 	beq	r8,zero,80d078 <__subdf3+0x2e8>
  80cfe0:	9081ffd8 	cmpnei	r2,r18,2047
  80cfe4:	10005426 	beq	r2,zero,80d138 <__subdf3+0x3a8>
  80cfe8:	7bc02034 	orhi	r15,r15,128
  80cfec:	18800e48 	cmpgei	r2,r3,57
  80cff0:	1000431e 	bne	r2,zero,80d100 <__subdf3+0x370>
  80cff4:	18800808 	cmpgei	r2,r3,32
  80cff8:	1000de26 	beq	r2,zero,80d374 <__subdf3+0x5e4>
  80cffc:	1c3ff804 	addi	r16,r3,-32
  80d000:	18800820 	cmpeqi	r2,r3,32
  80d004:	7c0ad83a 	srl	r5,r15,r16
  80d008:	1000041e 	bne	r2,zero,80d01c <__subdf3+0x28c>
  80d00c:	00801004 	movi	r2,64
  80d010:	10c5c83a 	sub	r2,r2,r3
  80d014:	7884983a 	sll	r2,r15,r2
  80d018:	689ab03a 	or	r13,r13,r2
  80d01c:	6820c03a 	cmpne	r16,r13,zero
  80d020:	8160b03a 	or	r16,r16,r5
  80d024:	00003806 	br	80d108 <__subdf3+0x378>
  80d028:	90800044 	addi	r2,r18,1
  80d02c:	1081ff8c 	andi	r2,r2,2046
  80d030:	1000a01e 	bne	r2,zero,80d2b4 <__subdf3+0x524>
  80d034:	4b8ab03a 	or	r5,r9,r14
  80d038:	7b44b03a 	or	r2,r15,r13
  80d03c:	9000f11e 	bne	r18,zero,80d404 <__subdf3+0x674>
  80d040:	28012e26 	beq	r5,zero,80d4fc <__subdf3+0x76c>
  80d044:	10010e26 	beq	r2,zero,80d480 <__subdf3+0x6f0>
  80d048:	7361c83a 	sub	r16,r14,r13
  80d04c:	7405803a 	cmpltu	r2,r14,r16
  80d050:	4bc9c83a 	sub	r4,r9,r15
  80d054:	2089c83a 	sub	r4,r4,r2
  80d058:	2080202c 	andhi	r2,r4,128
  80d05c:	10016d26 	beq	r2,zero,80d614 <__subdf3+0x884>
  80d060:	6ba1c83a 	sub	r16,r13,r14
  80d064:	7a49c83a 	sub	r4,r15,r9
  80d068:	6c1b803a 	cmpltu	r13,r13,r16
  80d06c:	2349c83a 	sub	r4,r4,r13
  80d070:	5823883a 	mov	r17,r11
  80d074:	003f9d06 	br	80ceec <__subdf3+0x15c>
  80d078:	7b44b03a 	or	r2,r15,r13
  80d07c:	10006226 	beq	r2,zero,80d208 <__subdf3+0x478>
  80d080:	18bfffc4 	addi	r2,r3,-1
  80d084:	1000e926 	beq	r2,zero,80d42c <__subdf3+0x69c>
  80d088:	18c1ffd8 	cmpnei	r3,r3,2047
  80d08c:	18012a26 	beq	r3,zero,80d538 <__subdf3+0x7a8>
  80d090:	1007883a 	mov	r3,r2
  80d094:	003fd506 	br	80cfec <__subdf3+0x25c>
  80d098:	18fff844 	addi	r3,r3,-31
  80d09c:	28800820 	cmpeqi	r2,r5,32
  80d0a0:	20c6d83a 	srl	r3,r4,r3
  80d0a4:	1000041e 	bne	r2,zero,80d0b8 <__subdf3+0x328>
  80d0a8:	00801004 	movi	r2,64
  80d0ac:	114bc83a 	sub	r5,r2,r5
  80d0b0:	2148983a 	sll	r4,r4,r5
  80d0b4:	8120b03a 	or	r16,r16,r4
  80d0b8:	8020c03a 	cmpne	r16,r16,zero
  80d0bc:	80e0b03a 	or	r16,r16,r3
  80d0c0:	0009883a 	mov	r4,zero
  80d0c4:	0025883a 	mov	r18,zero
  80d0c8:	808001cc 	andi	r2,r16,7
  80d0cc:	103f891e 	bne	r2,zero,80cef4 <__subdf3+0x164>
  80d0d0:	8020d0fa 	srli	r16,r16,3
  80d0d4:	2004977a 	slli	r2,r4,29
  80d0d8:	2012d0fa 	srli	r9,r4,3
  80d0dc:	9007883a 	mov	r3,r18
  80d0e0:	8084b03a 	or	r2,r16,r2
  80d0e4:	1901ffe0 	cmpeqi	r4,r3,2047
  80d0e8:	2000191e 	bne	r4,zero,80d150 <__subdf3+0x3c0>
  80d0ec:	01000434 	movhi	r4,16
  80d0f0:	213fffc4 	addi	r4,r4,-1
  80d0f4:	4908703a 	and	r4,r9,r4
  80d0f8:	18c1ffcc 	andi	r3,r3,2047
  80d0fc:	003f9206 	br	80cf48 <__subdf3+0x1b8>
  80d100:	7b60b03a 	or	r16,r15,r13
  80d104:	8020c03a 	cmpne	r16,r16,zero
  80d108:	83a1883a 	add	r16,r16,r14
  80d10c:	8389803a 	cmpltu	r4,r16,r14
  80d110:	2249883a 	add	r4,r4,r9
  80d114:	2080202c 	andhi	r2,r4,128
  80d118:	103feb26 	beq	r2,zero,80d0c8 <__subdf3+0x338>
  80d11c:	94800044 	addi	r18,r18,1
  80d120:	9081ffe0 	cmpeqi	r2,r18,2047
  80d124:	10006f26 	beq	r2,zero,80d2e4 <__subdf3+0x554>
  80d128:	00c1ffc4 	movi	r3,2047
  80d12c:	0009883a 	mov	r4,zero
  80d130:	0005883a 	mov	r2,zero
  80d134:	003f8406 	br	80cf48 <__subdf3+0x1b8>
  80d138:	4806977a 	slli	r3,r9,29
  80d13c:	00880034 	movhi	r2,8192
  80d140:	10bfffc4 	addi	r2,r2,-1
  80d144:	4812d0fa 	srli	r9,r9,3
  80d148:	2088703a 	and	r4,r4,r2
  80d14c:	20c4b03a 	or	r2,r4,r3
  80d150:	4886b03a 	or	r3,r9,r2
  80d154:	18013726 	beq	r3,zero,80d634 <__subdf3+0x8a4>
  80d158:	00c00434 	movhi	r3,16
  80d15c:	18ffffc4 	addi	r3,r3,-1
  80d160:	49000234 	orhi	r4,r9,8
  80d164:	20c8703a 	and	r4,r4,r3
  80d168:	00c1ffc4 	movi	r3,2047
  80d16c:	003f7606 	br	80cf48 <__subdf3+0x1b8>
  80d170:	8009883a 	mov	r4,r16
  80d174:	080d8600 	call	80d860 <__clzsi2>
  80d178:	10c00604 	addi	r3,r2,24
  80d17c:	19000808 	cmpgei	r4,r3,32
  80d180:	203f4526 	beq	r4,zero,80ce98 <__subdf3+0x108>
  80d184:	113ffe04 	addi	r4,r2,-8
  80d188:	8108983a 	sll	r4,r16,r4
  80d18c:	0021883a 	mov	r16,zero
  80d190:	1cbf480e 	bge	r3,r18,80ceb4 <__subdf3+0x124>
  80d194:	00bfe034 	movhi	r2,65408
  80d198:	10bfffc4 	addi	r2,r2,-1
  80d19c:	90e5c83a 	sub	r18,r18,r3
  80d1a0:	2088703a 	and	r4,r4,r2
  80d1a4:	003f5106 	br	80ceec <__subdf3+0x15c>
  80d1a8:	18001e26 	beq	r3,zero,80d224 <__subdf3+0x494>
  80d1ac:	4487c83a 	sub	r3,r8,r18
  80d1b0:	90006826 	beq	r18,zero,80d354 <__subdf3+0x5c4>
  80d1b4:	5000a526 	beq	r10,zero,80d44c <__subdf3+0x6bc>
  80d1b8:	4a402034 	orhi	r9,r9,128
  80d1bc:	18800e48 	cmpgei	r2,r3,57
  80d1c0:	1000b61e 	bne	r2,zero,80d49c <__subdf3+0x70c>
  80d1c4:	18800808 	cmpgei	r2,r3,32
  80d1c8:	1001021e 	bne	r2,zero,80d5d4 <__subdf3+0x844>
  80d1cc:	00800804 	movi	r2,32
  80d1d0:	10c5c83a 	sub	r2,r2,r3
  80d1d4:	48a0983a 	sll	r16,r9,r2
  80d1d8:	70c8d83a 	srl	r4,r14,r3
  80d1dc:	7084983a 	sll	r2,r14,r2
  80d1e0:	48d2d83a 	srl	r9,r9,r3
  80d1e4:	8120b03a 	or	r16,r16,r4
  80d1e8:	1004c03a 	cmpne	r2,r2,zero
  80d1ec:	80a0b03a 	or	r16,r16,r2
  80d1f0:	7a5f883a 	add	r15,r15,r9
  80d1f4:	8361883a 	add	r16,r16,r13
  80d1f8:	8349803a 	cmpltu	r4,r16,r13
  80d1fc:	23c9883a 	add	r4,r4,r15
  80d200:	4025883a 	mov	r18,r8
  80d204:	003fc306 	br	80d114 <__subdf3+0x384>
  80d208:	480a977a 	slli	r5,r9,29
  80d20c:	00880034 	movhi	r2,8192
  80d210:	10bfffc4 	addi	r2,r2,-1
  80d214:	2088703a 	and	r4,r4,r2
  80d218:	4812d0fa 	srli	r9,r9,3
  80d21c:	2144b03a 	or	r2,r4,r5
  80d220:	003fb006 	br	80d0e4 <__subdf3+0x354>
  80d224:	90800044 	addi	r2,r18,1
  80d228:	1141ff8c 	andi	r5,r2,2046
  80d22c:	28005c1e 	bne	r5,zero,80d3a0 <__subdf3+0x610>
  80d230:	4b84b03a 	or	r2,r9,r14
  80d234:	9000a71e 	bne	r18,zero,80d4d4 <__subdf3+0x744>
  80d238:	1000df26 	beq	r2,zero,80d5b8 <__subdf3+0x828>
  80d23c:	7b44b03a 	or	r2,r15,r13
  80d240:	10008f26 	beq	r2,zero,80d480 <__subdf3+0x6f0>
  80d244:	7361883a 	add	r16,r14,r13
  80d248:	4bc9883a 	add	r4,r9,r15
  80d24c:	839d803a 	cmpltu	r14,r16,r14
  80d250:	2389883a 	add	r4,r4,r14
  80d254:	2080202c 	andhi	r2,r4,128
  80d258:	103f9b26 	beq	r2,zero,80d0c8 <__subdf3+0x338>
  80d25c:	00bfe034 	movhi	r2,65408
  80d260:	10bfffc4 	addi	r2,r2,-1
  80d264:	2088703a 	and	r4,r4,r2
  80d268:	04800044 	movi	r18,1
  80d26c:	003f9606 	br	80d0c8 <__subdf3+0x338>
  80d270:	50007626 	beq	r10,zero,80d44c <__subdf3+0x6bc>
  80d274:	4a402034 	orhi	r9,r9,128
  80d278:	18800e48 	cmpgei	r2,r3,57
  80d27c:	10002e1e 	bne	r2,zero,80d338 <__subdf3+0x5a8>
  80d280:	18800808 	cmpgei	r2,r3,32
  80d284:	1000881e 	bne	r2,zero,80d4a8 <__subdf3+0x718>
  80d288:	00800804 	movi	r2,32
  80d28c:	10c5c83a 	sub	r2,r2,r3
  80d290:	48a0983a 	sll	r16,r9,r2
  80d294:	70c8d83a 	srl	r4,r14,r3
  80d298:	709c983a 	sll	r14,r14,r2
  80d29c:	48d2d83a 	srl	r9,r9,r3
  80d2a0:	8120b03a 	or	r16,r16,r4
  80d2a4:	701cc03a 	cmpne	r14,r14,zero
  80d2a8:	83a0b03a 	or	r16,r16,r14
  80d2ac:	7a5fc83a 	sub	r15,r15,r9
  80d2b0:	00002306 	br	80d340 <__subdf3+0x5b0>
  80d2b4:	7361c83a 	sub	r16,r14,r13
  80d2b8:	4be7c83a 	sub	r19,r9,r15
  80d2bc:	7409803a 	cmpltu	r4,r14,r16
  80d2c0:	9927c83a 	sub	r19,r19,r4
  80d2c4:	9880202c 	andhi	r2,r19,128
  80d2c8:	1000411e 	bne	r2,zero,80d3d0 <__subdf3+0x640>
  80d2cc:	84c4b03a 	or	r2,r16,r19
  80d2d0:	103eed1e 	bne	r2,zero,80ce88 <__subdf3+0xf8>
  80d2d4:	0013883a 	mov	r9,zero
  80d2d8:	0023883a 	mov	r17,zero
  80d2dc:	003f8306 	br	80d0ec <__subdf3+0x35c>
  80d2e0:	04800084 	movi	r18,2
  80d2e4:	00bfe034 	movhi	r2,65408
  80d2e8:	10bfffc4 	addi	r2,r2,-1
  80d2ec:	8006d07a 	srli	r3,r16,1
  80d2f0:	2088703a 	and	r4,r4,r2
  80d2f4:	200497fa 	slli	r2,r4,31
  80d2f8:	8400004c 	andi	r16,r16,1
  80d2fc:	1c20b03a 	or	r16,r3,r16
  80d300:	2008d07a 	srli	r4,r4,1
  80d304:	1420b03a 	or	r16,r2,r16
  80d308:	003ef806 	br	80ceec <__subdf3+0x15c>
  80d30c:	1c3ff804 	addi	r16,r3,-32
  80d310:	18800820 	cmpeqi	r2,r3,32
  80d314:	7c0ad83a 	srl	r5,r15,r16
  80d318:	1000041e 	bne	r2,zero,80d32c <__subdf3+0x59c>
  80d31c:	00801004 	movi	r2,64
  80d320:	10c5c83a 	sub	r2,r2,r3
  80d324:	7884983a 	sll	r2,r15,r2
  80d328:	689ab03a 	or	r13,r13,r2
  80d32c:	6820c03a 	cmpne	r16,r13,zero
  80d330:	8160b03a 	or	r16,r16,r5
  80d334:	003ecc06 	br	80ce68 <__subdf3+0xd8>
  80d338:	4b92b03a 	or	r9,r9,r14
  80d33c:	4820c03a 	cmpne	r16,r9,zero
  80d340:	6c21c83a 	sub	r16,r13,r16
  80d344:	6c09803a 	cmpltu	r4,r13,r16
  80d348:	7909c83a 	sub	r4,r15,r4
  80d34c:	4025883a 	mov	r18,r8
  80d350:	003ec806 	br	80ce74 <__subdf3+0xe4>
  80d354:	4b84b03a 	or	r2,r9,r14
  80d358:	10007e26 	beq	r2,zero,80d554 <__subdf3+0x7c4>
  80d35c:	18bfffc4 	addi	r2,r3,-1
  80d360:	1000a726 	beq	r2,zero,80d600 <__subdf3+0x870>
  80d364:	18c1ffd8 	cmpnei	r3,r3,2047
  80d368:	18003826 	beq	r3,zero,80d44c <__subdf3+0x6bc>
  80d36c:	1007883a 	mov	r3,r2
  80d370:	003f9206 	br	80d1bc <__subdf3+0x42c>
  80d374:	00800804 	movi	r2,32
  80d378:	10c5c83a 	sub	r2,r2,r3
  80d37c:	78a0983a 	sll	r16,r15,r2
  80d380:	68c8d83a 	srl	r4,r13,r3
  80d384:	689a983a 	sll	r13,r13,r2
  80d388:	78c4d83a 	srl	r2,r15,r3
  80d38c:	8120b03a 	or	r16,r16,r4
  80d390:	681ac03a 	cmpne	r13,r13,zero
  80d394:	8360b03a 	or	r16,r16,r13
  80d398:	4893883a 	add	r9,r9,r2
  80d39c:	003f5a06 	br	80d108 <__subdf3+0x378>
  80d3a0:	10c1ffe0 	cmpeqi	r3,r2,2047
  80d3a4:	183f601e 	bne	r3,zero,80d128 <__subdf3+0x398>
  80d3a8:	735b883a 	add	r13,r14,r13
  80d3ac:	6b9d803a 	cmpltu	r14,r13,r14
  80d3b0:	4bc9883a 	add	r4,r9,r15
  80d3b4:	2389883a 	add	r4,r4,r14
  80d3b8:	202097fa 	slli	r16,r4,31
  80d3bc:	681ad07a 	srli	r13,r13,1
  80d3c0:	2008d07a 	srli	r4,r4,1
  80d3c4:	1025883a 	mov	r18,r2
  80d3c8:	8360b03a 	or	r16,r16,r13
  80d3cc:	003f3e06 	br	80d0c8 <__subdf3+0x338>
  80d3d0:	6ba1c83a 	sub	r16,r13,r14
  80d3d4:	7a49c83a 	sub	r4,r15,r9
  80d3d8:	6c1b803a 	cmpltu	r13,r13,r16
  80d3dc:	2367c83a 	sub	r19,r4,r13
  80d3e0:	5823883a 	mov	r17,r11
  80d3e4:	003ea806 	br	80ce88 <__subdf3+0xf8>
  80d3e8:	7808977a 	slli	r4,r15,29
  80d3ec:	00880034 	movhi	r2,8192
  80d3f0:	10bfffc4 	addi	r2,r2,-1
  80d3f4:	308c703a 	and	r6,r6,r2
  80d3f8:	7812d0fa 	srli	r9,r15,3
  80d3fc:	3104b03a 	or	r2,r6,r4
  80d400:	003f3806 	br	80d0e4 <__subdf3+0x354>
  80d404:	28005a1e 	bne	r5,zero,80d570 <__subdf3+0x7e0>
  80d408:	10008526 	beq	r2,zero,80d620 <__subdf3+0x890>
  80d40c:	7806977a 	slli	r3,r15,29
  80d410:	00880034 	movhi	r2,8192
  80d414:	10bfffc4 	addi	r2,r2,-1
  80d418:	3084703a 	and	r2,r6,r2
  80d41c:	7812d0fa 	srli	r9,r15,3
  80d420:	10c4b03a 	or	r2,r2,r3
  80d424:	5823883a 	mov	r17,r11
  80d428:	003f4906 	br	80d150 <__subdf3+0x3c0>
  80d42c:	7361883a 	add	r16,r14,r13
  80d430:	4bc9883a 	add	r4,r9,r15
  80d434:	839d803a 	cmpltu	r14,r16,r14
  80d438:	2389883a 	add	r4,r4,r14
  80d43c:	2080202c 	andhi	r2,r4,128
  80d440:	103fa71e 	bne	r2,zero,80d2e0 <__subdf3+0x550>
  80d444:	04800044 	movi	r18,1
  80d448:	003f1f06 	br	80d0c8 <__subdf3+0x338>
  80d44c:	7806977a 	slli	r3,r15,29
  80d450:	00880034 	movhi	r2,8192
  80d454:	10bfffc4 	addi	r2,r2,-1
  80d458:	3084703a 	and	r2,r6,r2
  80d45c:	7812d0fa 	srli	r9,r15,3
  80d460:	10c4b03a 	or	r2,r2,r3
  80d464:	003f3a06 	br	80d150 <__subdf3+0x3c0>
  80d468:	7361c83a 	sub	r16,r14,r13
  80d46c:	4bc9c83a 	sub	r4,r9,r15
  80d470:	741d803a 	cmpltu	r14,r14,r16
  80d474:	2389c83a 	sub	r4,r4,r14
  80d478:	04800044 	movi	r18,1
  80d47c:	003e7d06 	br	80ce74 <__subdf3+0xe4>
  80d480:	480a977a 	slli	r5,r9,29
  80d484:	00880034 	movhi	r2,8192
  80d488:	10bfffc4 	addi	r2,r2,-1
  80d48c:	2084703a 	and	r2,r4,r2
  80d490:	4812d0fa 	srli	r9,r9,3
  80d494:	1144b03a 	or	r2,r2,r5
  80d498:	003f1406 	br	80d0ec <__subdf3+0x35c>
  80d49c:	4b92b03a 	or	r9,r9,r14
  80d4a0:	4820c03a 	cmpne	r16,r9,zero
  80d4a4:	003f5306 	br	80d1f4 <__subdf3+0x464>
  80d4a8:	1c3ff804 	addi	r16,r3,-32
  80d4ac:	19000820 	cmpeqi	r4,r3,32
  80d4b0:	4c04d83a 	srl	r2,r9,r16
  80d4b4:	2000041e 	bne	r4,zero,80d4c8 <__subdf3+0x738>
  80d4b8:	01001004 	movi	r4,64
  80d4bc:	20c7c83a 	sub	r3,r4,r3
  80d4c0:	48d2983a 	sll	r9,r9,r3
  80d4c4:	725cb03a 	or	r14,r14,r9
  80d4c8:	7020c03a 	cmpne	r16,r14,zero
  80d4cc:	80a0b03a 	or	r16,r16,r2
  80d4d0:	003f9b06 	br	80d340 <__subdf3+0x5b0>
  80d4d4:	103fdd26 	beq	r2,zero,80d44c <__subdf3+0x6bc>
  80d4d8:	7b5ab03a 	or	r13,r15,r13
  80d4dc:	480a977a 	slli	r5,r9,29
  80d4e0:	4812d0fa 	srli	r9,r9,3
  80d4e4:	6800251e 	bne	r13,zero,80d57c <__subdf3+0x7ec>
  80d4e8:	00880034 	movhi	r2,8192
  80d4ec:	10bfffc4 	addi	r2,r2,-1
  80d4f0:	2084703a 	and	r2,r4,r2
  80d4f4:	1144b03a 	or	r2,r2,r5
  80d4f8:	003f1506 	br	80d150 <__subdf3+0x3c0>
  80d4fc:	103f7526 	beq	r2,zero,80d2d4 <__subdf3+0x544>
  80d500:	7808977a 	slli	r4,r15,29
  80d504:	00880034 	movhi	r2,8192
  80d508:	10bfffc4 	addi	r2,r2,-1
  80d50c:	3084703a 	and	r2,r6,r2
  80d510:	7812d0fa 	srli	r9,r15,3
  80d514:	1104b03a 	or	r2,r2,r4
  80d518:	5823883a 	mov	r17,r11
  80d51c:	003ef306 	br	80d0ec <__subdf3+0x35c>
  80d520:	6ba1c83a 	sub	r16,r13,r14
  80d524:	7a49c83a 	sub	r4,r15,r9
  80d528:	6c1b803a 	cmpltu	r13,r13,r16
  80d52c:	2349c83a 	sub	r4,r4,r13
  80d530:	04800044 	movi	r18,1
  80d534:	003e4f06 	br	80ce74 <__subdf3+0xe4>
  80d538:	4806977a 	slli	r3,r9,29
  80d53c:	00880034 	movhi	r2,8192
  80d540:	10bfffc4 	addi	r2,r2,-1
  80d544:	2084703a 	and	r2,r4,r2
  80d548:	4812d0fa 	srli	r9,r9,3
  80d54c:	10c4b03a 	or	r2,r2,r3
  80d550:	003eff06 	br	80d150 <__subdf3+0x3c0>
  80d554:	7808977a 	slli	r4,r15,29
  80d558:	00880034 	movhi	r2,8192
  80d55c:	10bfffc4 	addi	r2,r2,-1
  80d560:	3084703a 	and	r2,r6,r2
  80d564:	7812d0fa 	srli	r9,r15,3
  80d568:	1104b03a 	or	r2,r2,r4
  80d56c:	003edd06 	br	80d0e4 <__subdf3+0x354>
  80d570:	480a977a 	slli	r5,r9,29
  80d574:	4812d0fa 	srli	r9,r9,3
  80d578:	103fdb26 	beq	r2,zero,80d4e8 <__subdf3+0x758>
  80d57c:	00c80034 	movhi	r3,8192
  80d580:	18ffffc4 	addi	r3,r3,-1
  80d584:	20c4703a 	and	r2,r4,r3
  80d588:	4900022c 	andhi	r4,r9,8
  80d58c:	1144b03a 	or	r2,r2,r5
  80d590:	203eef26 	beq	r4,zero,80d150 <__subdf3+0x3c0>
  80d594:	7808d0fa 	srli	r4,r15,3
  80d598:	2140022c 	andhi	r5,r4,8
  80d59c:	283eec1e 	bne	r5,zero,80d150 <__subdf3+0x3c0>
  80d5a0:	7804977a 	slli	r2,r15,29
  80d5a4:	30cc703a 	and	r6,r6,r3
  80d5a8:	5823883a 	mov	r17,r11
  80d5ac:	3084b03a 	or	r2,r6,r2
  80d5b0:	2013883a 	mov	r9,r4
  80d5b4:	003ee606 	br	80d150 <__subdf3+0x3c0>
  80d5b8:	7808977a 	slli	r4,r15,29
  80d5bc:	00880034 	movhi	r2,8192
  80d5c0:	10bfffc4 	addi	r2,r2,-1
  80d5c4:	3084703a 	and	r2,r6,r2
  80d5c8:	7812d0fa 	srli	r9,r15,3
  80d5cc:	1104b03a 	or	r2,r2,r4
  80d5d0:	003ec606 	br	80d0ec <__subdf3+0x35c>
  80d5d4:	18bff804 	addi	r2,r3,-32
  80d5d8:	19000820 	cmpeqi	r4,r3,32
  80d5dc:	4884d83a 	srl	r2,r9,r2
  80d5e0:	2000041e 	bne	r4,zero,80d5f4 <__subdf3+0x864>
  80d5e4:	01001004 	movi	r4,64
  80d5e8:	20c7c83a 	sub	r3,r4,r3
  80d5ec:	48d2983a 	sll	r9,r9,r3
  80d5f0:	725cb03a 	or	r14,r14,r9
  80d5f4:	7020c03a 	cmpne	r16,r14,zero
  80d5f8:	80a0b03a 	or	r16,r16,r2
  80d5fc:	003efd06 	br	80d1f4 <__subdf3+0x464>
  80d600:	7361883a 	add	r16,r14,r13
  80d604:	4bc9883a 	add	r4,r9,r15
  80d608:	835b803a 	cmpltu	r13,r16,r13
  80d60c:	2349883a 	add	r4,r4,r13
  80d610:	003f8a06 	br	80d43c <__subdf3+0x6ac>
  80d614:	8104b03a 	or	r2,r16,r4
  80d618:	103f2e26 	beq	r2,zero,80d2d4 <__subdf3+0x544>
  80d61c:	003eaa06 	br	80d0c8 <__subdf3+0x338>
  80d620:	02400434 	movhi	r9,16
  80d624:	0023883a 	mov	r17,zero
  80d628:	00bfffc4 	movi	r2,-1
  80d62c:	4a7fffc4 	addi	r9,r9,-1
  80d630:	003ec906 	br	80d158 <__subdf3+0x3c8>
  80d634:	0005883a 	mov	r2,zero
  80d638:	00c1ffc4 	movi	r3,2047
  80d63c:	0009883a 	mov	r4,zero
  80d640:	003e4106 	br	80cf48 <__subdf3+0x1b8>

0080d644 <__unorddf2>:
  80d644:	2806d53a 	srli	r3,r5,20
  80d648:	3810d53a 	srli	r8,r7,20
  80d64c:	02400434 	movhi	r9,16
  80d650:	18c1ffcc 	andi	r3,r3,2047
  80d654:	4a7fffc4 	addi	r9,r9,-1
  80d658:	18c1ffd8 	cmpnei	r3,r3,2047
  80d65c:	2a4a703a 	and	r5,r5,r9
  80d660:	3a4e703a 	and	r7,r7,r9
  80d664:	4201ffcc 	andi	r8,r8,2047
  80d668:	18000426 	beq	r3,zero,80d67c <__unorddf2+0x38>
  80d66c:	4201ffd8 	cmpnei	r8,r8,2047
  80d670:	40000626 	beq	r8,zero,80d68c <__unorddf2+0x48>
  80d674:	0005883a 	mov	r2,zero
  80d678:	f800283a 	ret
  80d67c:	290ab03a 	or	r5,r5,r4
  80d680:	283ffa26 	beq	r5,zero,80d66c <__unorddf2+0x28>
  80d684:	00800044 	movi	r2,1
  80d688:	f800283a 	ret
  80d68c:	398eb03a 	or	r7,r7,r6
  80d690:	3804c03a 	cmpne	r2,r7,zero
  80d694:	f800283a 	ret

0080d698 <__fixdfsi>:
  80d698:	2806d53a 	srli	r3,r5,20
  80d69c:	01800434 	movhi	r6,16
  80d6a0:	31bfffc4 	addi	r6,r6,-1
  80d6a4:	18c1ffcc 	andi	r3,r3,2047
  80d6a8:	19c0ffd0 	cmplti	r7,r3,1023
  80d6ac:	2810d7fa 	srli	r8,r5,31
  80d6b0:	298a703a 	and	r5,r5,r6
  80d6b4:	3800061e 	bne	r7,zero,80d6d0 <__fixdfsi+0x38>
  80d6b8:	18810790 	cmplti	r2,r3,1054
  80d6bc:	1000061e 	bne	r2,zero,80d6d8 <__fixdfsi+0x40>
  80d6c0:	00a00034 	movhi	r2,32768
  80d6c4:	10bfffc4 	addi	r2,r2,-1
  80d6c8:	4085883a 	add	r2,r8,r2
  80d6cc:	f800283a 	ret
  80d6d0:	0005883a 	mov	r2,zero
  80d6d4:	f800283a 	ret
  80d6d8:	01810cc4 	movi	r6,1075
  80d6dc:	30cdc83a 	sub	r6,r6,r3
  80d6e0:	30800808 	cmpgei	r2,r6,32
  80d6e4:	29400434 	orhi	r5,r5,16
  80d6e8:	1000071e 	bne	r2,zero,80d708 <__fixdfsi+0x70>
  80d6ec:	18befb44 	addi	r2,r3,-1043
  80d6f0:	2884983a 	sll	r2,r5,r2
  80d6f4:	2188d83a 	srl	r4,r4,r6
  80d6f8:	1104b03a 	or	r2,r2,r4
  80d6fc:	403ff526 	beq	r8,zero,80d6d4 <__fixdfsi+0x3c>
  80d700:	0085c83a 	sub	r2,zero,r2
  80d704:	f800283a 	ret
  80d708:	008104c4 	movi	r2,1043
  80d70c:	10c5c83a 	sub	r2,r2,r3
  80d710:	2884d83a 	srl	r2,r5,r2
  80d714:	003ff906 	br	80d6fc <__fixdfsi+0x64>

0080d718 <__floatsidf>:
  80d718:	defffd04 	addi	sp,sp,-12
  80d71c:	dfc00215 	stw	ra,8(sp)
  80d720:	dc400115 	stw	r17,4(sp)
  80d724:	dc000015 	stw	r16,0(sp)
  80d728:	20001326 	beq	r4,zero,80d778 <__floatsidf+0x60>
  80d72c:	2022d7fa 	srli	r17,r4,31
  80d730:	2021883a 	mov	r16,r4
  80d734:	20002416 	blt	r4,zero,80d7c8 <__floatsidf+0xb0>
  80d738:	8009883a 	mov	r4,r16
  80d73c:	080d8600 	call	80d860 <__clzsi2>
  80d740:	01010784 	movi	r4,1054
  80d744:	2089c83a 	sub	r4,r4,r2
  80d748:	114002c8 	cmpgei	r5,r2,11
  80d74c:	20c1ffcc 	andi	r3,r4,2047
  80d750:	2800161e 	bne	r5,zero,80d7ac <__floatsidf+0x94>
  80d754:	010002c4 	movi	r4,11
  80d758:	2089c83a 	sub	r4,r4,r2
  80d75c:	810ad83a 	srl	r5,r16,r4
  80d760:	01000434 	movhi	r4,16
  80d764:	10800544 	addi	r2,r2,21
  80d768:	213fffc4 	addi	r4,r4,-1
  80d76c:	8084983a 	sll	r2,r16,r2
  80d770:	290a703a 	and	r5,r5,r4
  80d774:	00000406 	br	80d788 <__floatsidf+0x70>
  80d778:	0023883a 	mov	r17,zero
  80d77c:	0007883a 	mov	r3,zero
  80d780:	000b883a 	mov	r5,zero
  80d784:	0005883a 	mov	r2,zero
  80d788:	1808953a 	slli	r4,r3,20
  80d78c:	880697fa 	slli	r3,r17,31
  80d790:	2148b03a 	or	r4,r4,r5
  80d794:	20c6b03a 	or	r3,r4,r3
  80d798:	dfc00217 	ldw	ra,8(sp)
  80d79c:	dc400117 	ldw	r17,4(sp)
  80d7a0:	dc000017 	ldw	r16,0(sp)
  80d7a4:	dec00304 	addi	sp,sp,12
  80d7a8:	f800283a 	ret
  80d7ac:	10bffd44 	addi	r2,r2,-11
  80d7b0:	808a983a 	sll	r5,r16,r2
  80d7b4:	00800434 	movhi	r2,16
  80d7b8:	10bfffc4 	addi	r2,r2,-1
  80d7bc:	288a703a 	and	r5,r5,r2
  80d7c0:	0005883a 	mov	r2,zero
  80d7c4:	003ff006 	br	80d788 <__floatsidf+0x70>
  80d7c8:	0121c83a 	sub	r16,zero,r4
  80d7cc:	003fda06 	br	80d738 <__floatsidf+0x20>

0080d7d0 <__floatunsidf>:
  80d7d0:	defffe04 	addi	sp,sp,-8
  80d7d4:	dc000015 	stw	r16,0(sp)
  80d7d8:	dfc00115 	stw	ra,4(sp)
  80d7dc:	2021883a 	mov	r16,r4
  80d7e0:	20000f26 	beq	r4,zero,80d820 <__floatunsidf+0x50>
  80d7e4:	080d8600 	call	80d860 <__clzsi2>
  80d7e8:	00c10784 	movi	r3,1054
  80d7ec:	1887c83a 	sub	r3,r3,r2
  80d7f0:	110002c8 	cmpgei	r4,r2,11
  80d7f4:	18c1ffcc 	andi	r3,r3,2047
  80d7f8:	2000121e 	bne	r4,zero,80d844 <__floatunsidf+0x74>
  80d7fc:	014002c4 	movi	r5,11
  80d800:	288bc83a 	sub	r5,r5,r2
  80d804:	814ad83a 	srl	r5,r16,r5
  80d808:	01000434 	movhi	r4,16
  80d80c:	10800544 	addi	r2,r2,21
  80d810:	213fffc4 	addi	r4,r4,-1
  80d814:	80a0983a 	sll	r16,r16,r2
  80d818:	290a703a 	and	r5,r5,r4
  80d81c:	00000206 	br	80d828 <__floatunsidf+0x58>
  80d820:	0007883a 	mov	r3,zero
  80d824:	000b883a 	mov	r5,zero
  80d828:	1806953a 	slli	r3,r3,20
  80d82c:	8005883a 	mov	r2,r16
  80d830:	1946b03a 	or	r3,r3,r5
  80d834:	dfc00117 	ldw	ra,4(sp)
  80d838:	dc000017 	ldw	r16,0(sp)
  80d83c:	dec00204 	addi	sp,sp,8
  80d840:	f800283a 	ret
  80d844:	117ffd44 	addi	r5,r2,-11
  80d848:	814a983a 	sll	r5,r16,r5
  80d84c:	00800434 	movhi	r2,16
  80d850:	10bfffc4 	addi	r2,r2,-1
  80d854:	288a703a 	and	r5,r5,r2
  80d858:	0021883a 	mov	r16,zero
  80d85c:	003ff206 	br	80d828 <__floatunsidf+0x58>

0080d860 <__clzsi2>:
  80d860:	00bfffd4 	movui	r2,65535
  80d864:	11000436 	bltu	r2,r4,80d878 <__clzsi2+0x18>
  80d868:	20804030 	cmpltui	r2,r4,256
  80d86c:	10000e26 	beq	r2,zero,80d8a8 <__clzsi2+0x48>
  80d870:	01400804 	movi	r5,32
  80d874:	00000406 	br	80d888 <__clzsi2+0x28>
  80d878:	00804034 	movhi	r2,256
  80d87c:	20800736 	bltu	r4,r2,80d89c <__clzsi2+0x3c>
  80d880:	2008d63a 	srli	r4,r4,24
  80d884:	01400204 	movi	r5,8
  80d888:	00c02074 	movhi	r3,129
  80d88c:	20c7883a 	add	r3,r4,r3
  80d890:	1882e303 	ldbu	r2,2956(r3)
  80d894:	2885c83a 	sub	r2,r5,r2
  80d898:	f800283a 	ret
  80d89c:	2008d43a 	srli	r4,r4,16
  80d8a0:	01400404 	movi	r5,16
  80d8a4:	003ff806 	br	80d888 <__clzsi2+0x28>
  80d8a8:	2008d23a 	srli	r4,r4,8
  80d8ac:	01400604 	movi	r5,24
  80d8b0:	003ff506 	br	80d888 <__clzsi2+0x28>

0080d8b4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d8b4:	defffe04 	addi	sp,sp,-8
  80d8b8:	dfc00115 	stw	ra,4(sp)
  80d8bc:	df000015 	stw	fp,0(sp)
  80d8c0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d8c4:	d0a00a17 	ldw	r2,-32728(gp)
  80d8c8:	10000326 	beq	r2,zero,80d8d8 <alt_get_errno+0x24>
  80d8cc:	d0a00a17 	ldw	r2,-32728(gp)
  80d8d0:	103ee83a 	callr	r2
  80d8d4:	00000106 	br	80d8dc <alt_get_errno+0x28>
  80d8d8:	d0a71b04 	addi	r2,gp,-25492
}
  80d8dc:	e037883a 	mov	sp,fp
  80d8e0:	dfc00117 	ldw	ra,4(sp)
  80d8e4:	df000017 	ldw	fp,0(sp)
  80d8e8:	dec00204 	addi	sp,sp,8
  80d8ec:	f800283a 	ret

0080d8f0 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80d8f0:	defffb04 	addi	sp,sp,-20
  80d8f4:	dfc00415 	stw	ra,16(sp)
  80d8f8:	df000315 	stw	fp,12(sp)
  80d8fc:	df000304 	addi	fp,sp,12
  80d900:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80d904:	e0bffd17 	ldw	r2,-12(fp)
  80d908:	10000916 	blt	r2,zero,80d930 <close+0x40>
  80d90c:	e0fffd17 	ldw	r3,-12(fp)
  80d910:	1805883a 	mov	r2,r3
  80d914:	1085883a 	add	r2,r2,r2
  80d918:	10c5883a 	add	r2,r2,r3
  80d91c:	100490ba 	slli	r2,r2,2
  80d920:	00c02074 	movhi	r3,129
  80d924:	18c5a704 	addi	r3,r3,5788
  80d928:	10c5883a 	add	r2,r2,r3
  80d92c:	00000106 	br	80d934 <close+0x44>
  80d930:	0005883a 	mov	r2,zero
  80d934:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
  80d938:	e0bfff17 	ldw	r2,-4(fp)
  80d93c:	10001926 	beq	r2,zero,80d9a4 <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80d940:	e0bfff17 	ldw	r2,-4(fp)
  80d944:	10800017 	ldw	r2,0(r2)
  80d948:	10800417 	ldw	r2,16(r2)
  80d94c:	10000626 	beq	r2,zero,80d968 <close+0x78>
  80d950:	e0bfff17 	ldw	r2,-4(fp)
  80d954:	10800017 	ldw	r2,0(r2)
  80d958:	10800417 	ldw	r2,16(r2)
  80d95c:	e13fff17 	ldw	r4,-4(fp)
  80d960:	103ee83a 	callr	r2
  80d964:	00000106 	br	80d96c <close+0x7c>
  80d968:	0005883a 	mov	r2,zero
  80d96c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80d970:	e13ffd17 	ldw	r4,-12(fp)
  80d974:	080e4240 	call	80e424 <alt_release_fd>
    if (rval < 0)
  80d978:	e0bffe17 	ldw	r2,-8(fp)
  80d97c:	1000070e 	bge	r2,zero,80d99c <close+0xac>
    {
      ALT_ERRNO = -rval;
  80d980:	080d8b40 	call	80d8b4 <alt_get_errno>
  80d984:	1007883a 	mov	r3,r2
  80d988:	e0bffe17 	ldw	r2,-8(fp)
  80d98c:	0085c83a 	sub	r2,zero,r2
  80d990:	18800015 	stw	r2,0(r3)
      return -1;
  80d994:	00bfffc4 	movi	r2,-1
  80d998:	00000706 	br	80d9b8 <close+0xc8>
    }
    return 0;
  80d99c:	0005883a 	mov	r2,zero
  80d9a0:	00000506 	br	80d9b8 <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d9a4:	080d8b40 	call	80d8b4 <alt_get_errno>
  80d9a8:	1007883a 	mov	r3,r2
  80d9ac:	00801444 	movi	r2,81
  80d9b0:	18800015 	stw	r2,0(r3)
    return -1;
  80d9b4:	00bfffc4 	movi	r2,-1
  }
}
  80d9b8:	e037883a 	mov	sp,fp
  80d9bc:	dfc00117 	ldw	ra,4(sp)
  80d9c0:	df000017 	ldw	fp,0(sp)
  80d9c4:	dec00204 	addi	sp,sp,8
  80d9c8:	f800283a 	ret

0080d9cc <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80d9cc:	defffc04 	addi	sp,sp,-16
  80d9d0:	df000315 	stw	fp,12(sp)
  80d9d4:	df000304 	addi	fp,sp,12
  80d9d8:	e13fff15 	stw	r4,-4(fp)
  80d9dc:	e17ffe15 	stw	r5,-8(fp)
  80d9e0:	e1bffd15 	stw	r6,-12(fp)
  return len;
  80d9e4:	e0bffd17 	ldw	r2,-12(fp)
}
  80d9e8:	e037883a 	mov	sp,fp
  80d9ec:	df000017 	ldw	fp,0(sp)
  80d9f0:	dec00104 	addi	sp,sp,4
  80d9f4:	f800283a 	ret

0080d9f8 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  80d9f8:	defffd04 	addi	sp,sp,-12
  80d9fc:	df000215 	stw	fp,8(sp)
  80da00:	df000204 	addi	fp,sp,8
  80da04:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  80da08:	0001883a 	nop
  80da0c:	e0bffe17 	ldw	r2,-8(fp)
  80da10:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  80da14:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  80da18:	10000226 	beq	r2,zero,80da24 <_exit+0x2c>
    ALT_SIM_FAIL();
  80da1c:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
  80da20:	00000106 	br	80da28 <_exit+0x30>
    ALT_SIM_PASS();
  80da24:	002af0b0 	cmpltui	zero,zero,43970
}
  80da28:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  80da2c:	003fff06 	br	80da2c <_exit+0x34>

0080da30 <alt_get_errno>:
{
  80da30:	defffe04 	addi	sp,sp,-8
  80da34:	dfc00115 	stw	ra,4(sp)
  80da38:	df000015 	stw	fp,0(sp)
  80da3c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80da40:	d0a00a17 	ldw	r2,-32728(gp)
  80da44:	10000326 	beq	r2,zero,80da54 <alt_get_errno+0x24>
  80da48:	d0a00a17 	ldw	r2,-32728(gp)
  80da4c:	103ee83a 	callr	r2
  80da50:	00000106 	br	80da58 <alt_get_errno+0x28>
  80da54:	d0a71b04 	addi	r2,gp,-25492
}
  80da58:	e037883a 	mov	sp,fp
  80da5c:	dfc00117 	ldw	ra,4(sp)
  80da60:	df000017 	ldw	fp,0(sp)
  80da64:	dec00204 	addi	sp,sp,8
  80da68:	f800283a 	ret

0080da6c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80da6c:	defffb04 	addi	sp,sp,-20
  80da70:	dfc00415 	stw	ra,16(sp)
  80da74:	df000315 	stw	fp,12(sp)
  80da78:	df000304 	addi	fp,sp,12
  80da7c:	e13ffe15 	stw	r4,-8(fp)
  80da80:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80da84:	e0bffe17 	ldw	r2,-8(fp)
  80da88:	10000916 	blt	r2,zero,80dab0 <fstat+0x44>
  80da8c:	e0fffe17 	ldw	r3,-8(fp)
  80da90:	1805883a 	mov	r2,r3
  80da94:	1085883a 	add	r2,r2,r2
  80da98:	10c5883a 	add	r2,r2,r3
  80da9c:	100490ba 	slli	r2,r2,2
  80daa0:	00c02074 	movhi	r3,129
  80daa4:	18c5a704 	addi	r3,r3,5788
  80daa8:	10c5883a 	add	r2,r2,r3
  80daac:	00000106 	br	80dab4 <fstat+0x48>
  80dab0:	0005883a 	mov	r2,zero
  80dab4:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80dab8:	e0bfff17 	ldw	r2,-4(fp)
  80dabc:	10001026 	beq	r2,zero,80db00 <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80dac0:	e0bfff17 	ldw	r2,-4(fp)
  80dac4:	10800017 	ldw	r2,0(r2)
  80dac8:	10800817 	ldw	r2,32(r2)
  80dacc:	10000726 	beq	r2,zero,80daec <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
  80dad0:	e0bfff17 	ldw	r2,-4(fp)
  80dad4:	10800017 	ldw	r2,0(r2)
  80dad8:	10800817 	ldw	r2,32(r2)
  80dadc:	e17ffd17 	ldw	r5,-12(fp)
  80dae0:	e13fff17 	ldw	r4,-4(fp)
  80dae4:	103ee83a 	callr	r2
  80dae8:	00000a06 	br	80db14 <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80daec:	e0bffd17 	ldw	r2,-12(fp)
  80daf0:	00c80004 	movi	r3,8192
  80daf4:	10c00115 	stw	r3,4(r2)
      return 0;
  80daf8:	0005883a 	mov	r2,zero
  80dafc:	00000506 	br	80db14 <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80db00:	080da300 	call	80da30 <alt_get_errno>
  80db04:	1007883a 	mov	r3,r2
  80db08:	00801444 	movi	r2,81
  80db0c:	18800015 	stw	r2,0(r3)
    return -1;
  80db10:	00bfffc4 	movi	r2,-1
  }
}
  80db14:	e037883a 	mov	sp,fp
  80db18:	dfc00117 	ldw	ra,4(sp)
  80db1c:	df000017 	ldw	fp,0(sp)
  80db20:	dec00204 	addi	sp,sp,8
  80db24:	f800283a 	ret

0080db28 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
  80db28:	deffff04 	addi	sp,sp,-4
  80db2c:	df000015 	stw	fp,0(sp)
  80db30:	d839883a 	mov	fp,sp
  return 0;
  80db34:	0005883a 	mov	r2,zero
}
  80db38:	e037883a 	mov	sp,fp
  80db3c:	df000017 	ldw	fp,0(sp)
  80db40:	dec00104 	addi	sp,sp,4
  80db44:	f800283a 	ret

0080db48 <alt_get_errno>:
{
  80db48:	defffe04 	addi	sp,sp,-8
  80db4c:	dfc00115 	stw	ra,4(sp)
  80db50:	df000015 	stw	fp,0(sp)
  80db54:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80db58:	d0a00a17 	ldw	r2,-32728(gp)
  80db5c:	10000326 	beq	r2,zero,80db6c <alt_get_errno+0x24>
  80db60:	d0a00a17 	ldw	r2,-32728(gp)
  80db64:	103ee83a 	callr	r2
  80db68:	00000106 	br	80db70 <alt_get_errno+0x28>
  80db6c:	d0a71b04 	addi	r2,gp,-25492
}
  80db70:	e037883a 	mov	sp,fp
  80db74:	dfc00117 	ldw	ra,4(sp)
  80db78:	df000017 	ldw	fp,0(sp)
  80db7c:	dec00204 	addi	sp,sp,8
  80db80:	f800283a 	ret

0080db84 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80db84:	deffea04 	addi	sp,sp,-88
  80db88:	dfc01515 	stw	ra,84(sp)
  80db8c:	df001415 	stw	fp,80(sp)
  80db90:	df001404 	addi	fp,sp,80
  80db94:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80db98:	e0bfec17 	ldw	r2,-80(fp)
  80db9c:	10000916 	blt	r2,zero,80dbc4 <isatty+0x40>
  80dba0:	e0ffec17 	ldw	r3,-80(fp)
  80dba4:	1805883a 	mov	r2,r3
  80dba8:	1085883a 	add	r2,r2,r2
  80dbac:	10c5883a 	add	r2,r2,r3
  80dbb0:	100490ba 	slli	r2,r2,2
  80dbb4:	00c02074 	movhi	r3,129
  80dbb8:	18c5a704 	addi	r3,r3,5788
  80dbbc:	10c5883a 	add	r2,r2,r3
  80dbc0:	00000106 	br	80dbc8 <isatty+0x44>
  80dbc4:	0005883a 	mov	r2,zero
  80dbc8:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80dbcc:	e0bfff17 	ldw	r2,-4(fp)
  80dbd0:	10000e26 	beq	r2,zero,80dc0c <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80dbd4:	e0bfff17 	ldw	r2,-4(fp)
  80dbd8:	10800017 	ldw	r2,0(r2)
  80dbdc:	10800817 	ldw	r2,32(r2)
  80dbe0:	1000021e 	bne	r2,zero,80dbec <isatty+0x68>
    {
      return 1;
  80dbe4:	00800044 	movi	r2,1
  80dbe8:	00000d06 	br	80dc20 <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80dbec:	e0bfed04 	addi	r2,fp,-76
  80dbf0:	100b883a 	mov	r5,r2
  80dbf4:	e13fec17 	ldw	r4,-80(fp)
  80dbf8:	080da6c0 	call	80da6c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80dbfc:	e0bfee17 	ldw	r2,-72(fp)
  80dc00:	10880020 	cmpeqi	r2,r2,8192
  80dc04:	10803fcc 	andi	r2,r2,255
  80dc08:	00000506 	br	80dc20 <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80dc0c:	080db480 	call	80db48 <alt_get_errno>
  80dc10:	1007883a 	mov	r3,r2
  80dc14:	00801444 	movi	r2,81
  80dc18:	18800015 	stw	r2,0(r3)
    return 0;
  80dc1c:	0005883a 	mov	r2,zero
  }
}
  80dc20:	e037883a 	mov	sp,fp
  80dc24:	dfc00117 	ldw	ra,4(sp)
  80dc28:	df000017 	ldw	fp,0(sp)
  80dc2c:	dec00204 	addi	sp,sp,8
  80dc30:	f800283a 	ret

0080dc34 <alt_get_errno>:
{
  80dc34:	defffe04 	addi	sp,sp,-8
  80dc38:	dfc00115 	stw	ra,4(sp)
  80dc3c:	df000015 	stw	fp,0(sp)
  80dc40:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80dc44:	d0a00a17 	ldw	r2,-32728(gp)
  80dc48:	10000326 	beq	r2,zero,80dc58 <alt_get_errno+0x24>
  80dc4c:	d0a00a17 	ldw	r2,-32728(gp)
  80dc50:	103ee83a 	callr	r2
  80dc54:	00000106 	br	80dc5c <alt_get_errno+0x28>
  80dc58:	d0a71b04 	addi	r2,gp,-25492
}
  80dc5c:	e037883a 	mov	sp,fp
  80dc60:	dfc00117 	ldw	ra,4(sp)
  80dc64:	df000017 	ldw	fp,0(sp)
  80dc68:	dec00204 	addi	sp,sp,8
  80dc6c:	f800283a 	ret

0080dc70 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
  80dc70:	defffb04 	addi	sp,sp,-20
  80dc74:	dfc00415 	stw	ra,16(sp)
  80dc78:	df000315 	stw	fp,12(sp)
  80dc7c:	df000304 	addi	fp,sp,12
  80dc80:	e13ffe15 	stw	r4,-8(fp)
  80dc84:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
  80dc88:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
  80dc8c:	e0bffe17 	ldw	r2,-8(fp)
  80dc90:	00802e16 	blt	zero,r2,80dd4c <kill+0xdc>
  80dc94:	e0bffd17 	ldw	r2,-12(fp)
  80dc98:	10800828 	cmpgeui	r2,r2,32
  80dc9c:	1000281e 	bne	r2,zero,80dd40 <kill+0xd0>
  80dca0:	e0bffd17 	ldw	r2,-12(fp)
  80dca4:	100690ba 	slli	r3,r2,2
  80dca8:	00802074 	movhi	r2,129
  80dcac:	1885883a 	add	r2,r3,r2
  80dcb0:	10b72e17 	ldw	r2,-9032(r2)
  80dcb4:	1000683a 	jmp	r2
  80dcb8:	0080dd60 	cmpeqi	r2,zero,885
  80dcbc:	0080dd40 	call	80dd4 <__alt_mem_sdram-0x77f22c>
  80dcc0:	0080dd40 	call	80dd4 <__alt_mem_sdram-0x77f22c>
  80dcc4:	0080dd38 	rdprs	r2,zero,884
  80dcc8:	0080dd38 	rdprs	r2,zero,884
  80dccc:	0080dd38 	rdprs	r2,zero,884
  80dcd0:	0080dd38 	rdprs	r2,zero,884
  80dcd4:	0080dd40 	call	80dd4 <__alt_mem_sdram-0x77f22c>
  80dcd8:	0080dd38 	rdprs	r2,zero,884
  80dcdc:	0080dd38 	rdprs	r2,zero,884
  80dce0:	0080dd38 	rdprs	r2,zero,884
  80dce4:	0080dd38 	rdprs	r2,zero,884
  80dce8:	0080dd38 	rdprs	r2,zero,884
  80dcec:	0080dd38 	rdprs	r2,zero,884
  80dcf0:	0080dd38 	rdprs	r2,zero,884
  80dcf4:	0080dd38 	rdprs	r2,zero,884
  80dcf8:	0080dd60 	cmpeqi	r2,zero,885
  80dcfc:	0080dd40 	call	80dd4 <__alt_mem_sdram-0x77f22c>
  80dd00:	0080dd40 	call	80dd4 <__alt_mem_sdram-0x77f22c>
  80dd04:	0080dd40 	call	80dd4 <__alt_mem_sdram-0x77f22c>
  80dd08:	0080dd60 	cmpeqi	r2,zero,885
  80dd0c:	0080dd40 	call	80dd4 <__alt_mem_sdram-0x77f22c>
  80dd10:	0080dd40 	call	80dd4 <__alt_mem_sdram-0x77f22c>
  80dd14:	0080dd38 	rdprs	r2,zero,884
  80dd18:	0080dd38 	rdprs	r2,zero,884
  80dd1c:	0080dd38 	rdprs	r2,zero,884
  80dd20:	0080dd38 	rdprs	r2,zero,884
  80dd24:	0080dd38 	rdprs	r2,zero,884
  80dd28:	0080dd40 	call	80dd4 <__alt_mem_sdram-0x77f22c>
  80dd2c:	0080dd40 	call	80dd4 <__alt_mem_sdram-0x77f22c>
  80dd30:	0080dd38 	rdprs	r2,zero,884
  80dd34:	0080dd38 	rdprs	r2,zero,884
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
  80dd38:	0009883a 	mov	r4,zero
  80dd3c:	080d9f80 	call	80d9f8 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
  80dd40:	00800584 	movi	r2,22
  80dd44:	e0bfff15 	stw	r2,-4(fp)
  80dd48:	00000606 	br	80dd64 <kill+0xf4>
    }
  }

  else if (pid > 0)
  80dd4c:	e0bffe17 	ldw	r2,-8(fp)
  80dd50:	0080040e 	bge	zero,r2,80dd64 <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
  80dd54:	008000c4 	movi	r2,3
  80dd58:	e0bfff15 	stw	r2,-4(fp)
  80dd5c:	00000106 	br	80dd64 <kill+0xf4>
      break;
  80dd60:	0001883a 	nop
  }

  if (status)
  80dd64:	e0bfff17 	ldw	r2,-4(fp)
  80dd68:	10000626 	beq	r2,zero,80dd84 <kill+0x114>
  {
    ALT_ERRNO = status;
  80dd6c:	080dc340 	call	80dc34 <alt_get_errno>
  80dd70:	1007883a 	mov	r3,r2
  80dd74:	e0bfff17 	ldw	r2,-4(fp)
  80dd78:	18800015 	stw	r2,0(r3)
    return -1;
  80dd7c:	00bfffc4 	movi	r2,-1
  80dd80:	00000106 	br	80dd88 <kill+0x118>
  }

  return 0;
  80dd84:	0005883a 	mov	r2,zero
}
  80dd88:	e037883a 	mov	sp,fp
  80dd8c:	dfc00117 	ldw	ra,4(sp)
  80dd90:	df000017 	ldw	fp,0(sp)
  80dd94:	dec00204 	addi	sp,sp,8
  80dd98:	f800283a 	ret

0080dd9c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  80dd9c:	defffc04 	addi	sp,sp,-16
  80dda0:	df000315 	stw	fp,12(sp)
  80dda4:	df000304 	addi	fp,sp,12
  80dda8:	e13fff15 	stw	r4,-4(fp)
  80ddac:	e17ffe15 	stw	r5,-8(fp)
  80ddb0:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
  80ddb4:	e0fffe17 	ldw	r3,-8(fp)
  80ddb8:	e0bfff17 	ldw	r2,-4(fp)
  80ddbc:	18800c26 	beq	r3,r2,80ddf0 <alt_load_section+0x54>
  {
    while( to != end )
  80ddc0:	00000806 	br	80dde4 <alt_load_section+0x48>
    {
      *to++ = *from++;
  80ddc4:	e0ffff17 	ldw	r3,-4(fp)
  80ddc8:	18800104 	addi	r2,r3,4
  80ddcc:	e0bfff15 	stw	r2,-4(fp)
  80ddd0:	e0bffe17 	ldw	r2,-8(fp)
  80ddd4:	11000104 	addi	r4,r2,4
  80ddd8:	e13ffe15 	stw	r4,-8(fp)
  80dddc:	18c00017 	ldw	r3,0(r3)
  80dde0:	10c00015 	stw	r3,0(r2)
    while( to != end )
  80dde4:	e0fffe17 	ldw	r3,-8(fp)
  80dde8:	e0bffd17 	ldw	r2,-12(fp)
  80ddec:	18bff51e 	bne	r3,r2,80ddc4 <alt_load_section+0x28>
    }
  }
}
  80ddf0:	0001883a 	nop
  80ddf4:	e037883a 	mov	sp,fp
  80ddf8:	df000017 	ldw	fp,0(sp)
  80ddfc:	dec00104 	addi	sp,sp,4
  80de00:	f800283a 	ret

0080de04 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  80de04:	defffe04 	addi	sp,sp,-8
  80de08:	dfc00115 	stw	ra,4(sp)
  80de0c:	df000015 	stw	fp,0(sp)
  80de10:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  80de14:	01802074 	movhi	r6,129
  80de18:	318a3904 	addi	r6,r6,10468
  80de1c:	01402074 	movhi	r5,129
  80de20:	29433404 	addi	r5,r5,3280
  80de24:	01002074 	movhi	r4,129
  80de28:	210a3904 	addi	r4,r4,10468
  80de2c:	080dd9c0 	call	80dd9c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80de30:	01802034 	movhi	r6,128
  80de34:	31808f04 	addi	r6,r6,572
  80de38:	01402034 	movhi	r5,128
  80de3c:	29400804 	addi	r5,r5,32
  80de40:	01002034 	movhi	r4,128
  80de44:	21000804 	addi	r4,r4,32
  80de48:	080dd9c0 	call	80dd9c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  80de4c:	01802074 	movhi	r6,129
  80de50:	31833404 	addi	r6,r6,3280
  80de54:	01402074 	movhi	r5,129
  80de58:	29418404 	addi	r5,r5,1552
  80de5c:	01002074 	movhi	r4,129
  80de60:	21018404 	addi	r4,r4,1552
  80de64:	080dd9c0 	call	80dd9c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  80de68:	080f95c0 	call	80f95c <alt_dcache_flush_all>
  alt_icache_flush_all();
  80de6c:	080fda40 	call	80fda4 <alt_icache_flush_all>
}
  80de70:	0001883a 	nop
  80de74:	e037883a 	mov	sp,fp
  80de78:	dfc00117 	ldw	ra,4(sp)
  80de7c:	df000017 	ldw	fp,0(sp)
  80de80:	dec00204 	addi	sp,sp,8
  80de84:	f800283a 	ret

0080de88 <alt_get_errno>:
{
  80de88:	defffe04 	addi	sp,sp,-8
  80de8c:	dfc00115 	stw	ra,4(sp)
  80de90:	df000015 	stw	fp,0(sp)
  80de94:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80de98:	d0a00a17 	ldw	r2,-32728(gp)
  80de9c:	10000326 	beq	r2,zero,80deac <alt_get_errno+0x24>
  80dea0:	d0a00a17 	ldw	r2,-32728(gp)
  80dea4:	103ee83a 	callr	r2
  80dea8:	00000106 	br	80deb0 <alt_get_errno+0x28>
  80deac:	d0a71b04 	addi	r2,gp,-25492
}
  80deb0:	e037883a 	mov	sp,fp
  80deb4:	dfc00117 	ldw	ra,4(sp)
  80deb8:	df000017 	ldw	fp,0(sp)
  80debc:	dec00204 	addi	sp,sp,8
  80dec0:	f800283a 	ret

0080dec4 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80dec4:	defff904 	addi	sp,sp,-28
  80dec8:	dfc00615 	stw	ra,24(sp)
  80decc:	df000515 	stw	fp,20(sp)
  80ded0:	df000504 	addi	fp,sp,20
  80ded4:	e13ffd15 	stw	r4,-12(fp)
  80ded8:	e17ffc15 	stw	r5,-16(fp)
  80dedc:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80dee0:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80dee4:	e0bffd17 	ldw	r2,-12(fp)
  80dee8:	10000916 	blt	r2,zero,80df10 <lseek+0x4c>
  80deec:	e0fffd17 	ldw	r3,-12(fp)
  80def0:	1805883a 	mov	r2,r3
  80def4:	1085883a 	add	r2,r2,r2
  80def8:	10c5883a 	add	r2,r2,r3
  80defc:	100490ba 	slli	r2,r2,2
  80df00:	00c02074 	movhi	r3,129
  80df04:	18c5a704 	addi	r3,r3,5788
  80df08:	10c5883a 	add	r2,r2,r3
  80df0c:	00000106 	br	80df14 <lseek+0x50>
  80df10:	0005883a 	mov	r2,zero
  80df14:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
  80df18:	e0bffe17 	ldw	r2,-8(fp)
  80df1c:	10001026 	beq	r2,zero,80df60 <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80df20:	e0bffe17 	ldw	r2,-8(fp)
  80df24:	10800017 	ldw	r2,0(r2)
  80df28:	10800717 	ldw	r2,28(r2)
  80df2c:	10000926 	beq	r2,zero,80df54 <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80df30:	e0bffe17 	ldw	r2,-8(fp)
  80df34:	10800017 	ldw	r2,0(r2)
  80df38:	10800717 	ldw	r2,28(r2)
  80df3c:	e1bffb17 	ldw	r6,-20(fp)
  80df40:	e17ffc17 	ldw	r5,-16(fp)
  80df44:	e13ffe17 	ldw	r4,-8(fp)
  80df48:	103ee83a 	callr	r2
  80df4c:	e0bfff15 	stw	r2,-4(fp)
  80df50:	00000506 	br	80df68 <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80df54:	00bfde84 	movi	r2,-134
  80df58:	e0bfff15 	stw	r2,-4(fp)
  80df5c:	00000206 	br	80df68 <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
  80df60:	00bfebc4 	movi	r2,-81
  80df64:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
  80df68:	e0bfff17 	ldw	r2,-4(fp)
  80df6c:	1000070e 	bge	r2,zero,80df8c <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
  80df70:	080de880 	call	80de88 <alt_get_errno>
  80df74:	1007883a 	mov	r3,r2
  80df78:	e0bfff17 	ldw	r2,-4(fp)
  80df7c:	0085c83a 	sub	r2,zero,r2
  80df80:	18800015 	stw	r2,0(r3)
    rc = -1;
  80df84:	00bfffc4 	movi	r2,-1
  80df88:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
  80df8c:	e0bfff17 	ldw	r2,-4(fp)
}
  80df90:	e037883a 	mov	sp,fp
  80df94:	dfc00117 	ldw	ra,4(sp)
  80df98:	df000017 	ldw	fp,0(sp)
  80df9c:	dec00204 	addi	sp,sp,8
  80dfa0:	f800283a 	ret

0080dfa4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80dfa4:	defffd04 	addi	sp,sp,-12
  80dfa8:	dfc00215 	stw	ra,8(sp)
  80dfac:	df000115 	stw	fp,4(sp)
  80dfb0:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80dfb4:	0009883a 	mov	r4,zero
  80dfb8:	080e6f00 	call	80e6f0 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  80dfbc:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80dfc0:	080e72c0 	call	80e72c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80dfc4:	01802074 	movhi	r6,129
  80dfc8:	31832604 	addi	r6,r6,3224
  80dfcc:	01402074 	movhi	r5,129
  80dfd0:	29432604 	addi	r5,r5,3224
  80dfd4:	01002074 	movhi	r4,129
  80dfd8:	21032604 	addi	r4,r4,3224
  80dfdc:	080feac0 	call	80feac <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80dfe0:	080fa8c0 	call	80fa8c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80dfe4:	01002074 	movhi	r4,129
  80dfe8:	213ebc04 	addi	r4,r4,-1296
  80dfec:	08103a00 	call	8103a0 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80dff0:	d0a71d17 	ldw	r2,-25484(gp)
  80dff4:	d0e71e17 	ldw	r3,-25480(gp)
  80dff8:	d1271f17 	ldw	r4,-25476(gp)
  80dffc:	200d883a 	mov	r6,r4
  80e000:	180b883a 	mov	r5,r3
  80e004:	1009883a 	mov	r4,r2
  80e008:	08004540 	call	800454 <main>
  80e00c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80e010:	01000044 	movi	r4,1
  80e014:	080d8f00 	call	80d8f0 <close>
  exit (result);
  80e018:	e13fff17 	ldw	r4,-4(fp)
  80e01c:	08103b40 	call	8103b4 <exit>

0080e020 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  80e020:	defffe04 	addi	sp,sp,-8
  80e024:	df000115 	stw	fp,4(sp)
  80e028:	df000104 	addi	fp,sp,4
  80e02c:	e13fff15 	stw	r4,-4(fp)
}
  80e030:	0001883a 	nop
  80e034:	e037883a 	mov	sp,fp
  80e038:	df000017 	ldw	fp,0(sp)
  80e03c:	dec00104 	addi	sp,sp,4
  80e040:	f800283a 	ret

0080e044 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  80e044:	defffe04 	addi	sp,sp,-8
  80e048:	df000115 	stw	fp,4(sp)
  80e04c:	df000104 	addi	fp,sp,4
  80e050:	e13fff15 	stw	r4,-4(fp)
}
  80e054:	0001883a 	nop
  80e058:	e037883a 	mov	sp,fp
  80e05c:	df000017 	ldw	fp,0(sp)
  80e060:	dec00104 	addi	sp,sp,4
  80e064:	f800283a 	ret

0080e068 <alt_get_errno>:
{
  80e068:	defffe04 	addi	sp,sp,-8
  80e06c:	dfc00115 	stw	ra,4(sp)
  80e070:	df000015 	stw	fp,0(sp)
  80e074:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e078:	d0a00a17 	ldw	r2,-32728(gp)
  80e07c:	10000326 	beq	r2,zero,80e08c <alt_get_errno+0x24>
  80e080:	d0a00a17 	ldw	r2,-32728(gp)
  80e084:	103ee83a 	callr	r2
  80e088:	00000106 	br	80e090 <alt_get_errno+0x28>
  80e08c:	d0a71b04 	addi	r2,gp,-25492
}
  80e090:	e037883a 	mov	sp,fp
  80e094:	dfc00117 	ldw	ra,4(sp)
  80e098:	df000017 	ldw	fp,0(sp)
  80e09c:	dec00204 	addi	sp,sp,8
  80e0a0:	f800283a 	ret

0080e0a4 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  80e0a4:	defffd04 	addi	sp,sp,-12
  80e0a8:	df000215 	stw	fp,8(sp)
  80e0ac:	df000204 	addi	fp,sp,8
  80e0b0:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  80e0b4:	e0bffe17 	ldw	r2,-8(fp)
  80e0b8:	10800217 	ldw	r2,8(r2)
  80e0bc:	10d00034 	orhi	r3,r2,16384
  80e0c0:	e0bffe17 	ldw	r2,-8(fp)
  80e0c4:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80e0c8:	e03fff15 	stw	zero,-4(fp)
  80e0cc:	00002306 	br	80e15c <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80e0d0:	e0ffff17 	ldw	r3,-4(fp)
  80e0d4:	1805883a 	mov	r2,r3
  80e0d8:	1085883a 	add	r2,r2,r2
  80e0dc:	10c5883a 	add	r2,r2,r3
  80e0e0:	100490ba 	slli	r2,r2,2
  80e0e4:	00c02074 	movhi	r3,129
  80e0e8:	10c7883a 	add	r3,r2,r3
  80e0ec:	18c5a717 	ldw	r3,5788(r3)
  80e0f0:	e0bffe17 	ldw	r2,-8(fp)
  80e0f4:	10800017 	ldw	r2,0(r2)
  80e0f8:	1880151e 	bne	r3,r2,80e150 <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80e0fc:	e0ffff17 	ldw	r3,-4(fp)
  80e100:	1805883a 	mov	r2,r3
  80e104:	1085883a 	add	r2,r2,r2
  80e108:	10c5883a 	add	r2,r2,r3
  80e10c:	100490ba 	slli	r2,r2,2
  80e110:	00c02074 	movhi	r3,129
  80e114:	10c7883a 	add	r3,r2,r3
  80e118:	1885a917 	ldw	r2,5796(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
  80e11c:	10000c0e 	bge	r2,zero,80e150 <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
  80e120:	e0ffff17 	ldw	r3,-4(fp)
  80e124:	1805883a 	mov	r2,r3
  80e128:	1085883a 	add	r2,r2,r2
  80e12c:	10c5883a 	add	r2,r2,r3
  80e130:	100490ba 	slli	r2,r2,2
  80e134:	00c02074 	movhi	r3,129
  80e138:	18c5a704 	addi	r3,r3,5788
  80e13c:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80e140:	e0fffe17 	ldw	r3,-8(fp)
  80e144:	18800226 	beq	r3,r2,80e150 <alt_file_locked+0xac>
    {
      return -EACCES;
  80e148:	00bffcc4 	movi	r2,-13
  80e14c:	00000806 	br	80e170 <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
  80e150:	e0bfff17 	ldw	r2,-4(fp)
  80e154:	10800044 	addi	r2,r2,1
  80e158:	e0bfff15 	stw	r2,-4(fp)
  80e15c:	d0a00917 	ldw	r2,-32732(gp)
  80e160:	1007883a 	mov	r3,r2
  80e164:	e0bfff17 	ldw	r2,-4(fp)
  80e168:	18bfd92e 	bgeu	r3,r2,80e0d0 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  80e16c:	0005883a 	mov	r2,zero
}
  80e170:	e037883a 	mov	sp,fp
  80e174:	df000017 	ldw	fp,0(sp)
  80e178:	dec00104 	addi	sp,sp,4
  80e17c:	f800283a 	ret

0080e180 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  80e180:	defff604 	addi	sp,sp,-40
  80e184:	dfc00915 	stw	ra,36(sp)
  80e188:	df000815 	stw	fp,32(sp)
  80e18c:	df000804 	addi	fp,sp,32
  80e190:	e13ffa15 	stw	r4,-24(fp)
  80e194:	e17ff915 	stw	r5,-28(fp)
  80e198:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  80e19c:	00bfffc4 	movi	r2,-1
  80e1a0:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
  80e1a4:	00bffb44 	movi	r2,-19
  80e1a8:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
  80e1ac:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  80e1b0:	d1600704 	addi	r5,gp,-32740
  80e1b4:	e13ffa17 	ldw	r4,-24(fp)
  80e1b8:	080fb540 	call	80fb54 <alt_find_dev>
  80e1bc:	e0bfff15 	stw	r2,-4(fp)
  80e1c0:	e0bfff17 	ldw	r2,-4(fp)
  80e1c4:	1000051e 	bne	r2,zero,80e1dc <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  80e1c8:	e13ffa17 	ldw	r4,-24(fp)
  80e1cc:	080fbe40 	call	80fbe4 <alt_find_file>
  80e1d0:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
  80e1d4:	00800044 	movi	r2,1
  80e1d8:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  80e1dc:	e0bfff17 	ldw	r2,-4(fp)
  80e1e0:	10002c26 	beq	r2,zero,80e294 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
  80e1e4:	e13fff17 	ldw	r4,-4(fp)
  80e1e8:	080fcec0 	call	80fcec <alt_get_fd>
  80e1ec:	e0bffe15 	stw	r2,-8(fp)
  80e1f0:	e0bffe17 	ldw	r2,-8(fp)
  80e1f4:	1000030e 	bge	r2,zero,80e204 <open+0x84>
    {
      status = index;
  80e1f8:	e0bffe17 	ldw	r2,-8(fp)
  80e1fc:	e0bffd15 	stw	r2,-12(fp)
  80e200:	00002606 	br	80e29c <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
  80e204:	e0fffe17 	ldw	r3,-8(fp)
  80e208:	1805883a 	mov	r2,r3
  80e20c:	1085883a 	add	r2,r2,r2
  80e210:	10c5883a 	add	r2,r2,r3
  80e214:	100490ba 	slli	r2,r2,2
  80e218:	00c02074 	movhi	r3,129
  80e21c:	18c5a704 	addi	r3,r3,5788
  80e220:	10c5883a 	add	r2,r2,r3
  80e224:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  80e228:	e0fff917 	ldw	r3,-28(fp)
  80e22c:	00900034 	movhi	r2,16384
  80e230:	10bfffc4 	addi	r2,r2,-1
  80e234:	1886703a 	and	r3,r3,r2
  80e238:	e0bffb17 	ldw	r2,-20(fp)
  80e23c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  80e240:	e0bffc17 	ldw	r2,-16(fp)
  80e244:	1000051e 	bne	r2,zero,80e25c <open+0xdc>
  80e248:	e13ffb17 	ldw	r4,-20(fp)
  80e24c:	080e0a40 	call	80e0a4 <alt_file_locked>
  80e250:	e0bffd15 	stw	r2,-12(fp)
  80e254:	e0bffd17 	ldw	r2,-12(fp)
  80e258:	10001016 	blt	r2,zero,80e29c <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  80e25c:	e0bfff17 	ldw	r2,-4(fp)
  80e260:	10800317 	ldw	r2,12(r2)
  80e264:	10000826 	beq	r2,zero,80e288 <open+0x108>
  80e268:	e0bfff17 	ldw	r2,-4(fp)
  80e26c:	10800317 	ldw	r2,12(r2)
  80e270:	e1fff817 	ldw	r7,-32(fp)
  80e274:	e1bff917 	ldw	r6,-28(fp)
  80e278:	e17ffa17 	ldw	r5,-24(fp)
  80e27c:	e13ffb17 	ldw	r4,-20(fp)
  80e280:	103ee83a 	callr	r2
  80e284:	00000106 	br	80e28c <open+0x10c>
  80e288:	0005883a 	mov	r2,zero
  80e28c:	e0bffd15 	stw	r2,-12(fp)
  80e290:	00000206 	br	80e29c <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
  80e294:	00bffb44 	movi	r2,-19
  80e298:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  80e29c:	e0bffd17 	ldw	r2,-12(fp)
  80e2a0:	1000090e 	bge	r2,zero,80e2c8 <open+0x148>
  {
    alt_release_fd (index);  
  80e2a4:	e13ffe17 	ldw	r4,-8(fp)
  80e2a8:	080e4240 	call	80e424 <alt_release_fd>
    ALT_ERRNO = -status;
  80e2ac:	080e0680 	call	80e068 <alt_get_errno>
  80e2b0:	1007883a 	mov	r3,r2
  80e2b4:	e0bffd17 	ldw	r2,-12(fp)
  80e2b8:	0085c83a 	sub	r2,zero,r2
  80e2bc:	18800015 	stw	r2,0(r3)
    return -1;
  80e2c0:	00bfffc4 	movi	r2,-1
  80e2c4:	00000106 	br	80e2cc <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
  80e2c8:	e0bffe17 	ldw	r2,-8(fp)
}
  80e2cc:	e037883a 	mov	sp,fp
  80e2d0:	dfc00117 	ldw	ra,4(sp)
  80e2d4:	df000017 	ldw	fp,0(sp)
  80e2d8:	dec00204 	addi	sp,sp,8
  80e2dc:	f800283a 	ret

0080e2e0 <alt_get_errno>:
{
  80e2e0:	defffe04 	addi	sp,sp,-8
  80e2e4:	dfc00115 	stw	ra,4(sp)
  80e2e8:	df000015 	stw	fp,0(sp)
  80e2ec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e2f0:	d0a00a17 	ldw	r2,-32728(gp)
  80e2f4:	10000326 	beq	r2,zero,80e304 <alt_get_errno+0x24>
  80e2f8:	d0a00a17 	ldw	r2,-32728(gp)
  80e2fc:	103ee83a 	callr	r2
  80e300:	00000106 	br	80e308 <alt_get_errno+0x28>
  80e304:	d0a71b04 	addi	r2,gp,-25492
}
  80e308:	e037883a 	mov	sp,fp
  80e30c:	dfc00117 	ldw	ra,4(sp)
  80e310:	df000017 	ldw	fp,0(sp)
  80e314:	dec00204 	addi	sp,sp,8
  80e318:	f800283a 	ret

0080e31c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80e31c:	defff904 	addi	sp,sp,-28
  80e320:	dfc00615 	stw	ra,24(sp)
  80e324:	df000515 	stw	fp,20(sp)
  80e328:	df000504 	addi	fp,sp,20
  80e32c:	e13ffd15 	stw	r4,-12(fp)
  80e330:	e17ffc15 	stw	r5,-16(fp)
  80e334:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e338:	e0bffd17 	ldw	r2,-12(fp)
  80e33c:	10000916 	blt	r2,zero,80e364 <read+0x48>
  80e340:	e0fffd17 	ldw	r3,-12(fp)
  80e344:	1805883a 	mov	r2,r3
  80e348:	1085883a 	add	r2,r2,r2
  80e34c:	10c5883a 	add	r2,r2,r3
  80e350:	100490ba 	slli	r2,r2,2
  80e354:	00c02074 	movhi	r3,129
  80e358:	18c5a704 	addi	r3,r3,5788
  80e35c:	10c5883a 	add	r2,r2,r3
  80e360:	00000106 	br	80e368 <read+0x4c>
  80e364:	0005883a 	mov	r2,zero
  80e368:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80e36c:	e0bfff17 	ldw	r2,-4(fp)
  80e370:	10002226 	beq	r2,zero,80e3fc <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80e374:	e0bfff17 	ldw	r2,-4(fp)
  80e378:	10800217 	ldw	r2,8(r2)
  80e37c:	108000cc 	andi	r2,r2,3
  80e380:	10800060 	cmpeqi	r2,r2,1
  80e384:	1000181e 	bne	r2,zero,80e3e8 <read+0xcc>
        (fd->dev->read))
  80e388:	e0bfff17 	ldw	r2,-4(fp)
  80e38c:	10800017 	ldw	r2,0(r2)
  80e390:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80e394:	10001426 	beq	r2,zero,80e3e8 <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80e398:	e0bfff17 	ldw	r2,-4(fp)
  80e39c:	10800017 	ldw	r2,0(r2)
  80e3a0:	10800517 	ldw	r2,20(r2)
  80e3a4:	e0fffb17 	ldw	r3,-20(fp)
  80e3a8:	180d883a 	mov	r6,r3
  80e3ac:	e17ffc17 	ldw	r5,-16(fp)
  80e3b0:	e13fff17 	ldw	r4,-4(fp)
  80e3b4:	103ee83a 	callr	r2
  80e3b8:	e0bffe15 	stw	r2,-8(fp)
  80e3bc:	e0bffe17 	ldw	r2,-8(fp)
  80e3c0:	1000070e 	bge	r2,zero,80e3e0 <read+0xc4>
        {
          ALT_ERRNO = -rval;
  80e3c4:	080e2e00 	call	80e2e0 <alt_get_errno>
  80e3c8:	1007883a 	mov	r3,r2
  80e3cc:	e0bffe17 	ldw	r2,-8(fp)
  80e3d0:	0085c83a 	sub	r2,zero,r2
  80e3d4:	18800015 	stw	r2,0(r3)
          return -1;
  80e3d8:	00bfffc4 	movi	r2,-1
  80e3dc:	00000c06 	br	80e410 <read+0xf4>
        }
        return rval;
  80e3e0:	e0bffe17 	ldw	r2,-8(fp)
  80e3e4:	00000a06 	br	80e410 <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80e3e8:	080e2e00 	call	80e2e0 <alt_get_errno>
  80e3ec:	1007883a 	mov	r3,r2
  80e3f0:	00800344 	movi	r2,13
  80e3f4:	18800015 	stw	r2,0(r3)
  80e3f8:	00000406 	br	80e40c <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80e3fc:	080e2e00 	call	80e2e0 <alt_get_errno>
  80e400:	1007883a 	mov	r3,r2
  80e404:	00801444 	movi	r2,81
  80e408:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80e40c:	00bfffc4 	movi	r2,-1
}
  80e410:	e037883a 	mov	sp,fp
  80e414:	dfc00117 	ldw	ra,4(sp)
  80e418:	df000017 	ldw	fp,0(sp)
  80e41c:	dec00204 	addi	sp,sp,8
  80e420:	f800283a 	ret

0080e424 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80e424:	defffe04 	addi	sp,sp,-8
  80e428:	df000115 	stw	fp,4(sp)
  80e42c:	df000104 	addi	fp,sp,4
  80e430:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  80e434:	e0bfff17 	ldw	r2,-4(fp)
  80e438:	108000d0 	cmplti	r2,r2,3
  80e43c:	1000101e 	bne	r2,zero,80e480 <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
  80e440:	e0ffff17 	ldw	r3,-4(fp)
  80e444:	1805883a 	mov	r2,r3
  80e448:	1085883a 	add	r2,r2,r2
  80e44c:	10c5883a 	add	r2,r2,r3
  80e450:	100490ba 	slli	r2,r2,2
  80e454:	00c02074 	movhi	r3,129
  80e458:	10c7883a 	add	r3,r2,r3
  80e45c:	1805a915 	stw	zero,5796(r3)
    alt_fd_list[fd].dev      = 0;
  80e460:	e0ffff17 	ldw	r3,-4(fp)
  80e464:	1805883a 	mov	r2,r3
  80e468:	1085883a 	add	r2,r2,r2
  80e46c:	10c5883a 	add	r2,r2,r3
  80e470:	100490ba 	slli	r2,r2,2
  80e474:	00c02074 	movhi	r3,129
  80e478:	10c7883a 	add	r3,r2,r3
  80e47c:	1805a715 	stw	zero,5788(r3)
  }
}
  80e480:	0001883a 	nop
  80e484:	e037883a 	mov	sp,fp
  80e488:	df000017 	ldw	fp,0(sp)
  80e48c:	dec00104 	addi	sp,sp,4
  80e490:	f800283a 	ret

0080e494 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80e494:	defff904 	addi	sp,sp,-28
  80e498:	df000615 	stw	fp,24(sp)
  80e49c:	df000604 	addi	fp,sp,24
  80e4a0:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
  80e4a4:	0005303a 	rdctl	r2,status
  80e4a8:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e4ac:	e0fffd17 	ldw	r3,-12(fp)
  80e4b0:	00bfff84 	movi	r2,-2
  80e4b4:	1884703a 	and	r2,r3,r2
  80e4b8:	1001703a 	wrctl	status,r2
  return context;
  80e4bc:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  80e4c0:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  80e4c4:	d0a00b17 	ldw	r2,-32724(gp)
  80e4c8:	10c000c4 	addi	r3,r2,3
  80e4cc:	00bfff04 	movi	r2,-4
  80e4d0:	1884703a 	and	r2,r3,r2
  80e4d4:	d0a00b15 	stw	r2,-32724(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  80e4d8:	d0e00b17 	ldw	r3,-32724(gp)
  80e4dc:	e0bffa17 	ldw	r2,-24(fp)
  80e4e0:	1887883a 	add	r3,r3,r2
  80e4e4:	00804034 	movhi	r2,256
  80e4e8:	10800004 	addi	r2,r2,0
  80e4ec:	10c0072e 	bgeu	r2,r3,80e50c <sbrk+0x78>
  80e4f0:	e0bfff17 	ldw	r2,-4(fp)
  80e4f4:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  80e4f8:	e0bffc17 	ldw	r2,-16(fp)
  80e4fc:	1001703a 	wrctl	status,r2
}
  80e500:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  80e504:	00bfffc4 	movi	r2,-1
  80e508:	00000c06 	br	80e53c <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
  80e50c:	d0a00b17 	ldw	r2,-32724(gp)
  80e510:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
  80e514:	d0e00b17 	ldw	r3,-32724(gp)
  80e518:	e0bffa17 	ldw	r2,-24(fp)
  80e51c:	1885883a 	add	r2,r3,r2
  80e520:	d0a00b15 	stw	r2,-32724(gp)
  80e524:	e0bfff17 	ldw	r2,-4(fp)
  80e528:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
  80e52c:	e0bffb17 	ldw	r2,-20(fp)
  80e530:	1001703a 	wrctl	status,r2
}
  80e534:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  80e538:	e0bffe17 	ldw	r2,-8(fp)
} 
  80e53c:	e037883a 	mov	sp,fp
  80e540:	df000017 	ldw	fp,0(sp)
  80e544:	dec00104 	addi	sp,sp,4
  80e548:	f800283a 	ret

0080e54c <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
  80e54c:	defffd04 	addi	sp,sp,-12
  80e550:	dfc00215 	stw	ra,8(sp)
  80e554:	df000115 	stw	fp,4(sp)
  80e558:	df000104 	addi	fp,sp,4
  80e55c:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
  80e560:	e13fff17 	ldw	r4,-4(fp)
  80e564:	080f8040 	call	80f804 <alt_busy_sleep>
}
  80e568:	e037883a 	mov	sp,fp
  80e56c:	dfc00117 	ldw	ra,4(sp)
  80e570:	df000017 	ldw	fp,0(sp)
  80e574:	dec00204 	addi	sp,sp,8
  80e578:	f800283a 	ret

0080e57c <alt_get_errno>:
{
  80e57c:	defffe04 	addi	sp,sp,-8
  80e580:	dfc00115 	stw	ra,4(sp)
  80e584:	df000015 	stw	fp,0(sp)
  80e588:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e58c:	d0a00a17 	ldw	r2,-32728(gp)
  80e590:	10000326 	beq	r2,zero,80e5a0 <alt_get_errno+0x24>
  80e594:	d0a00a17 	ldw	r2,-32728(gp)
  80e598:	103ee83a 	callr	r2
  80e59c:	00000106 	br	80e5a4 <alt_get_errno+0x28>
  80e5a0:	d0a71b04 	addi	r2,gp,-25492
}
  80e5a4:	e037883a 	mov	sp,fp
  80e5a8:	dfc00117 	ldw	ra,4(sp)
  80e5ac:	df000017 	ldw	fp,0(sp)
  80e5b0:	dec00204 	addi	sp,sp,8
  80e5b4:	f800283a 	ret

0080e5b8 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80e5b8:	defff904 	addi	sp,sp,-28
  80e5bc:	dfc00615 	stw	ra,24(sp)
  80e5c0:	df000515 	stw	fp,20(sp)
  80e5c4:	df000504 	addi	fp,sp,20
  80e5c8:	e13ffd15 	stw	r4,-12(fp)
  80e5cc:	e17ffc15 	stw	r5,-16(fp)
  80e5d0:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e5d4:	e0bffd17 	ldw	r2,-12(fp)
  80e5d8:	10000916 	blt	r2,zero,80e600 <write+0x48>
  80e5dc:	e0fffd17 	ldw	r3,-12(fp)
  80e5e0:	1805883a 	mov	r2,r3
  80e5e4:	1085883a 	add	r2,r2,r2
  80e5e8:	10c5883a 	add	r2,r2,r3
  80e5ec:	100490ba 	slli	r2,r2,2
  80e5f0:	00c02074 	movhi	r3,129
  80e5f4:	18c5a704 	addi	r3,r3,5788
  80e5f8:	10c5883a 	add	r2,r2,r3
  80e5fc:	00000106 	br	80e604 <write+0x4c>
  80e600:	0005883a 	mov	r2,zero
  80e604:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80e608:	e0bfff17 	ldw	r2,-4(fp)
  80e60c:	10002126 	beq	r2,zero,80e694 <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  80e610:	e0bfff17 	ldw	r2,-4(fp)
  80e614:	10800217 	ldw	r2,8(r2)
  80e618:	108000cc 	andi	r2,r2,3
  80e61c:	10001826 	beq	r2,zero,80e680 <write+0xc8>
  80e620:	e0bfff17 	ldw	r2,-4(fp)
  80e624:	10800017 	ldw	r2,0(r2)
  80e628:	10800617 	ldw	r2,24(r2)
  80e62c:	10001426 	beq	r2,zero,80e680 <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  80e630:	e0bfff17 	ldw	r2,-4(fp)
  80e634:	10800017 	ldw	r2,0(r2)
  80e638:	10800617 	ldw	r2,24(r2)
  80e63c:	e0fffb17 	ldw	r3,-20(fp)
  80e640:	180d883a 	mov	r6,r3
  80e644:	e17ffc17 	ldw	r5,-16(fp)
  80e648:	e13fff17 	ldw	r4,-4(fp)
  80e64c:	103ee83a 	callr	r2
  80e650:	e0bffe15 	stw	r2,-8(fp)
  80e654:	e0bffe17 	ldw	r2,-8(fp)
  80e658:	1000070e 	bge	r2,zero,80e678 <write+0xc0>
      {
        ALT_ERRNO = -rval;
  80e65c:	080e57c0 	call	80e57c <alt_get_errno>
  80e660:	1007883a 	mov	r3,r2
  80e664:	e0bffe17 	ldw	r2,-8(fp)
  80e668:	0085c83a 	sub	r2,zero,r2
  80e66c:	18800015 	stw	r2,0(r3)
        return -1;
  80e670:	00bfffc4 	movi	r2,-1
  80e674:	00000c06 	br	80e6a8 <write+0xf0>
      }
      return rval;
  80e678:	e0bffe17 	ldw	r2,-8(fp)
  80e67c:	00000a06 	br	80e6a8 <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
  80e680:	080e57c0 	call	80e57c <alt_get_errno>
  80e684:	1007883a 	mov	r3,r2
  80e688:	00800344 	movi	r2,13
  80e68c:	18800015 	stw	r2,0(r3)
  80e690:	00000406 	br	80e6a4 <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  80e694:	080e57c0 	call	80e57c <alt_get_errno>
  80e698:	1007883a 	mov	r3,r2
  80e69c:	00801444 	movi	r2,81
  80e6a0:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80e6a4:	00bfffc4 	movi	r2,-1
}
  80e6a8:	e037883a 	mov	sp,fp
  80e6ac:	dfc00117 	ldw	ra,4(sp)
  80e6b0:	df000017 	ldw	fp,0(sp)
  80e6b4:	dec00204 	addi	sp,sp,8
  80e6b8:	f800283a 	ret

0080e6bc <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  80e6bc:	defffd04 	addi	sp,sp,-12
  80e6c0:	dfc00215 	stw	ra,8(sp)
  80e6c4:	df000115 	stw	fp,4(sp)
  80e6c8:	df000104 	addi	fp,sp,4
  80e6cc:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  80e6d0:	d1600704 	addi	r5,gp,-32740
  80e6d4:	e13fff17 	ldw	r4,-4(fp)
  80e6d8:	080f9e40 	call	80f9e4 <alt_dev_llist_insert>
}
  80e6dc:	e037883a 	mov	sp,fp
  80e6e0:	dfc00117 	ldw	ra,4(sp)
  80e6e4:	df000017 	ldw	fp,0(sp)
  80e6e8:	dec00204 	addi	sp,sp,8
  80e6ec:	f800283a 	ret

0080e6f0 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  80e6f0:	defffd04 	addi	sp,sp,-12
  80e6f4:	dfc00215 	stw	ra,8(sp)
  80e6f8:	df000115 	stw	fp,4(sp)
  80e6fc:	df000104 	addi	fp,sp,4
  80e700:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
  80e704:	08102540 	call	810254 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  80e708:	00800044 	movi	r2,1
  80e70c:	1001703a 	wrctl	status,r2
}
  80e710:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
  80e714:	0001883a 	nop
  80e718:	e037883a 	mov	sp,fp
  80e71c:	dfc00117 	ldw	ra,4(sp)
  80e720:	df000017 	ldw	fp,0(sp)
  80e724:	dec00204 	addi	sp,sp,8
  80e728:	f800283a 	ret

0080e72c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  80e72c:	defffe04 	addi	sp,sp,-8
  80e730:	dfc00115 	stw	ra,4(sp)
  80e734:	df000015 	stw	fp,0(sp)
  80e738:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  80e73c:	01c0fa04 	movi	r7,1000
  80e740:	018000c4 	movi	r6,3
  80e744:	000b883a 	mov	r5,zero
  80e748:	01004034 	movhi	r4,256
  80e74c:	21040004 	addi	r4,r4,4096
  80e750:	080f2880 	call	80f288 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  80e754:	01800044 	movi	r6,1
  80e758:	000b883a 	mov	r5,zero
  80e75c:	01002074 	movhi	r4,129
  80e760:	21061104 	addi	r4,r4,6212
  80e764:	080e9000 	call	80e900 <altera_avalon_jtag_uart_init>
  80e768:	01002074 	movhi	r4,129
  80e76c:	21060704 	addi	r4,r4,6172
  80e770:	080e6bc0 	call	80e6bc <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
  80e774:	0001883a 	nop
    ALTERA_UP_AVALON_ACCELEROMETER_SPI_INIT ( ACCELEROMETER_SPI, accelerometer_spi);
  80e778:	01002074 	movhi	r4,129
  80e77c:	210a1f04 	addi	r4,r4,10364
  80e780:	080e6bc0 	call	80e6bc <alt_dev_reg>
}
  80e784:	0001883a 	nop
  80e788:	e037883a 	mov	sp,fp
  80e78c:	dfc00117 	ldw	ra,4(sp)
  80e790:	df000017 	ldw	fp,0(sp)
  80e794:	dec00204 	addi	sp,sp,8
  80e798:	f800283a 	ret

0080e79c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80e79c:	defffa04 	addi	sp,sp,-24
  80e7a0:	dfc00515 	stw	ra,20(sp)
  80e7a4:	df000415 	stw	fp,16(sp)
  80e7a8:	df000404 	addi	fp,sp,16
  80e7ac:	e13ffe15 	stw	r4,-8(fp)
  80e7b0:	e17ffd15 	stw	r5,-12(fp)
  80e7b4:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80e7b8:	e0bffe17 	ldw	r2,-8(fp)
  80e7bc:	10800017 	ldw	r2,0(r2)
  80e7c0:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  80e7c4:	e0bfff17 	ldw	r2,-4(fp)
  80e7c8:	10c00a04 	addi	r3,r2,40
  80e7cc:	e0bffe17 	ldw	r2,-8(fp)
  80e7d0:	10800217 	ldw	r2,8(r2)
  80e7d4:	100f883a 	mov	r7,r2
  80e7d8:	e1bffc17 	ldw	r6,-16(fp)
  80e7dc:	e17ffd17 	ldw	r5,-12(fp)
  80e7e0:	1809883a 	mov	r4,r3
  80e7e4:	080edc00 	call	80edc0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  80e7e8:	e037883a 	mov	sp,fp
  80e7ec:	dfc00117 	ldw	ra,4(sp)
  80e7f0:	df000017 	ldw	fp,0(sp)
  80e7f4:	dec00204 	addi	sp,sp,8
  80e7f8:	f800283a 	ret

0080e7fc <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  80e7fc:	defffa04 	addi	sp,sp,-24
  80e800:	dfc00515 	stw	ra,20(sp)
  80e804:	df000415 	stw	fp,16(sp)
  80e808:	df000404 	addi	fp,sp,16
  80e80c:	e13ffe15 	stw	r4,-8(fp)
  80e810:	e17ffd15 	stw	r5,-12(fp)
  80e814:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80e818:	e0bffe17 	ldw	r2,-8(fp)
  80e81c:	10800017 	ldw	r2,0(r2)
  80e820:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  80e824:	e0bfff17 	ldw	r2,-4(fp)
  80e828:	10c00a04 	addi	r3,r2,40
  80e82c:	e0bffe17 	ldw	r2,-8(fp)
  80e830:	10800217 	ldw	r2,8(r2)
  80e834:	100f883a 	mov	r7,r2
  80e838:	e1bffc17 	ldw	r6,-16(fp)
  80e83c:	e17ffd17 	ldw	r5,-12(fp)
  80e840:	1809883a 	mov	r4,r3
  80e844:	080efe00 	call	80efe0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  80e848:	e037883a 	mov	sp,fp
  80e84c:	dfc00117 	ldw	ra,4(sp)
  80e850:	df000017 	ldw	fp,0(sp)
  80e854:	dec00204 	addi	sp,sp,8
  80e858:	f800283a 	ret

0080e85c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  80e85c:	defffc04 	addi	sp,sp,-16
  80e860:	dfc00315 	stw	ra,12(sp)
  80e864:	df000215 	stw	fp,8(sp)
  80e868:	df000204 	addi	fp,sp,8
  80e86c:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80e870:	e0bffe17 	ldw	r2,-8(fp)
  80e874:	10800017 	ldw	r2,0(r2)
  80e878:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  80e87c:	e0bfff17 	ldw	r2,-4(fp)
  80e880:	10c00a04 	addi	r3,r2,40
  80e884:	e0bffe17 	ldw	r2,-8(fp)
  80e888:	10800217 	ldw	r2,8(r2)
  80e88c:	100b883a 	mov	r5,r2
  80e890:	1809883a 	mov	r4,r3
  80e894:	080ec640 	call	80ec64 <altera_avalon_jtag_uart_close>
}
  80e898:	e037883a 	mov	sp,fp
  80e89c:	dfc00117 	ldw	ra,4(sp)
  80e8a0:	df000017 	ldw	fp,0(sp)
  80e8a4:	dec00204 	addi	sp,sp,8
  80e8a8:	f800283a 	ret

0080e8ac <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  80e8ac:	defffa04 	addi	sp,sp,-24
  80e8b0:	dfc00515 	stw	ra,20(sp)
  80e8b4:	df000415 	stw	fp,16(sp)
  80e8b8:	df000404 	addi	fp,sp,16
  80e8bc:	e13ffe15 	stw	r4,-8(fp)
  80e8c0:	e17ffd15 	stw	r5,-12(fp)
  80e8c4:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  80e8c8:	e0bffe17 	ldw	r2,-8(fp)
  80e8cc:	10800017 	ldw	r2,0(r2)
  80e8d0:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  80e8d4:	e0bfff17 	ldw	r2,-4(fp)
  80e8d8:	10800a04 	addi	r2,r2,40
  80e8dc:	e1bffc17 	ldw	r6,-16(fp)
  80e8e0:	e17ffd17 	ldw	r5,-12(fp)
  80e8e4:	1009883a 	mov	r4,r2
  80e8e8:	080eccc0 	call	80eccc <altera_avalon_jtag_uart_ioctl>
}
  80e8ec:	e037883a 	mov	sp,fp
  80e8f0:	dfc00117 	ldw	ra,4(sp)
  80e8f4:	df000017 	ldw	fp,0(sp)
  80e8f8:	dec00204 	addi	sp,sp,8
  80e8fc:	f800283a 	ret

0080e900 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  80e900:	defffb04 	addi	sp,sp,-20
  80e904:	dfc00415 	stw	ra,16(sp)
  80e908:	df000315 	stw	fp,12(sp)
  80e90c:	df000304 	addi	fp,sp,12
  80e910:	e13fff15 	stw	r4,-4(fp)
  80e914:	e17ffe15 	stw	r5,-8(fp)
  80e918:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e91c:	e0bfff17 	ldw	r2,-4(fp)
  80e920:	00c00044 	movi	r3,1
  80e924:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  80e928:	e0bfff17 	ldw	r2,-4(fp)
  80e92c:	10800017 	ldw	r2,0(r2)
  80e930:	10800104 	addi	r2,r2,4
  80e934:	1007883a 	mov	r3,r2
  80e938:	e0bfff17 	ldw	r2,-4(fp)
  80e93c:	10800817 	ldw	r2,32(r2)
  80e940:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
  80e944:	e0bffd17 	ldw	r2,-12(fp)
  80e948:	01802074 	movhi	r6,129
  80e94c:	31ba6d04 	addi	r6,r6,-5708
  80e950:	e17fff17 	ldw	r5,-4(fp)
  80e954:	1009883a 	mov	r4,r2
  80e958:	080ff280 	call	80ff28 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  80e95c:	e0bfff17 	ldw	r2,-4(fp)
  80e960:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  80e964:	e0bfff17 	ldw	r2,-4(fp)
  80e968:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80e96c:	d0e72117 	ldw	r3,-25468(gp)
  80e970:	e1ffff17 	ldw	r7,-4(fp)
  80e974:	01802074 	movhi	r6,129
  80e978:	31baf104 	addi	r6,r6,-5180
  80e97c:	180b883a 	mov	r5,r3
  80e980:	1009883a 	mov	r4,r2
  80e984:	080f6d00 	call	80f6d0 <alt_alarm_start>
  80e988:	1000040e 	bge	r2,zero,80e99c <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  80e98c:	e0ffff17 	ldw	r3,-4(fp)
  80e990:	00a00034 	movhi	r2,32768
  80e994:	10bfffc4 	addi	r2,r2,-1
  80e998:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  80e99c:	0001883a 	nop
  80e9a0:	e037883a 	mov	sp,fp
  80e9a4:	dfc00117 	ldw	ra,4(sp)
  80e9a8:	df000017 	ldw	fp,0(sp)
  80e9ac:	dec00204 	addi	sp,sp,8
  80e9b0:	f800283a 	ret

0080e9b4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  80e9b4:	defff704 	addi	sp,sp,-36
  80e9b8:	df000815 	stw	fp,32(sp)
  80e9bc:	df000804 	addi	fp,sp,32
  80e9c0:	e13ff915 	stw	r4,-28(fp)
  80e9c4:	e17ff815 	stw	r5,-32(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  80e9c8:	e0bff917 	ldw	r2,-28(fp)
  80e9cc:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
  80e9d0:	e0bffd17 	ldw	r2,-12(fp)
  80e9d4:	10800017 	ldw	r2,0(r2)
  80e9d8:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e9dc:	e0bffc17 	ldw	r2,-16(fp)
  80e9e0:	10800104 	addi	r2,r2,4
  80e9e4:	10800037 	ldwio	r2,0(r2)
  80e9e8:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  80e9ec:	e0bffb17 	ldw	r2,-20(fp)
  80e9f0:	1080c00c 	andi	r2,r2,768
  80e9f4:	10006d26 	beq	r2,zero,80ebac <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  80e9f8:	e0bffb17 	ldw	r2,-20(fp)
  80e9fc:	1080400c 	andi	r2,r2,256
  80ea00:	10003526 	beq	r2,zero,80ead8 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  80ea04:	00800074 	movhi	r2,1
  80ea08:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80ea0c:	e0bffd17 	ldw	r2,-12(fp)
  80ea10:	10800a17 	ldw	r2,40(r2)
  80ea14:	10800044 	addi	r2,r2,1
  80ea18:	1081ffcc 	andi	r2,r2,2047
  80ea1c:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
  80ea20:	e0bffd17 	ldw	r2,-12(fp)
  80ea24:	10800b17 	ldw	r2,44(r2)
  80ea28:	e0fffa17 	ldw	r3,-24(fp)
  80ea2c:	18801526 	beq	r3,r2,80ea84 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  80ea30:	e0bffc17 	ldw	r2,-16(fp)
  80ea34:	10800037 	ldwio	r2,0(r2)
  80ea38:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  80ea3c:	e0bfff17 	ldw	r2,-4(fp)
  80ea40:	10a0000c 	andi	r2,r2,32768
  80ea44:	10001126 	beq	r2,zero,80ea8c <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  80ea48:	e0bffd17 	ldw	r2,-12(fp)
  80ea4c:	10800a17 	ldw	r2,40(r2)
  80ea50:	e0ffff17 	ldw	r3,-4(fp)
  80ea54:	1809883a 	mov	r4,r3
  80ea58:	e0fffd17 	ldw	r3,-12(fp)
  80ea5c:	1885883a 	add	r2,r3,r2
  80ea60:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80ea64:	e0bffd17 	ldw	r2,-12(fp)
  80ea68:	10800a17 	ldw	r2,40(r2)
  80ea6c:	10800044 	addi	r2,r2,1
  80ea70:	10c1ffcc 	andi	r3,r2,2047
  80ea74:	e0bffd17 	ldw	r2,-12(fp)
  80ea78:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
  80ea7c:	0001883a 	nop
      {
  80ea80:	003fe206 	br	80ea0c <altera_avalon_jtag_uart_irq+0x58>
          break;
  80ea84:	0001883a 	nop
  80ea88:	00000106 	br	80ea90 <altera_avalon_jtag_uart_irq+0xdc>
          break;
  80ea8c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  80ea90:	e0bfff17 	ldw	r2,-4(fp)
  80ea94:	10bfffec 	andhi	r2,r2,65535
  80ea98:	10000f26 	beq	r2,zero,80ead8 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80ea9c:	e0bffd17 	ldw	r2,-12(fp)
  80eaa0:	10c00817 	ldw	r3,32(r2)
  80eaa4:	00bfff84 	movi	r2,-2
  80eaa8:	1886703a 	and	r3,r3,r2
  80eaac:	e0bffd17 	ldw	r2,-12(fp)
  80eab0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  80eab4:	e0bffc17 	ldw	r2,-16(fp)
  80eab8:	10800104 	addi	r2,r2,4
  80eabc:	1007883a 	mov	r3,r2
  80eac0:	e0bffd17 	ldw	r2,-12(fp)
  80eac4:	10800817 	ldw	r2,32(r2)
  80eac8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80eacc:	e0bffc17 	ldw	r2,-16(fp)
  80ead0:	10800104 	addi	r2,r2,4
  80ead4:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  80ead8:	e0bffb17 	ldw	r2,-20(fp)
  80eadc:	1080800c 	andi	r2,r2,512
  80eae0:	103fbe26 	beq	r2,zero,80e9dc <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  80eae4:	e0bffb17 	ldw	r2,-20(fp)
  80eae8:	1004d43a 	srli	r2,r2,16
  80eaec:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  80eaf0:	00001406 	br	80eb44 <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  80eaf4:	e0bffc17 	ldw	r2,-16(fp)
  80eaf8:	e0fffd17 	ldw	r3,-12(fp)
  80eafc:	18c00d17 	ldw	r3,52(r3)
  80eb00:	e13ffd17 	ldw	r4,-12(fp)
  80eb04:	20c7883a 	add	r3,r4,r3
  80eb08:	18c20e03 	ldbu	r3,2104(r3)
  80eb0c:	18c03fcc 	andi	r3,r3,255
  80eb10:	18c0201c 	xori	r3,r3,128
  80eb14:	18ffe004 	addi	r3,r3,-128
  80eb18:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80eb1c:	e0bffd17 	ldw	r2,-12(fp)
  80eb20:	10800d17 	ldw	r2,52(r2)
  80eb24:	10800044 	addi	r2,r2,1
  80eb28:	10c1ffcc 	andi	r3,r2,2047
  80eb2c:	e0bffd17 	ldw	r2,-12(fp)
  80eb30:	10c00d15 	stw	r3,52(r2)
  80eb34:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  80eb38:	e0bffe17 	ldw	r2,-8(fp)
  80eb3c:	10bfffc4 	addi	r2,r2,-1
  80eb40:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
  80eb44:	e0bffe17 	ldw	r2,-8(fp)
  80eb48:	10000526 	beq	r2,zero,80eb60 <altera_avalon_jtag_uart_irq+0x1ac>
  80eb4c:	e0bffd17 	ldw	r2,-12(fp)
  80eb50:	10c00d17 	ldw	r3,52(r2)
  80eb54:	e0bffd17 	ldw	r2,-12(fp)
  80eb58:	10800c17 	ldw	r2,48(r2)
  80eb5c:	18bfe51e 	bne	r3,r2,80eaf4 <altera_avalon_jtag_uart_irq+0x140>
      }

      if (space > 0)
  80eb60:	e0bffe17 	ldw	r2,-8(fp)
  80eb64:	103f9d26 	beq	r2,zero,80e9dc <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80eb68:	e0bffd17 	ldw	r2,-12(fp)
  80eb6c:	10c00817 	ldw	r3,32(r2)
  80eb70:	00bfff44 	movi	r2,-3
  80eb74:	1886703a 	and	r3,r3,r2
  80eb78:	e0bffd17 	ldw	r2,-12(fp)
  80eb7c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80eb80:	e0bffd17 	ldw	r2,-12(fp)
  80eb84:	10800017 	ldw	r2,0(r2)
  80eb88:	10800104 	addi	r2,r2,4
  80eb8c:	1007883a 	mov	r3,r2
  80eb90:	e0bffd17 	ldw	r2,-12(fp)
  80eb94:	10800817 	ldw	r2,32(r2)
  80eb98:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80eb9c:	e0bffc17 	ldw	r2,-16(fp)
  80eba0:	10800104 	addi	r2,r2,4
  80eba4:	10800037 	ldwio	r2,0(r2)
  {
  80eba8:	003f8c06 	br	80e9dc <altera_avalon_jtag_uart_irq+0x28>
      break;
  80ebac:	0001883a 	nop
      }
    }
  }
}
  80ebb0:	0001883a 	nop
  80ebb4:	e037883a 	mov	sp,fp
  80ebb8:	df000017 	ldw	fp,0(sp)
  80ebbc:	dec00104 	addi	sp,sp,4
  80ebc0:	f800283a 	ret

0080ebc4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  80ebc4:	defffc04 	addi	sp,sp,-16
  80ebc8:	df000315 	stw	fp,12(sp)
  80ebcc:	df000304 	addi	fp,sp,12
  80ebd0:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  80ebd4:	e0bffd17 	ldw	r2,-12(fp)
  80ebd8:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  80ebdc:	e0bfff17 	ldw	r2,-4(fp)
  80ebe0:	10800017 	ldw	r2,0(r2)
  80ebe4:	10800104 	addi	r2,r2,4
  80ebe8:	10800037 	ldwio	r2,0(r2)
  80ebec:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  80ebf0:	e0bffe17 	ldw	r2,-8(fp)
  80ebf4:	1081000c 	andi	r2,r2,1024
  80ebf8:	10000b26 	beq	r2,zero,80ec28 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  80ebfc:	e0bfff17 	ldw	r2,-4(fp)
  80ec00:	10800017 	ldw	r2,0(r2)
  80ec04:	10800104 	addi	r2,r2,4
  80ec08:	1007883a 	mov	r3,r2
  80ec0c:	e0bfff17 	ldw	r2,-4(fp)
  80ec10:	10800817 	ldw	r2,32(r2)
  80ec14:	10810014 	ori	r2,r2,1024
  80ec18:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  80ec1c:	e0bfff17 	ldw	r2,-4(fp)
  80ec20:	10000915 	stw	zero,36(r2)
  80ec24:	00000a06 	br	80ec50 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  80ec28:	e0bfff17 	ldw	r2,-4(fp)
  80ec2c:	10c00917 	ldw	r3,36(r2)
  80ec30:	00a00034 	movhi	r2,32768
  80ec34:	10bfff04 	addi	r2,r2,-4
  80ec38:	10c00536 	bltu	r2,r3,80ec50 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  80ec3c:	e0bfff17 	ldw	r2,-4(fp)
  80ec40:	10800917 	ldw	r2,36(r2)
  80ec44:	10c00044 	addi	r3,r2,1
  80ec48:	e0bfff17 	ldw	r2,-4(fp)
  80ec4c:	10c00915 	stw	r3,36(r2)
  80ec50:	d0a72117 	ldw	r2,-25468(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  80ec54:	e037883a 	mov	sp,fp
  80ec58:	df000017 	ldw	fp,0(sp)
  80ec5c:	dec00104 	addi	sp,sp,4
  80ec60:	f800283a 	ret

0080ec64 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  80ec64:	defffd04 	addi	sp,sp,-12
  80ec68:	df000215 	stw	fp,8(sp)
  80ec6c:	df000204 	addi	fp,sp,8
  80ec70:	e13fff15 	stw	r4,-4(fp)
  80ec74:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80ec78:	00000506 	br	80ec90 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  80ec7c:	e0bffe17 	ldw	r2,-8(fp)
  80ec80:	1090000c 	andi	r2,r2,16384
  80ec84:	10000226 	beq	r2,zero,80ec90 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  80ec88:	00bffd44 	movi	r2,-11
  80ec8c:	00000b06 	br	80ecbc <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80ec90:	e0bfff17 	ldw	r2,-4(fp)
  80ec94:	10c00d17 	ldw	r3,52(r2)
  80ec98:	e0bfff17 	ldw	r2,-4(fp)
  80ec9c:	10800c17 	ldw	r2,48(r2)
  80eca0:	18800526 	beq	r3,r2,80ecb8 <altera_avalon_jtag_uart_close+0x54>
  80eca4:	e0bfff17 	ldw	r2,-4(fp)
  80eca8:	10c00917 	ldw	r3,36(r2)
  80ecac:	e0bfff17 	ldw	r2,-4(fp)
  80ecb0:	10800117 	ldw	r2,4(r2)
  80ecb4:	18bff136 	bltu	r3,r2,80ec7c <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
  80ecb8:	0005883a 	mov	r2,zero
}
  80ecbc:	e037883a 	mov	sp,fp
  80ecc0:	df000017 	ldw	fp,0(sp)
  80ecc4:	dec00104 	addi	sp,sp,4
  80ecc8:	f800283a 	ret

0080eccc <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  80eccc:	defffa04 	addi	sp,sp,-24
  80ecd0:	df000515 	stw	fp,20(sp)
  80ecd4:	df000504 	addi	fp,sp,20
  80ecd8:	e13ffd15 	stw	r4,-12(fp)
  80ecdc:	e17ffc15 	stw	r5,-16(fp)
  80ece0:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
  80ece4:	00bff9c4 	movi	r2,-25
  80ece8:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
  80ecec:	e0bffc17 	ldw	r2,-16(fp)
  80ecf0:	109a8060 	cmpeqi	r2,r2,27137
  80ecf4:	1000041e 	bne	r2,zero,80ed08 <altera_avalon_jtag_uart_ioctl+0x3c>
  80ecf8:	e0bffc17 	ldw	r2,-16(fp)
  80ecfc:	109a80a0 	cmpeqi	r2,r2,27138
  80ed00:	1000181e 	bne	r2,zero,80ed64 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
  80ed04:	00002906 	br	80edac <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
  80ed08:	e0bffd17 	ldw	r2,-12(fp)
  80ed0c:	10c00117 	ldw	r3,4(r2)
  80ed10:	00a00034 	movhi	r2,32768
  80ed14:	10bfffc4 	addi	r2,r2,-1
  80ed18:	18802126 	beq	r3,r2,80eda0 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
  80ed1c:	e0bffb17 	ldw	r2,-20(fp)
  80ed20:	10800017 	ldw	r2,0(r2)
  80ed24:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  80ed28:	e0bffe17 	ldw	r2,-8(fp)
  80ed2c:	10800090 	cmplti	r2,r2,2
  80ed30:	1000061e 	bne	r2,zero,80ed4c <altera_avalon_jtag_uart_ioctl+0x80>
  80ed34:	e0fffe17 	ldw	r3,-8(fp)
  80ed38:	00a00034 	movhi	r2,32768
  80ed3c:	10bfffc4 	addi	r2,r2,-1
  80ed40:	18800226 	beq	r3,r2,80ed4c <altera_avalon_jtag_uart_ioctl+0x80>
  80ed44:	e0bffe17 	ldw	r2,-8(fp)
  80ed48:	00000206 	br	80ed54 <altera_avalon_jtag_uart_ioctl+0x88>
  80ed4c:	00a00034 	movhi	r2,32768
  80ed50:	10bfff84 	addi	r2,r2,-2
  80ed54:	e0fffd17 	ldw	r3,-12(fp)
  80ed58:	18800115 	stw	r2,4(r3)
      rc = 0;
  80ed5c:	e03fff15 	stw	zero,-4(fp)
    break;
  80ed60:	00000f06 	br	80eda0 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
  80ed64:	e0bffd17 	ldw	r2,-12(fp)
  80ed68:	10c00117 	ldw	r3,4(r2)
  80ed6c:	00a00034 	movhi	r2,32768
  80ed70:	10bfffc4 	addi	r2,r2,-1
  80ed74:	18800c26 	beq	r3,r2,80eda8 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  80ed78:	e0bffd17 	ldw	r2,-12(fp)
  80ed7c:	10c00917 	ldw	r3,36(r2)
  80ed80:	e0bffd17 	ldw	r2,-12(fp)
  80ed84:	10800117 	ldw	r2,4(r2)
  80ed88:	1885803a 	cmpltu	r2,r3,r2
  80ed8c:	10c03fcc 	andi	r3,r2,255
  80ed90:	e0bffb17 	ldw	r2,-20(fp)
  80ed94:	10c00015 	stw	r3,0(r2)
      rc = 0;
  80ed98:	e03fff15 	stw	zero,-4(fp)
    break;
  80ed9c:	00000206 	br	80eda8 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
  80eda0:	0001883a 	nop
  80eda4:	00000106 	br	80edac <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
  80eda8:	0001883a 	nop
  }

  return rc;
  80edac:	e0bfff17 	ldw	r2,-4(fp)
}
  80edb0:	e037883a 	mov	sp,fp
  80edb4:	df000017 	ldw	fp,0(sp)
  80edb8:	dec00104 	addi	sp,sp,4
  80edbc:	f800283a 	ret

0080edc0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  80edc0:	defff304 	addi	sp,sp,-52
  80edc4:	dfc00c15 	stw	ra,48(sp)
  80edc8:	df000b15 	stw	fp,44(sp)
  80edcc:	df000b04 	addi	fp,sp,44
  80edd0:	e13ff815 	stw	r4,-32(fp)
  80edd4:	e17ff715 	stw	r5,-36(fp)
  80edd8:	e1bff615 	stw	r6,-40(fp)
  80eddc:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
  80ede0:	e0bff717 	ldw	r2,-36(fp)
  80ede4:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80ede8:	00004706 	br	80ef08 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  80edec:	e0bff817 	ldw	r2,-32(fp)
  80edf0:	10800a17 	ldw	r2,40(r2)
  80edf4:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
  80edf8:	e0bff817 	ldw	r2,-32(fp)
  80edfc:	10800b17 	ldw	r2,44(r2)
  80ee00:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
  80ee04:	e0fffd17 	ldw	r3,-12(fp)
  80ee08:	e0bffc17 	ldw	r2,-16(fp)
  80ee0c:	18800536 	bltu	r3,r2,80ee24 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  80ee10:	e0fffd17 	ldw	r3,-12(fp)
  80ee14:	e0bffc17 	ldw	r2,-16(fp)
  80ee18:	1885c83a 	sub	r2,r3,r2
  80ee1c:	e0bffe15 	stw	r2,-8(fp)
  80ee20:	00000406 	br	80ee34 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  80ee24:	00c20004 	movi	r3,2048
  80ee28:	e0bffc17 	ldw	r2,-16(fp)
  80ee2c:	1885c83a 	sub	r2,r3,r2
  80ee30:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
  80ee34:	e0bffe17 	ldw	r2,-8(fp)
  80ee38:	10001e26 	beq	r2,zero,80eeb4 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  80ee3c:	e0fff617 	ldw	r3,-40(fp)
  80ee40:	e0bffe17 	ldw	r2,-8(fp)
  80ee44:	1880022e 	bgeu	r3,r2,80ee50 <altera_avalon_jtag_uart_read+0x90>
        n = space;
  80ee48:	e0bff617 	ldw	r2,-40(fp)
  80ee4c:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  80ee50:	e0bff817 	ldw	r2,-32(fp)
  80ee54:	10c00e04 	addi	r3,r2,56
  80ee58:	e0bffc17 	ldw	r2,-16(fp)
  80ee5c:	1885883a 	add	r2,r3,r2
  80ee60:	e1bffe17 	ldw	r6,-8(fp)
  80ee64:	100b883a 	mov	r5,r2
  80ee68:	e13fff17 	ldw	r4,-4(fp)
  80ee6c:	08066600 	call	806660 <memcpy>
      ptr   += n;
  80ee70:	e0ffff17 	ldw	r3,-4(fp)
  80ee74:	e0bffe17 	ldw	r2,-8(fp)
  80ee78:	1885883a 	add	r2,r3,r2
  80ee7c:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
  80ee80:	e0fff617 	ldw	r3,-40(fp)
  80ee84:	e0bffe17 	ldw	r2,-8(fp)
  80ee88:	1885c83a 	sub	r2,r3,r2
  80ee8c:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80ee90:	e0fffc17 	ldw	r3,-16(fp)
  80ee94:	e0bffe17 	ldw	r2,-8(fp)
  80ee98:	1885883a 	add	r2,r3,r2
  80ee9c:	10c1ffcc 	andi	r3,r2,2047
  80eea0:	e0bff817 	ldw	r2,-32(fp)
  80eea4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  80eea8:	e0bff617 	ldw	r2,-40(fp)
  80eeac:	00bfcf16 	blt	zero,r2,80edec <altera_avalon_jtag_uart_read+0x2c>
  80eeb0:	00000106 	br	80eeb8 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
  80eeb4:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
  80eeb8:	e0ffff17 	ldw	r3,-4(fp)
  80eebc:	e0bff717 	ldw	r2,-36(fp)
  80eec0:	1880141e 	bne	r3,r2,80ef14 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  80eec4:	e0bff517 	ldw	r2,-44(fp)
  80eec8:	1090000c 	andi	r2,r2,16384
  80eecc:	1000131e 	bne	r2,zero,80ef1c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  80eed0:	0001883a 	nop
  80eed4:	e0bff817 	ldw	r2,-32(fp)
  80eed8:	10800a17 	ldw	r2,40(r2)
  80eedc:	e0fffd17 	ldw	r3,-12(fp)
  80eee0:	1880051e 	bne	r3,r2,80eef8 <altera_avalon_jtag_uart_read+0x138>
  80eee4:	e0bff817 	ldw	r2,-32(fp)
  80eee8:	10c00917 	ldw	r3,36(r2)
  80eeec:	e0bff817 	ldw	r2,-32(fp)
  80eef0:	10800117 	ldw	r2,4(r2)
  80eef4:	18bff736 	bltu	r3,r2,80eed4 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  80eef8:	e0bff817 	ldw	r2,-32(fp)
  80eefc:	10800a17 	ldw	r2,40(r2)
  80ef00:	e0fffd17 	ldw	r3,-12(fp)
  80ef04:	18800726 	beq	r3,r2,80ef24 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
  80ef08:	e0bff617 	ldw	r2,-40(fp)
  80ef0c:	00bfb716 	blt	zero,r2,80edec <altera_avalon_jtag_uart_read+0x2c>
  80ef10:	00000506 	br	80ef28 <altera_avalon_jtag_uart_read+0x168>
      break;
  80ef14:	0001883a 	nop
  80ef18:	00000306 	br	80ef28 <altera_avalon_jtag_uart_read+0x168>
      break;
  80ef1c:	0001883a 	nop
  80ef20:	00000106 	br	80ef28 <altera_avalon_jtag_uart_read+0x168>
      break;
  80ef24:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  80ef28:	e0ffff17 	ldw	r3,-4(fp)
  80ef2c:	e0bff717 	ldw	r2,-36(fp)
  80ef30:	18801926 	beq	r3,r2,80ef98 <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
  80ef34:	0005303a 	rdctl	r2,status
  80ef38:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ef3c:	e0fff917 	ldw	r3,-28(fp)
  80ef40:	00bfff84 	movi	r2,-2
  80ef44:	1884703a 	and	r2,r3,r2
  80ef48:	1001703a 	wrctl	status,r2
  return context;
  80ef4c:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  80ef50:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80ef54:	e0bff817 	ldw	r2,-32(fp)
  80ef58:	10800817 	ldw	r2,32(r2)
  80ef5c:	10c00054 	ori	r3,r2,1
  80ef60:	e0bff817 	ldw	r2,-32(fp)
  80ef64:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80ef68:	e0bff817 	ldw	r2,-32(fp)
  80ef6c:	10800017 	ldw	r2,0(r2)
  80ef70:	10800104 	addi	r2,r2,4
  80ef74:	1007883a 	mov	r3,r2
  80ef78:	e0bff817 	ldw	r2,-32(fp)
  80ef7c:	10800817 	ldw	r2,32(r2)
  80ef80:	18800035 	stwio	r2,0(r3)
  80ef84:	e0bffb17 	ldw	r2,-20(fp)
  80ef88:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
  80ef8c:	e0bffa17 	ldw	r2,-24(fp)
  80ef90:	1001703a 	wrctl	status,r2
}
  80ef94:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  80ef98:	e0ffff17 	ldw	r3,-4(fp)
  80ef9c:	e0bff717 	ldw	r2,-36(fp)
  80efa0:	18800426 	beq	r3,r2,80efb4 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
  80efa4:	e0ffff17 	ldw	r3,-4(fp)
  80efa8:	e0bff717 	ldw	r2,-36(fp)
  80efac:	1885c83a 	sub	r2,r3,r2
  80efb0:	00000606 	br	80efcc <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
  80efb4:	e0bff517 	ldw	r2,-44(fp)
  80efb8:	1090000c 	andi	r2,r2,16384
  80efbc:	10000226 	beq	r2,zero,80efc8 <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
  80efc0:	00bffd44 	movi	r2,-11
  80efc4:	00000106 	br	80efcc <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
  80efc8:	00bffec4 	movi	r2,-5
}
  80efcc:	e037883a 	mov	sp,fp
  80efd0:	dfc00117 	ldw	ra,4(sp)
  80efd4:	df000017 	ldw	fp,0(sp)
  80efd8:	dec00204 	addi	sp,sp,8
  80efdc:	f800283a 	ret

0080efe0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  80efe0:	defff304 	addi	sp,sp,-52
  80efe4:	dfc00c15 	stw	ra,48(sp)
  80efe8:	df000b15 	stw	fp,44(sp)
  80efec:	df000b04 	addi	fp,sp,44
  80eff0:	e13ff815 	stw	r4,-32(fp)
  80eff4:	e17ff715 	stw	r5,-36(fp)
  80eff8:	e1bff615 	stw	r6,-40(fp)
  80effc:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  80f000:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  80f004:	e0bff717 	ldw	r2,-36(fp)
  80f008:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80f00c:	00003706 	br	80f0ec <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  80f010:	e0bff817 	ldw	r2,-32(fp)
  80f014:	10800c17 	ldw	r2,48(r2)
  80f018:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
  80f01c:	e0bff817 	ldw	r2,-32(fp)
  80f020:	10800d17 	ldw	r2,52(r2)
  80f024:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
  80f028:	e0fffc17 	ldw	r3,-16(fp)
  80f02c:	e0bfff17 	ldw	r2,-4(fp)
  80f030:	1880062e 	bgeu	r3,r2,80f04c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  80f034:	e0ffff17 	ldw	r3,-4(fp)
  80f038:	e0bffc17 	ldw	r2,-16(fp)
  80f03c:	1885c83a 	sub	r2,r3,r2
  80f040:	10bfffc4 	addi	r2,r2,-1
  80f044:	e0bffe15 	stw	r2,-8(fp)
  80f048:	00000b06 	br	80f078 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  80f04c:	e0bfff17 	ldw	r2,-4(fp)
  80f050:	10000526 	beq	r2,zero,80f068 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  80f054:	00c20004 	movi	r3,2048
  80f058:	e0bffc17 	ldw	r2,-16(fp)
  80f05c:	1885c83a 	sub	r2,r3,r2
  80f060:	e0bffe15 	stw	r2,-8(fp)
  80f064:	00000406 	br	80f078 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  80f068:	00c1ffc4 	movi	r3,2047
  80f06c:	e0bffc17 	ldw	r2,-16(fp)
  80f070:	1885c83a 	sub	r2,r3,r2
  80f074:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
  80f078:	e0bffe17 	ldw	r2,-8(fp)
  80f07c:	10001e26 	beq	r2,zero,80f0f8 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  80f080:	e0fff617 	ldw	r3,-40(fp)
  80f084:	e0bffe17 	ldw	r2,-8(fp)
  80f088:	1880022e 	bgeu	r3,r2,80f094 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  80f08c:	e0bff617 	ldw	r2,-40(fp)
  80f090:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  80f094:	e0bff817 	ldw	r2,-32(fp)
  80f098:	10c20e04 	addi	r3,r2,2104
  80f09c:	e0bffc17 	ldw	r2,-16(fp)
  80f0a0:	1885883a 	add	r2,r3,r2
  80f0a4:	e1bffe17 	ldw	r6,-8(fp)
  80f0a8:	e17ff717 	ldw	r5,-36(fp)
  80f0ac:	1009883a 	mov	r4,r2
  80f0b0:	08066600 	call	806660 <memcpy>
      ptr   += n;
  80f0b4:	e0fff717 	ldw	r3,-36(fp)
  80f0b8:	e0bffe17 	ldw	r2,-8(fp)
  80f0bc:	1885883a 	add	r2,r3,r2
  80f0c0:	e0bff715 	stw	r2,-36(fp)
      count -= n;
  80f0c4:	e0fff617 	ldw	r3,-40(fp)
  80f0c8:	e0bffe17 	ldw	r2,-8(fp)
  80f0cc:	1885c83a 	sub	r2,r3,r2
  80f0d0:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f0d4:	e0fffc17 	ldw	r3,-16(fp)
  80f0d8:	e0bffe17 	ldw	r2,-8(fp)
  80f0dc:	1885883a 	add	r2,r3,r2
  80f0e0:	10c1ffcc 	andi	r3,r2,2047
  80f0e4:	e0bff817 	ldw	r2,-32(fp)
  80f0e8:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
  80f0ec:	e0bff617 	ldw	r2,-40(fp)
  80f0f0:	00bfc716 	blt	zero,r2,80f010 <altera_avalon_jtag_uart_write+0x30>
  80f0f4:	00000106 	br	80f0fc <altera_avalon_jtag_uart_write+0x11c>
        break;
  80f0f8:	0001883a 	nop
  NIOS2_READ_STATUS (context);
  80f0fc:	0005303a 	rdctl	r2,status
  80f100:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f104:	e0fff917 	ldw	r3,-28(fp)
  80f108:	00bfff84 	movi	r2,-2
  80f10c:	1884703a 	and	r2,r3,r2
  80f110:	1001703a 	wrctl	status,r2
  return context;
  80f114:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  80f118:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80f11c:	e0bff817 	ldw	r2,-32(fp)
  80f120:	10800817 	ldw	r2,32(r2)
  80f124:	10c00094 	ori	r3,r2,2
  80f128:	e0bff817 	ldw	r2,-32(fp)
  80f12c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80f130:	e0bff817 	ldw	r2,-32(fp)
  80f134:	10800017 	ldw	r2,0(r2)
  80f138:	10800104 	addi	r2,r2,4
  80f13c:	1007883a 	mov	r3,r2
  80f140:	e0bff817 	ldw	r2,-32(fp)
  80f144:	10800817 	ldw	r2,32(r2)
  80f148:	18800035 	stwio	r2,0(r3)
  80f14c:	e0bffb17 	ldw	r2,-20(fp)
  80f150:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
  80f154:	e0bffa17 	ldw	r2,-24(fp)
  80f158:	1001703a 	wrctl	status,r2
}
  80f15c:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  80f160:	e0bff617 	ldw	r2,-40(fp)
  80f164:	0080100e 	bge	zero,r2,80f1a8 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
  80f168:	e0bff517 	ldw	r2,-44(fp)
  80f16c:	1090000c 	andi	r2,r2,16384
  80f170:	1000101e 	bne	r2,zero,80f1b4 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  80f174:	0001883a 	nop
  80f178:	e0bff817 	ldw	r2,-32(fp)
  80f17c:	10800d17 	ldw	r2,52(r2)
  80f180:	e0ffff17 	ldw	r3,-4(fp)
  80f184:	1880051e 	bne	r3,r2,80f19c <altera_avalon_jtag_uart_write+0x1bc>
  80f188:	e0bff817 	ldw	r2,-32(fp)
  80f18c:	10c00917 	ldw	r3,36(r2)
  80f190:	e0bff817 	ldw	r2,-32(fp)
  80f194:	10800117 	ldw	r2,4(r2)
  80f198:	18bff736 	bltu	r3,r2,80f178 <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  80f19c:	e0bff817 	ldw	r2,-32(fp)
  80f1a0:	10800917 	ldw	r2,36(r2)
  80f1a4:	1000051e 	bne	r2,zero,80f1bc <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
  80f1a8:	e0bff617 	ldw	r2,-40(fp)
  80f1ac:	00bfcf16 	blt	zero,r2,80f0ec <altera_avalon_jtag_uart_write+0x10c>
  80f1b0:	00000306 	br	80f1c0 <altera_avalon_jtag_uart_write+0x1e0>
        break;
  80f1b4:	0001883a 	nop
  80f1b8:	00000106 	br	80f1c0 <altera_avalon_jtag_uart_write+0x1e0>
         break;
  80f1bc:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  80f1c0:	e0fff717 	ldw	r3,-36(fp)
  80f1c4:	e0bffd17 	ldw	r2,-12(fp)
  80f1c8:	18800426 	beq	r3,r2,80f1dc <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
  80f1cc:	e0fff717 	ldw	r3,-36(fp)
  80f1d0:	e0bffd17 	ldw	r2,-12(fp)
  80f1d4:	1885c83a 	sub	r2,r3,r2
  80f1d8:	00000606 	br	80f1f4 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
  80f1dc:	e0bff517 	ldw	r2,-44(fp)
  80f1e0:	1090000c 	andi	r2,r2,16384
  80f1e4:	10000226 	beq	r2,zero,80f1f0 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
  80f1e8:	00bffd44 	movi	r2,-11
  80f1ec:	00000106 	br	80f1f4 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  80f1f0:	00bffec4 	movi	r2,-5
}
  80f1f4:	e037883a 	mov	sp,fp
  80f1f8:	dfc00117 	ldw	ra,4(sp)
  80f1fc:	df000017 	ldw	fp,0(sp)
  80f200:	dec00204 	addi	sp,sp,8
  80f204:	f800283a 	ret

0080f208 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  80f208:	defff904 	addi	sp,sp,-28
  80f20c:	dfc00615 	stw	ra,24(sp)
  80f210:	df000515 	stw	fp,20(sp)
  80f214:	df000504 	addi	fp,sp,20
  80f218:	e13ffc15 	stw	r4,-16(fp)
  80f21c:	e17ffb15 	stw	r5,-20(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  80f220:	0007883a 	mov	r3,zero
  80f224:	e0bffc17 	ldw	r2,-16(fp)
  80f228:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  80f22c:	e0bffc17 	ldw	r2,-16(fp)
  80f230:	10800104 	addi	r2,r2,4
  80f234:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
  80f238:	0005303a 	rdctl	r2,status
  80f23c:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f240:	e0fffd17 	ldw	r3,-12(fp)
  80f244:	00bfff84 	movi	r2,-2
  80f248:	1884703a 	and	r2,r3,r2
  80f24c:	1001703a 	wrctl	status,r2
  return context;
  80f250:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  80f254:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
  80f258:	081014c0 	call	81014c <alt_tick>
  80f25c:	e0bfff17 	ldw	r2,-4(fp)
  80f260:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
  80f264:	e0bffe17 	ldw	r2,-8(fp)
  80f268:	1001703a 	wrctl	status,r2
}
  80f26c:	0001883a 	nop
  alt_irq_enable_all(cpu_sr);
}
  80f270:	0001883a 	nop
  80f274:	e037883a 	mov	sp,fp
  80f278:	dfc00117 	ldw	ra,4(sp)
  80f27c:	df000017 	ldw	fp,0(sp)
  80f280:	dec00204 	addi	sp,sp,8
  80f284:	f800283a 	ret

0080f288 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  80f288:	defff904 	addi	sp,sp,-28
  80f28c:	dfc00615 	stw	ra,24(sp)
  80f290:	df000515 	stw	fp,20(sp)
  80f294:	df000504 	addi	fp,sp,20
  80f298:	e13ffe15 	stw	r4,-8(fp)
  80f29c:	e17ffd15 	stw	r5,-12(fp)
  80f2a0:	e1bffc15 	stw	r6,-16(fp)
  80f2a4:	e1fffb15 	stw	r7,-20(fp)
  80f2a8:	e0bffb17 	ldw	r2,-20(fp)
  80f2ac:	e0bfff15 	stw	r2,-4(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  80f2b0:	d0a72117 	ldw	r2,-25468(gp)
  80f2b4:	1000031e 	bne	r2,zero,80f2c4 <alt_avalon_timer_sc_init+0x3c>
  {
    _alt_tick_rate = nticks;
  80f2b8:	e0bfff17 	ldw	r2,-4(fp)
  80f2bc:	d0a72115 	stw	r2,-25468(gp)
    return 0;
  80f2c0:	00000106 	br	80f2c8 <alt_avalon_timer_sc_init+0x40>
  }
  else
  {
    return -1;
  80f2c4:	0001883a 	nop
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  80f2c8:	e0bffe17 	ldw	r2,-8(fp)
  80f2cc:	10800104 	addi	r2,r2,4
  80f2d0:	00c001c4 	movi	r3,7
  80f2d4:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
  80f2d8:	01802074 	movhi	r6,129
  80f2dc:	31bc8204 	addi	r6,r6,-3576
  80f2e0:	e17ffe17 	ldw	r5,-8(fp)
  80f2e4:	e13ffc17 	ldw	r4,-16(fp)
  80f2e8:	080ff280 	call	80ff28 <alt_irq_register>
#endif  
}
  80f2ec:	0001883a 	nop
  80f2f0:	e037883a 	mov	sp,fp
  80f2f4:	dfc00117 	ldw	ra,4(sp)
  80f2f8:	df000017 	ldw	fp,0(sp)
  80f2fc:	dec00204 	addi	sp,sp,8
  80f300:	f800283a 	ret

0080f304 <alt_up_accelerometer_spi_open_dev>:

#include "altera_up_avalon_accelerometer_spi.h"
#include "altera_up_avalon_accelerometer_spi_regs.h"

alt_up_accelerometer_spi_dev* alt_up_accelerometer_spi_open_dev(const char* name)
{
  80f304:	defffc04 	addi	sp,sp,-16
  80f308:	dfc00315 	stw	ra,12(sp)
  80f30c:	df000215 	stw	fp,8(sp)
  80f310:	df000204 	addi	fp,sp,8
  80f314:	e13ffe15 	stw	r4,-8(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_accelerometer_spi_dev *dev = (alt_up_accelerometer_spi_dev*)alt_find_dev(name, &alt_dev_list);
  80f318:	d1600704 	addi	r5,gp,-32740
  80f31c:	e13ffe17 	ldw	r4,-8(fp)
  80f320:	080fb540 	call	80fb54 <alt_find_dev>
  80f324:	e0bfff15 	stw	r2,-4(fp)

  return dev;
  80f328:	e0bfff17 	ldw	r2,-4(fp)
}
  80f32c:	e037883a 	mov	sp,fp
  80f330:	dfc00117 	ldw	ra,4(sp)
  80f334:	df000017 	ldw	fp,0(sp)
  80f338:	dec00204 	addi	sp,sp,8
  80f33c:	f800283a 	ret

0080f340 <alt_up_accelerometer_spi_read_address_register>:
 * @param addr -- a pointer to the location where the read address should be stored
 *
 * @return 0 for success 
 **/
int alt_up_accelerometer_spi_read_address_register(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 *addr)
{
  80f340:	defffd04 	addi	sp,sp,-12
  80f344:	df000215 	stw	fp,8(sp)
  80f348:	df000204 	addi	fp,sp,8
  80f34c:	e13fff15 	stw	r4,-4(fp)
  80f350:	e17ffe15 	stw	r5,-8(fp)
	// reads data from the device Address register
	*(addr) = IORD_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base); 
  80f354:	e0bfff17 	ldw	r2,-4(fp)
  80f358:	10800a17 	ldw	r2,40(r2)
  80f35c:	10800023 	ldbuio	r2,0(r2)
  80f360:	10803fcc 	andi	r2,r2,255
  80f364:	1007883a 	mov	r3,r2
  80f368:	e0bffe17 	ldw	r2,-8(fp)
  80f36c:	10c00005 	stb	r3,0(r2)

	return 0;
  80f370:	0005883a 	mov	r2,zero
}
  80f374:	e037883a 	mov	sp,fp
  80f378:	df000017 	ldw	fp,0(sp)
  80f37c:	dec00104 	addi	sp,sp,4
  80f380:	f800283a 	ret

0080f384 <alt_up_accelerometer_spi_read>:
 * @param data -- a pointer to the location where the read data should be stored
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_read(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 *data)
{
  80f384:	defffc04 	addi	sp,sp,-16
  80f388:	df000315 	stw	fp,12(sp)
  80f38c:	df000304 	addi	fp,sp,12
  80f390:	e13fff15 	stw	r4,-4(fp)
  80f394:	2805883a 	mov	r2,r5
  80f398:	e1bffd15 	stw	r6,-12(fp)
  80f39c:	e0bffe05 	stb	r2,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
  80f3a0:	e0bfff17 	ldw	r2,-4(fp)
  80f3a4:	10800a17 	ldw	r2,40(r2)
  80f3a8:	1007883a 	mov	r3,r2
  80f3ac:	e0bffe03 	ldbu	r2,-8(fp)
  80f3b0:	10800fcc 	andi	r2,r2,63
  80f3b4:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(data) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
  80f3b8:	e0bfff17 	ldw	r2,-4(fp)
  80f3bc:	10800a17 	ldw	r2,40(r2)
  80f3c0:	10800044 	addi	r2,r2,1
  80f3c4:	10800023 	ldbuio	r2,0(r2)
  80f3c8:	10803fcc 	andi	r2,r2,255
  80f3cc:	1007883a 	mov	r3,r2
  80f3d0:	e0bffd17 	ldw	r2,-12(fp)
  80f3d4:	10c00005 	stb	r3,0(r2)

	return 0;
  80f3d8:	0005883a 	mov	r2,zero
}
  80f3dc:	e037883a 	mov	sp,fp
  80f3e0:	df000017 	ldw	fp,0(sp)
  80f3e4:	dec00104 	addi	sp,sp,4
  80f3e8:	f800283a 	ret

0080f3ec <alt_up_accelerometer_spi_write>:
 * @param data -- the data to be written
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_write(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 data)
{
  80f3ec:	defffc04 	addi	sp,sp,-16
  80f3f0:	df000315 	stw	fp,12(sp)
  80f3f4:	df000304 	addi	fp,sp,12
  80f3f8:	e13fff15 	stw	r4,-4(fp)
  80f3fc:	2805883a 	mov	r2,r5
  80f400:	3007883a 	mov	r3,r6
  80f404:	e0bffe05 	stb	r2,-8(fp)
  80f408:	1805883a 	mov	r2,r3
  80f40c:	e0bffd05 	stb	r2,-12(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
  80f410:	e0bfff17 	ldw	r2,-4(fp)
  80f414:	10800a17 	ldw	r2,40(r2)
  80f418:	1007883a 	mov	r3,r2
  80f41c:	e0bffe03 	ldbu	r2,-8(fp)
  80f420:	10800fcc 	andi	r2,r2,63
  80f424:	18800025 	stbio	r2,0(r3)

	// write data to the device Data register
	IOWR_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base, data & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK); 
  80f428:	e0bfff17 	ldw	r2,-4(fp)
  80f42c:	10800a17 	ldw	r2,40(r2)
  80f430:	10800044 	addi	r2,r2,1
  80f434:	1007883a 	mov	r3,r2
  80f438:	e0bffd03 	ldbu	r2,-12(fp)
  80f43c:	18800025 	stbio	r2,0(r3)

	return 0;
  80f440:	0005883a 	mov	r2,zero
}
  80f444:	e037883a 	mov	sp,fp
  80f448:	df000017 	ldw	fp,0(sp)
  80f44c:	dec00104 	addi	sp,sp,4
  80f450:	f800283a 	ret

0080f454 <alt_up_accelerometer_spi_read_x_axis>:
 * @param x_axis -- a pointer to the location where the x axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_x_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *x_axis)
{
  80f454:	defffd04 	addi	sp,sp,-12
  80f458:	df000215 	stw	fp,8(sp)
  80f45c:	df000204 	addi	fp,sp,8
  80f460:	e13fff15 	stw	r4,-4(fp)
  80f464:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
  80f468:	e0bfff17 	ldw	r2,-4(fp)
  80f46c:	10800a17 	ldw	r2,40(r2)
  80f470:	1007883a 	mov	r3,r2
  80f474:	00800c84 	movi	r2,50
  80f478:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
  80f47c:	e0bfff17 	ldw	r2,-4(fp)
  80f480:	10800a17 	ldw	r2,40(r2)
  80f484:	10800044 	addi	r2,r2,1
  80f488:	10800023 	ldbuio	r2,0(r2)
  80f48c:	10803fcc 	andi	r2,r2,255
  80f490:	10ffffcc 	andi	r3,r2,65535
  80f494:	e0bffe17 	ldw	r2,-8(fp)
  80f498:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
  80f49c:	e0bfff17 	ldw	r2,-4(fp)
  80f4a0:	10800a17 	ldw	r2,40(r2)
  80f4a4:	1007883a 	mov	r3,r2
  80f4a8:	00800cc4 	movi	r2,51
  80f4ac:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
  80f4b0:	e0bfff17 	ldw	r2,-4(fp)
  80f4b4:	10800a17 	ldw	r2,40(r2)
  80f4b8:	10800044 	addi	r2,r2,1
  80f4bc:	10800023 	ldbuio	r2,0(r2)
  80f4c0:	10803fcc 	andi	r2,r2,255
  80f4c4:	1006923a 	slli	r3,r2,8
  80f4c8:	00804034 	movhi	r2,256
  80f4cc:	10bfc004 	addi	r2,r2,-256
  80f4d0:	1884703a 	and	r2,r3,r2
  80f4d4:	e0fffe17 	ldw	r3,-8(fp)
  80f4d8:	18c00017 	ldw	r3,0(r3)
  80f4dc:	10c5883a 	add	r2,r2,r3
  80f4e0:	1007883a 	mov	r3,r2
  80f4e4:	e0bffe17 	ldw	r2,-8(fp)
  80f4e8:	10c00015 	stw	r3,0(r2)

	if (*(x_axis) & 0x00008000)
  80f4ec:	e0bffe17 	ldw	r2,-8(fp)
  80f4f0:	10800017 	ldw	r2,0(r2)
  80f4f4:	10a0000c 	andi	r2,r2,32768
  80f4f8:	10000626 	beq	r2,zero,80f514 <alt_up_accelerometer_spi_read_x_axis+0xc0>
	{
		*(x_axis) |= 0xFFFF0000;
  80f4fc:	e0bffe17 	ldw	r2,-8(fp)
  80f500:	10800017 	ldw	r2,0(r2)
  80f504:	10bffff4 	orhi	r2,r2,65535
  80f508:	1007883a 	mov	r3,r2
  80f50c:	e0bffe17 	ldw	r2,-8(fp)
  80f510:	10c00015 	stw	r3,0(r2)
	}

	return 0;
  80f514:	0005883a 	mov	r2,zero
}
  80f518:	e037883a 	mov	sp,fp
  80f51c:	df000017 	ldw	fp,0(sp)
  80f520:	dec00104 	addi	sp,sp,4
  80f524:	f800283a 	ret

0080f528 <alt_up_accelerometer_spi_read_y_axis>:
 * @param y_axis -- a pointer to the location where the y axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_y_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *y_axis)
{
  80f528:	defffd04 	addi	sp,sp,-12
  80f52c:	df000215 	stw	fp,8(sp)
  80f530:	df000204 	addi	fp,sp,8
  80f534:	e13fff15 	stw	r4,-4(fp)
  80f538:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
  80f53c:	e0bfff17 	ldw	r2,-4(fp)
  80f540:	10800a17 	ldw	r2,40(r2)
  80f544:	1007883a 	mov	r3,r2
  80f548:	00800d04 	movi	r2,52
  80f54c:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
  80f550:	e0bfff17 	ldw	r2,-4(fp)
  80f554:	10800a17 	ldw	r2,40(r2)
  80f558:	10800044 	addi	r2,r2,1
  80f55c:	10800023 	ldbuio	r2,0(r2)
  80f560:	10803fcc 	andi	r2,r2,255
  80f564:	10ffffcc 	andi	r3,r2,65535
  80f568:	e0bffe17 	ldw	r2,-8(fp)
  80f56c:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
  80f570:	e0bfff17 	ldw	r2,-4(fp)
  80f574:	10800a17 	ldw	r2,40(r2)
  80f578:	1007883a 	mov	r3,r2
  80f57c:	00800d44 	movi	r2,53
  80f580:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
  80f584:	e0bfff17 	ldw	r2,-4(fp)
  80f588:	10800a17 	ldw	r2,40(r2)
  80f58c:	10800044 	addi	r2,r2,1
  80f590:	10800023 	ldbuio	r2,0(r2)
  80f594:	10803fcc 	andi	r2,r2,255
  80f598:	1006923a 	slli	r3,r2,8
  80f59c:	00804034 	movhi	r2,256
  80f5a0:	10bfc004 	addi	r2,r2,-256
  80f5a4:	1884703a 	and	r2,r3,r2
  80f5a8:	e0fffe17 	ldw	r3,-8(fp)
  80f5ac:	18c00017 	ldw	r3,0(r3)
  80f5b0:	10c5883a 	add	r2,r2,r3
  80f5b4:	1007883a 	mov	r3,r2
  80f5b8:	e0bffe17 	ldw	r2,-8(fp)
  80f5bc:	10c00015 	stw	r3,0(r2)

	if (*(y_axis) & 0x00008000)
  80f5c0:	e0bffe17 	ldw	r2,-8(fp)
  80f5c4:	10800017 	ldw	r2,0(r2)
  80f5c8:	10a0000c 	andi	r2,r2,32768
  80f5cc:	10000626 	beq	r2,zero,80f5e8 <alt_up_accelerometer_spi_read_y_axis+0xc0>
	{
		*(y_axis) |= 0xFFFF0000;
  80f5d0:	e0bffe17 	ldw	r2,-8(fp)
  80f5d4:	10800017 	ldw	r2,0(r2)
  80f5d8:	10bffff4 	orhi	r2,r2,65535
  80f5dc:	1007883a 	mov	r3,r2
  80f5e0:	e0bffe17 	ldw	r2,-8(fp)
  80f5e4:	10c00015 	stw	r3,0(r2)
	}

	return 0;
  80f5e8:	0005883a 	mov	r2,zero
}
  80f5ec:	e037883a 	mov	sp,fp
  80f5f0:	df000017 	ldw	fp,0(sp)
  80f5f4:	dec00104 	addi	sp,sp,4
  80f5f8:	f800283a 	ret

0080f5fc <alt_up_accelerometer_spi_read_z_axis>:
 * @param z_axis -- a pointer to the location where the z axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_z_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *z_axis)
{
  80f5fc:	defffd04 	addi	sp,sp,-12
  80f600:	df000215 	stw	fp,8(sp)
  80f604:	df000204 	addi	fp,sp,8
  80f608:	e13fff15 	stw	r4,-4(fp)
  80f60c:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
  80f610:	e0bfff17 	ldw	r2,-4(fp)
  80f614:	10800a17 	ldw	r2,40(r2)
  80f618:	1007883a 	mov	r3,r2
  80f61c:	00800d84 	movi	r2,54
  80f620:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
  80f624:	e0bfff17 	ldw	r2,-4(fp)
  80f628:	10800a17 	ldw	r2,40(r2)
  80f62c:	10800044 	addi	r2,r2,1
  80f630:	10800023 	ldbuio	r2,0(r2)
  80f634:	10803fcc 	andi	r2,r2,255
  80f638:	10ffffcc 	andi	r3,r2,65535
  80f63c:	e0bffe17 	ldw	r2,-8(fp)
  80f640:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
  80f644:	e0bfff17 	ldw	r2,-4(fp)
  80f648:	10800a17 	ldw	r2,40(r2)
  80f64c:	1007883a 	mov	r3,r2
  80f650:	00800dc4 	movi	r2,55
  80f654:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
  80f658:	e0bfff17 	ldw	r2,-4(fp)
  80f65c:	10800a17 	ldw	r2,40(r2)
  80f660:	10800044 	addi	r2,r2,1
  80f664:	10800023 	ldbuio	r2,0(r2)
  80f668:	10803fcc 	andi	r2,r2,255
  80f66c:	1006923a 	slli	r3,r2,8
  80f670:	00804034 	movhi	r2,256
  80f674:	10bfc004 	addi	r2,r2,-256
  80f678:	1884703a 	and	r2,r3,r2
  80f67c:	e0fffe17 	ldw	r3,-8(fp)
  80f680:	18c00017 	ldw	r3,0(r3)
  80f684:	10c5883a 	add	r2,r2,r3
  80f688:	1007883a 	mov	r3,r2
  80f68c:	e0bffe17 	ldw	r2,-8(fp)
  80f690:	10c00015 	stw	r3,0(r2)

	if (*(z_axis) & 0x00008000)
  80f694:	e0bffe17 	ldw	r2,-8(fp)
  80f698:	10800017 	ldw	r2,0(r2)
  80f69c:	10a0000c 	andi	r2,r2,32768
  80f6a0:	10000626 	beq	r2,zero,80f6bc <alt_up_accelerometer_spi_read_z_axis+0xc0>
	{
		*(z_axis) |= 0xFFFF0000;
  80f6a4:	e0bffe17 	ldw	r2,-8(fp)
  80f6a8:	10800017 	ldw	r2,0(r2)
  80f6ac:	10bffff4 	orhi	r2,r2,65535
  80f6b0:	1007883a 	mov	r3,r2
  80f6b4:	e0bffe17 	ldw	r2,-8(fp)
  80f6b8:	10c00015 	stw	r3,0(r2)
	}

	return 0;
  80f6bc:	0005883a 	mov	r2,zero
}
  80f6c0:	e037883a 	mov	sp,fp
  80f6c4:	df000017 	ldw	fp,0(sp)
  80f6c8:	dec00104 	addi	sp,sp,4
  80f6cc:	f800283a 	ret

0080f6d0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  80f6d0:	defff504 	addi	sp,sp,-44
  80f6d4:	df000a15 	stw	fp,40(sp)
  80f6d8:	df000a04 	addi	fp,sp,40
  80f6dc:	e13ff915 	stw	r4,-28(fp)
  80f6e0:	e17ff815 	stw	r5,-32(fp)
  80f6e4:	e1bff715 	stw	r6,-36(fp)
  80f6e8:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  80f6ec:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
  80f6f0:	d0a72117 	ldw	r2,-25468(gp)
  
  if (alt_ticks_per_second ())
  80f6f4:	10003e26 	beq	r2,zero,80f7f0 <alt_alarm_start+0x120>
  {
    if (alarm)
  80f6f8:	e0bff917 	ldw	r2,-28(fp)
  80f6fc:	10003a26 	beq	r2,zero,80f7e8 <alt_alarm_start+0x118>
    {
      alarm->callback = callback;
  80f700:	e0bff917 	ldw	r2,-28(fp)
  80f704:	e0fff717 	ldw	r3,-36(fp)
  80f708:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  80f70c:	e0bff917 	ldw	r2,-28(fp)
  80f710:	e0fff617 	ldw	r3,-40(fp)
  80f714:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
  80f718:	0005303a 	rdctl	r2,status
  80f71c:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f720:	e0fffd17 	ldw	r3,-12(fp)
  80f724:	00bfff84 	movi	r2,-2
  80f728:	1884703a 	and	r2,r3,r2
  80f72c:	1001703a 	wrctl	status,r2
  return context;
  80f730:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
  80f734:	e0bffe15 	stw	r2,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80f738:	d0a72217 	ldw	r2,-25464(gp)
      
      current_nticks = alt_nticks();
  80f73c:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  80f740:	e0fff817 	ldw	r3,-32(fp)
  80f744:	e0bfff17 	ldw	r2,-4(fp)
  80f748:	1885883a 	add	r2,r3,r2
  80f74c:	10c00044 	addi	r3,r2,1
  80f750:	e0bff917 	ldw	r2,-28(fp)
  80f754:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  80f758:	e0bff917 	ldw	r2,-28(fp)
  80f75c:	10c00217 	ldw	r3,8(r2)
  80f760:	e0bfff17 	ldw	r2,-4(fp)
  80f764:	1880042e 	bgeu	r3,r2,80f778 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  80f768:	e0bff917 	ldw	r2,-28(fp)
  80f76c:	00c00044 	movi	r3,1
  80f770:	10c00405 	stb	r3,16(r2)
  80f774:	00000206 	br	80f780 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  80f778:	e0bff917 	ldw	r2,-28(fp)
  80f77c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  80f780:	e0bff917 	ldw	r2,-28(fp)
  80f784:	d0e00d04 	addi	r3,gp,-32716
  80f788:	e0fffb15 	stw	r3,-20(fp)
  80f78c:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80f790:	e0bffa17 	ldw	r2,-24(fp)
  80f794:	e0fffb17 	ldw	r3,-20(fp)
  80f798:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80f79c:	e0bffb17 	ldw	r2,-20(fp)
  80f7a0:	10c00017 	ldw	r3,0(r2)
  80f7a4:	e0bffa17 	ldw	r2,-24(fp)
  80f7a8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80f7ac:	e0bffb17 	ldw	r2,-20(fp)
  80f7b0:	10800017 	ldw	r2,0(r2)
  80f7b4:	e0fffa17 	ldw	r3,-24(fp)
  80f7b8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80f7bc:	e0bffb17 	ldw	r2,-20(fp)
  80f7c0:	e0fffa17 	ldw	r3,-24(fp)
  80f7c4:	10c00015 	stw	r3,0(r2)
}
  80f7c8:	0001883a 	nop
  80f7cc:	e0bffe17 	ldw	r2,-8(fp)
  80f7d0:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  80f7d4:	e0bffc17 	ldw	r2,-16(fp)
  80f7d8:	1001703a 	wrctl	status,r2
}
  80f7dc:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
  80f7e0:	0005883a 	mov	r2,zero
  80f7e4:	00000306 	br	80f7f4 <alt_alarm_start+0x124>
    }
    else
    {
      return -EINVAL;
  80f7e8:	00bffa84 	movi	r2,-22
  80f7ec:	00000106 	br	80f7f4 <alt_alarm_start+0x124>
    }
  }
  else
  {
    return -ENOTSUP;
  80f7f0:	00bfde84 	movi	r2,-134
  }
}
  80f7f4:	e037883a 	mov	sp,fp
  80f7f8:	df000017 	ldw	fp,0(sp)
  80f7fc:	dec00104 	addi	sp,sp,4
  80f800:	f800283a 	ret

0080f804 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
  80f804:	defffa04 	addi	sp,sp,-24
  80f808:	dfc00515 	stw	ra,20(sp)
  80f80c:	df000415 	stw	fp,16(sp)
  80f810:	df000404 	addi	fp,sp,16
  80f814:	e13ffc15 	stw	r4,-16(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
  80f818:	008000c4 	movi	r2,3
  80f81c:	e0bffe15 	stw	r2,-8(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
  80f820:	014003f4 	movhi	r5,15
  80f824:	29509004 	addi	r5,r5,16960
  80f828:	e13ffe17 	ldw	r4,-8(fp)
  80f82c:	080b14c0 	call	80b14c <__mulsi3>
  80f830:	100b883a 	mov	r5,r2
  80f834:	0100bef4 	movhi	r4,763
  80f838:	213c2004 	addi	r4,r4,-3968
  80f83c:	080b08c0 	call	80b08c <__udivsi3>
  big_loops = us / (INT_MAX/
  80f840:	100b883a 	mov	r5,r2
  80f844:	01200034 	movhi	r4,32768
  80f848:	213fffc4 	addi	r4,r4,-1
  80f84c:	080b08c0 	call	80b08c <__udivsi3>
  80f850:	100b883a 	mov	r5,r2
  80f854:	e13ffc17 	ldw	r4,-16(fp)
  80f858:	080b08c0 	call	80b08c <__udivsi3>
  80f85c:	e0bffd15 	stw	r2,-12(fp)

  if (big_loops)
  80f860:	e0bffd17 	ldw	r2,-12(fp)
  80f864:	10002a26 	beq	r2,zero,80f910 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
  80f868:	e03fff15 	stw	zero,-4(fp)
  80f86c:	00001706 	br	80f8cc <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
  80f870:	00a00034 	movhi	r2,32768
  80f874:	10bfffc4 	addi	r2,r2,-1
  80f878:	10bfffc4 	addi	r2,r2,-1
  80f87c:	103ffe1e 	bne	r2,zero,80f878 <alt_busy_sleep+0x74>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
  80f880:	014003f4 	movhi	r5,15
  80f884:	29509004 	addi	r5,r5,16960
  80f888:	e13ffe17 	ldw	r4,-8(fp)
  80f88c:	080b14c0 	call	80b14c <__mulsi3>
      us -= (INT_MAX/(ALT_CPU_FREQ/
  80f890:	100b883a 	mov	r5,r2
  80f894:	0100bef4 	movhi	r4,763
  80f898:	213c2004 	addi	r4,r4,-3968
  80f89c:	080b08c0 	call	80b08c <__udivsi3>
  80f8a0:	100b883a 	mov	r5,r2
  80f8a4:	01200034 	movhi	r4,32768
  80f8a8:	213fffc4 	addi	r4,r4,-1
  80f8ac:	080b08c0 	call	80b08c <__udivsi3>
  80f8b0:	1007883a 	mov	r3,r2
  80f8b4:	e0bffc17 	ldw	r2,-16(fp)
  80f8b8:	10c5c83a 	sub	r2,r2,r3
  80f8bc:	e0bffc15 	stw	r2,-16(fp)
    for(i=0;i<big_loops;i++)
  80f8c0:	e0bfff17 	ldw	r2,-4(fp)
  80f8c4:	10800044 	addi	r2,r2,1
  80f8c8:	e0bfff15 	stw	r2,-4(fp)
  80f8cc:	e0ffff17 	ldw	r3,-4(fp)
  80f8d0:	e0bffd17 	ldw	r2,-12(fp)
  80f8d4:	18bfe616 	blt	r3,r2,80f870 <alt_busy_sleep+0x6c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  80f8d8:	014003f4 	movhi	r5,15
  80f8dc:	29509004 	addi	r5,r5,16960
  80f8e0:	e13ffe17 	ldw	r4,-8(fp)
  80f8e4:	080b14c0 	call	80b14c <__mulsi3>
  80f8e8:	100b883a 	mov	r5,r2
  80f8ec:	0100bef4 	movhi	r4,763
  80f8f0:	213c2004 	addi	r4,r4,-3968
  80f8f4:	080b08c0 	call	80b08c <__udivsi3>
  80f8f8:	e17ffc17 	ldw	r5,-16(fp)
  80f8fc:	1009883a 	mov	r4,r2
  80f900:	080b14c0 	call	80b14c <__mulsi3>
    __asm__ volatile (
  80f904:	10bfffc4 	addi	r2,r2,-1
  80f908:	103ffe1e 	bne	r2,zero,80f904 <alt_busy_sleep+0x100>
  80f90c:	00000d06 	br	80f944 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  80f910:	014003f4 	movhi	r5,15
  80f914:	29509004 	addi	r5,r5,16960
  80f918:	e13ffe17 	ldw	r4,-8(fp)
  80f91c:	080b14c0 	call	80b14c <__mulsi3>
  80f920:	100b883a 	mov	r5,r2
  80f924:	0100bef4 	movhi	r4,763
  80f928:	213c2004 	addi	r4,r4,-3968
  80f92c:	080b08c0 	call	80b08c <__udivsi3>
  80f930:	e17ffc17 	ldw	r5,-16(fp)
  80f934:	1009883a 	mov	r4,r2
  80f938:	080b14c0 	call	80b14c <__mulsi3>
    __asm__ volatile (
  80f93c:	10bfffc4 	addi	r2,r2,-1
  80f940:	00bffe16 	blt	zero,r2,80f93c <alt_busy_sleep+0x138>
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
  80f944:	0005883a 	mov	r2,zero
}
  80f948:	e037883a 	mov	sp,fp
  80f94c:	dfc00117 	ldw	ra,4(sp)
  80f950:	df000017 	ldw	fp,0(sp)
  80f954:	dec00204 	addi	sp,sp,8
  80f958:	f800283a 	ret

0080f95c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  80f95c:	defffe04 	addi	sp,sp,-8
  80f960:	df000115 	stw	fp,4(sp)
  80f964:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80f968:	e03fff15 	stw	zero,-4(fp)
  80f96c:	00000506 	br	80f984 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  80f970:	e0bfff17 	ldw	r2,-4(fp)
  80f974:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80f978:	e0bfff17 	ldw	r2,-4(fp)
  80f97c:	10800804 	addi	r2,r2,32
  80f980:	e0bfff15 	stw	r2,-4(fp)
  80f984:	e0bfff17 	ldw	r2,-4(fp)
  80f988:	10820030 	cmpltui	r2,r2,2048
  80f98c:	103ff81e 	bne	r2,zero,80f970 <alt_dcache_flush_all+0x14>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  80f990:	0001883a 	nop
  80f994:	0001883a 	nop
  80f998:	e037883a 	mov	sp,fp
  80f99c:	df000017 	ldw	fp,0(sp)
  80f9a0:	dec00104 	addi	sp,sp,4
  80f9a4:	f800283a 	ret

0080f9a8 <alt_get_errno>:
{
  80f9a8:	defffe04 	addi	sp,sp,-8
  80f9ac:	dfc00115 	stw	ra,4(sp)
  80f9b0:	df000015 	stw	fp,0(sp)
  80f9b4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80f9b8:	d0a00a17 	ldw	r2,-32728(gp)
  80f9bc:	10000326 	beq	r2,zero,80f9cc <alt_get_errno+0x24>
  80f9c0:	d0a00a17 	ldw	r2,-32728(gp)
  80f9c4:	103ee83a 	callr	r2
  80f9c8:	00000106 	br	80f9d0 <alt_get_errno+0x28>
  80f9cc:	d0a71b04 	addi	r2,gp,-25492
}
  80f9d0:	e037883a 	mov	sp,fp
  80f9d4:	dfc00117 	ldw	ra,4(sp)
  80f9d8:	df000017 	ldw	fp,0(sp)
  80f9dc:	dec00204 	addi	sp,sp,8
  80f9e0:	f800283a 	ret

0080f9e4 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  80f9e4:	defffa04 	addi	sp,sp,-24
  80f9e8:	dfc00515 	stw	ra,20(sp)
  80f9ec:	df000415 	stw	fp,16(sp)
  80f9f0:	df000404 	addi	fp,sp,16
  80f9f4:	e13ffd15 	stw	r4,-12(fp)
  80f9f8:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  80f9fc:	e0bffd17 	ldw	r2,-12(fp)
  80fa00:	10000326 	beq	r2,zero,80fa10 <alt_dev_llist_insert+0x2c>
  80fa04:	e0bffd17 	ldw	r2,-12(fp)
  80fa08:	10800217 	ldw	r2,8(r2)
  80fa0c:	1000061e 	bne	r2,zero,80fa28 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  80fa10:	080f9a80 	call	80f9a8 <alt_get_errno>
  80fa14:	1007883a 	mov	r3,r2
  80fa18:	00800584 	movi	r2,22
  80fa1c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  80fa20:	00bffa84 	movi	r2,-22
  80fa24:	00001406 	br	80fa78 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  80fa28:	e0bffd17 	ldw	r2,-12(fp)
  80fa2c:	e0fffc17 	ldw	r3,-16(fp)
  80fa30:	e0ffff15 	stw	r3,-4(fp)
  80fa34:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
  80fa38:	e0bffe17 	ldw	r2,-8(fp)
  80fa3c:	e0ffff17 	ldw	r3,-4(fp)
  80fa40:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80fa44:	e0bfff17 	ldw	r2,-4(fp)
  80fa48:	10c00017 	ldw	r3,0(r2)
  80fa4c:	e0bffe17 	ldw	r2,-8(fp)
  80fa50:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
  80fa54:	e0bfff17 	ldw	r2,-4(fp)
  80fa58:	10800017 	ldw	r2,0(r2)
  80fa5c:	e0fffe17 	ldw	r3,-8(fp)
  80fa60:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80fa64:	e0bfff17 	ldw	r2,-4(fp)
  80fa68:	e0fffe17 	ldw	r3,-8(fp)
  80fa6c:	10c00015 	stw	r3,0(r2)
}
  80fa70:	0001883a 	nop

  return 0;  
  80fa74:	0005883a 	mov	r2,zero
}
  80fa78:	e037883a 	mov	sp,fp
  80fa7c:	dfc00117 	ldw	ra,4(sp)
  80fa80:	df000017 	ldw	fp,0(sp)
  80fa84:	dec00204 	addi	sp,sp,8
  80fa88:	f800283a 	ret

0080fa8c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  80fa8c:	defffd04 	addi	sp,sp,-12
  80fa90:	dfc00215 	stw	ra,8(sp)
  80fa94:	df000115 	stw	fp,4(sp)
  80fa98:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80fa9c:	00802074 	movhi	r2,129
  80faa0:	10818304 	addi	r2,r2,1548
  80faa4:	e0bfff15 	stw	r2,-4(fp)
  80faa8:	00000606 	br	80fac4 <_do_ctors+0x38>
        (*ctor) (); 
  80faac:	e0bfff17 	ldw	r2,-4(fp)
  80fab0:	10800017 	ldw	r2,0(r2)
  80fab4:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80fab8:	e0bfff17 	ldw	r2,-4(fp)
  80fabc:	10bfff04 	addi	r2,r2,-4
  80fac0:	e0bfff15 	stw	r2,-4(fp)
  80fac4:	e0ffff17 	ldw	r3,-4(fp)
  80fac8:	00802074 	movhi	r2,129
  80facc:	10818404 	addi	r2,r2,1552
  80fad0:	18bff62e 	bgeu	r3,r2,80faac <_do_ctors+0x20>
}
  80fad4:	0001883a 	nop
  80fad8:	0001883a 	nop
  80fadc:	e037883a 	mov	sp,fp
  80fae0:	dfc00117 	ldw	ra,4(sp)
  80fae4:	df000017 	ldw	fp,0(sp)
  80fae8:	dec00204 	addi	sp,sp,8
  80faec:	f800283a 	ret

0080faf0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  80faf0:	defffd04 	addi	sp,sp,-12
  80faf4:	dfc00215 	stw	ra,8(sp)
  80faf8:	df000115 	stw	fp,4(sp)
  80fafc:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80fb00:	00802074 	movhi	r2,129
  80fb04:	10818304 	addi	r2,r2,1548
  80fb08:	e0bfff15 	stw	r2,-4(fp)
  80fb0c:	00000606 	br	80fb28 <_do_dtors+0x38>
        (*dtor) (); 
  80fb10:	e0bfff17 	ldw	r2,-4(fp)
  80fb14:	10800017 	ldw	r2,0(r2)
  80fb18:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80fb1c:	e0bfff17 	ldw	r2,-4(fp)
  80fb20:	10bfff04 	addi	r2,r2,-4
  80fb24:	e0bfff15 	stw	r2,-4(fp)
  80fb28:	e0ffff17 	ldw	r3,-4(fp)
  80fb2c:	00802074 	movhi	r2,129
  80fb30:	10818404 	addi	r2,r2,1552
  80fb34:	18bff62e 	bgeu	r3,r2,80fb10 <_do_dtors+0x20>
}
  80fb38:	0001883a 	nop
  80fb3c:	0001883a 	nop
  80fb40:	e037883a 	mov	sp,fp
  80fb44:	dfc00117 	ldw	ra,4(sp)
  80fb48:	df000017 	ldw	fp,0(sp)
  80fb4c:	dec00204 	addi	sp,sp,8
  80fb50:	f800283a 	ret

0080fb54 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  80fb54:	defffa04 	addi	sp,sp,-24
  80fb58:	dfc00515 	stw	ra,20(sp)
  80fb5c:	df000415 	stw	fp,16(sp)
  80fb60:	df000404 	addi	fp,sp,16
  80fb64:	e13ffd15 	stw	r4,-12(fp)
  80fb68:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
  80fb6c:	e0bffc17 	ldw	r2,-16(fp)
  80fb70:	10800017 	ldw	r2,0(r2)
  80fb74:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  80fb78:	e13ffd17 	ldw	r4,-12(fp)
  80fb7c:	08017380 	call	801738 <strlen>
  80fb80:	10800044 	addi	r2,r2,1
  80fb84:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80fb88:	00000d06 	br	80fbc0 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  80fb8c:	e0bfff17 	ldw	r2,-4(fp)
  80fb90:	10800217 	ldw	r2,8(r2)
  80fb94:	e0fffe17 	ldw	r3,-8(fp)
  80fb98:	180d883a 	mov	r6,r3
  80fb9c:	e17ffd17 	ldw	r5,-12(fp)
  80fba0:	1009883a 	mov	r4,r2
  80fba4:	08103e80 	call	8103e8 <memcmp>
  80fba8:	1000021e 	bne	r2,zero,80fbb4 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  80fbac:	e0bfff17 	ldw	r2,-4(fp)
  80fbb0:	00000706 	br	80fbd0 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  80fbb4:	e0bfff17 	ldw	r2,-4(fp)
  80fbb8:	10800017 	ldw	r2,0(r2)
  80fbbc:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
  80fbc0:	e0ffff17 	ldw	r3,-4(fp)
  80fbc4:	e0bffc17 	ldw	r2,-16(fp)
  80fbc8:	18bff01e 	bne	r3,r2,80fb8c <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
  80fbcc:	0005883a 	mov	r2,zero
}
  80fbd0:	e037883a 	mov	sp,fp
  80fbd4:	dfc00117 	ldw	ra,4(sp)
  80fbd8:	df000017 	ldw	fp,0(sp)
  80fbdc:	dec00204 	addi	sp,sp,8
  80fbe0:	f800283a 	ret

0080fbe4 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  80fbe4:	defffb04 	addi	sp,sp,-20
  80fbe8:	dfc00415 	stw	ra,16(sp)
  80fbec:	df000315 	stw	fp,12(sp)
  80fbf0:	df000304 	addi	fp,sp,12
  80fbf4:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  80fbf8:	d0a00517 	ldw	r2,-32748(gp)
  80fbfc:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  80fc00:	00003106 	br	80fcc8 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  80fc04:	e0bfff17 	ldw	r2,-4(fp)
  80fc08:	10800217 	ldw	r2,8(r2)
  80fc0c:	1009883a 	mov	r4,r2
  80fc10:	08017380 	call	801738 <strlen>
  80fc14:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  80fc18:	e0bfff17 	ldw	r2,-4(fp)
  80fc1c:	10c00217 	ldw	r3,8(r2)
  80fc20:	e0bffe17 	ldw	r2,-8(fp)
  80fc24:	10bfffc4 	addi	r2,r2,-1
  80fc28:	1885883a 	add	r2,r3,r2
  80fc2c:	10800003 	ldbu	r2,0(r2)
  80fc30:	10803fcc 	andi	r2,r2,255
  80fc34:	1080201c 	xori	r2,r2,128
  80fc38:	10bfe004 	addi	r2,r2,-128
  80fc3c:	10800bd8 	cmpnei	r2,r2,47
  80fc40:	1000031e 	bne	r2,zero,80fc50 <alt_find_file+0x6c>
    {
      len -= 1;
  80fc44:	e0bffe17 	ldw	r2,-8(fp)
  80fc48:	10bfffc4 	addi	r2,r2,-1
  80fc4c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  80fc50:	e0bffe17 	ldw	r2,-8(fp)
  80fc54:	e0fffd17 	ldw	r3,-12(fp)
  80fc58:	1885883a 	add	r2,r3,r2
  80fc5c:	10800003 	ldbu	r2,0(r2)
  80fc60:	10803fcc 	andi	r2,r2,255
  80fc64:	1080201c 	xori	r2,r2,128
  80fc68:	10bfe004 	addi	r2,r2,-128
  80fc6c:	10800be0 	cmpeqi	r2,r2,47
  80fc70:	1000081e 	bne	r2,zero,80fc94 <alt_find_file+0xb0>
  80fc74:	e0bffe17 	ldw	r2,-8(fp)
  80fc78:	e0fffd17 	ldw	r3,-12(fp)
  80fc7c:	1885883a 	add	r2,r3,r2
  80fc80:	10800003 	ldbu	r2,0(r2)
  80fc84:	10803fcc 	andi	r2,r2,255
  80fc88:	1080201c 	xori	r2,r2,128
  80fc8c:	10bfe004 	addi	r2,r2,-128
  80fc90:	10000a1e 	bne	r2,zero,80fcbc <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  80fc94:	e0bfff17 	ldw	r2,-4(fp)
  80fc98:	10800217 	ldw	r2,8(r2)
  80fc9c:	e0fffe17 	ldw	r3,-8(fp)
  80fca0:	180d883a 	mov	r6,r3
  80fca4:	e17ffd17 	ldw	r5,-12(fp)
  80fca8:	1009883a 	mov	r4,r2
  80fcac:	08103e80 	call	8103e8 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
  80fcb0:	1000021e 	bne	r2,zero,80fcbc <alt_find_file+0xd8>
    {
      /* match found */

      return next;
  80fcb4:	e0bfff17 	ldw	r2,-4(fp)
  80fcb8:	00000706 	br	80fcd8 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  80fcbc:	e0bfff17 	ldw	r2,-4(fp)
  80fcc0:	10800017 	ldw	r2,0(r2)
  80fcc4:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
  80fcc8:	e0ffff17 	ldw	r3,-4(fp)
  80fccc:	d0a00504 	addi	r2,gp,-32748
  80fcd0:	18bfcc1e 	bne	r3,r2,80fc04 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
  80fcd4:	0005883a 	mov	r2,zero
}
  80fcd8:	e037883a 	mov	sp,fp
  80fcdc:	dfc00117 	ldw	ra,4(sp)
  80fce0:	df000017 	ldw	fp,0(sp)
  80fce4:	dec00204 	addi	sp,sp,8
  80fce8:	f800283a 	ret

0080fcec <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  80fcec:	defffc04 	addi	sp,sp,-16
  80fcf0:	df000315 	stw	fp,12(sp)
  80fcf4:	df000304 	addi	fp,sp,12
  80fcf8:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
  80fcfc:	00bffa04 	movi	r2,-24
  80fd00:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  80fd04:	e03fff15 	stw	zero,-4(fp)
  80fd08:	00001d06 	br	80fd80 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
  80fd0c:	e0ffff17 	ldw	r3,-4(fp)
  80fd10:	1805883a 	mov	r2,r3
  80fd14:	1085883a 	add	r2,r2,r2
  80fd18:	10c5883a 	add	r2,r2,r3
  80fd1c:	100490ba 	slli	r2,r2,2
  80fd20:	00c02074 	movhi	r3,129
  80fd24:	10c7883a 	add	r3,r2,r3
  80fd28:	1885a717 	ldw	r2,5788(r3)
  80fd2c:	1000111e 	bne	r2,zero,80fd74 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
  80fd30:	e0ffff17 	ldw	r3,-4(fp)
  80fd34:	1805883a 	mov	r2,r3
  80fd38:	1085883a 	add	r2,r2,r2
  80fd3c:	10c5883a 	add	r2,r2,r3
  80fd40:	100490ba 	slli	r2,r2,2
  80fd44:	e13ffd17 	ldw	r4,-12(fp)
  80fd48:	00c02074 	movhi	r3,129
  80fd4c:	10c7883a 	add	r3,r2,r3
  80fd50:	1905a715 	stw	r4,5788(r3)
      if (i > alt_max_fd)
  80fd54:	d0e00917 	ldw	r3,-32732(gp)
  80fd58:	e0bfff17 	ldw	r2,-4(fp)
  80fd5c:	1880020e 	bge	r3,r2,80fd68 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
  80fd60:	e0bfff17 	ldw	r2,-4(fp)
  80fd64:	d0a00915 	stw	r2,-32732(gp)
      }
      rc = i;
  80fd68:	e0bfff17 	ldw	r2,-4(fp)
  80fd6c:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  80fd70:	00000706 	br	80fd90 <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
  80fd74:	e0bfff17 	ldw	r2,-4(fp)
  80fd78:	10800044 	addi	r2,r2,1
  80fd7c:	e0bfff15 	stw	r2,-4(fp)
  80fd80:	e0bfff17 	ldw	r2,-4(fp)
  80fd84:	10800810 	cmplti	r2,r2,32
  80fd88:	103fe01e 	bne	r2,zero,80fd0c <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
  80fd8c:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  80fd90:	e0bffe17 	ldw	r2,-8(fp)
}
  80fd94:	e037883a 	mov	sp,fp
  80fd98:	df000017 	ldw	fp,0(sp)
  80fd9c:	dec00104 	addi	sp,sp,4
  80fda0:	f800283a 	ret

0080fda4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  80fda4:	defffe04 	addi	sp,sp,-8
  80fda8:	dfc00115 	stw	ra,4(sp)
  80fdac:	df000015 	stw	fp,0(sp)
  80fdb0:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  80fdb4:	01440004 	movi	r5,4096
  80fdb8:	0009883a 	mov	r4,zero
  80fdbc:	08102780 	call	810278 <alt_icache_flush>
#endif
}
  80fdc0:	0001883a 	nop
  80fdc4:	e037883a 	mov	sp,fp
  80fdc8:	dfc00117 	ldw	ra,4(sp)
  80fdcc:	df000017 	ldw	fp,0(sp)
  80fdd0:	dec00204 	addi	sp,sp,8
  80fdd4:	f800283a 	ret

0080fdd8 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  80fdd8:	defff904 	addi	sp,sp,-28
  80fddc:	dfc00615 	stw	ra,24(sp)
  80fde0:	df000515 	stw	fp,20(sp)
  80fde4:	df000504 	addi	fp,sp,20
  80fde8:	e13ffe15 	stw	r4,-8(fp)
  80fdec:	e17ffd15 	stw	r5,-12(fp)
  80fdf0:	e1bffc15 	stw	r6,-16(fp)
  80fdf4:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
  80fdf8:	e1bffb17 	ldw	r6,-20(fp)
  80fdfc:	e17ffc17 	ldw	r5,-16(fp)
  80fe00:	e13ffd17 	ldw	r4,-12(fp)
  80fe04:	080e1800 	call	80e180 <open>
  80fe08:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
  80fe0c:	e0bfff17 	ldw	r2,-4(fp)
  80fe10:	10002016 	blt	r2,zero,80fe94 <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
  80fe14:	e0ffff17 	ldw	r3,-4(fp)
  80fe18:	1805883a 	mov	r2,r3
  80fe1c:	1085883a 	add	r2,r2,r2
  80fe20:	10c5883a 	add	r2,r2,r3
  80fe24:	100490ba 	slli	r2,r2,2
  80fe28:	00c02074 	movhi	r3,129
  80fe2c:	10c7883a 	add	r3,r2,r3
  80fe30:	18c5a717 	ldw	r3,5788(r3)
  80fe34:	e0bffe17 	ldw	r2,-8(fp)
  80fe38:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  80fe3c:	e0ffff17 	ldw	r3,-4(fp)
  80fe40:	1805883a 	mov	r2,r3
  80fe44:	1085883a 	add	r2,r2,r2
  80fe48:	10c5883a 	add	r2,r2,r3
  80fe4c:	100490ba 	slli	r2,r2,2
  80fe50:	00c02074 	movhi	r3,129
  80fe54:	10c7883a 	add	r3,r2,r3
  80fe58:	18c5a817 	ldw	r3,5792(r3)
  80fe5c:	e0bffe17 	ldw	r2,-8(fp)
  80fe60:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  80fe64:	e0ffff17 	ldw	r3,-4(fp)
  80fe68:	1805883a 	mov	r2,r3
  80fe6c:	1085883a 	add	r2,r2,r2
  80fe70:	10c5883a 	add	r2,r2,r3
  80fe74:	100490ba 	slli	r2,r2,2
  80fe78:	00c02074 	movhi	r3,129
  80fe7c:	10c7883a 	add	r3,r2,r3
  80fe80:	18c5a917 	ldw	r3,5796(r3)
  80fe84:	e0bffe17 	ldw	r2,-8(fp)
  80fe88:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  80fe8c:	e13fff17 	ldw	r4,-4(fp)
  80fe90:	080e4240 	call	80e424 <alt_release_fd>
  }
} 
  80fe94:	0001883a 	nop
  80fe98:	e037883a 	mov	sp,fp
  80fe9c:	dfc00117 	ldw	ra,4(sp)
  80fea0:	df000017 	ldw	fp,0(sp)
  80fea4:	dec00204 	addi	sp,sp,8
  80fea8:	f800283a 	ret

0080feac <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  80feac:	defffb04 	addi	sp,sp,-20
  80feb0:	dfc00415 	stw	ra,16(sp)
  80feb4:	df000315 	stw	fp,12(sp)
  80feb8:	df000304 	addi	fp,sp,12
  80febc:	e13fff15 	stw	r4,-4(fp)
  80fec0:	e17ffe15 	stw	r5,-8(fp)
  80fec4:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  80fec8:	01c07fc4 	movi	r7,511
  80fecc:	01800044 	movi	r6,1
  80fed0:	e17fff17 	ldw	r5,-4(fp)
  80fed4:	01002074 	movhi	r4,129
  80fed8:	2105aa04 	addi	r4,r4,5800
  80fedc:	080fdd80 	call	80fdd8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  80fee0:	01c07fc4 	movi	r7,511
  80fee4:	000d883a 	mov	r6,zero
  80fee8:	e17ffe17 	ldw	r5,-8(fp)
  80feec:	01002074 	movhi	r4,129
  80fef0:	2105a704 	addi	r4,r4,5788
  80fef4:	080fdd80 	call	80fdd8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  80fef8:	01c07fc4 	movi	r7,511
  80fefc:	01800044 	movi	r6,1
  80ff00:	e17ffd17 	ldw	r5,-12(fp)
  80ff04:	01002074 	movhi	r4,129
  80ff08:	2105ad04 	addi	r4,r4,5812
  80ff0c:	080fdd80 	call	80fdd8 <alt_open_fd>
}  
  80ff10:	0001883a 	nop
  80ff14:	e037883a 	mov	sp,fp
  80ff18:	dfc00117 	ldw	ra,4(sp)
  80ff1c:	df000017 	ldw	fp,0(sp)
  80ff20:	dec00204 	addi	sp,sp,8
  80ff24:	f800283a 	ret

0080ff28 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
  80ff28:	defff004 	addi	sp,sp,-64
  80ff2c:	df000f15 	stw	fp,60(sp)
  80ff30:	df000f04 	addi	fp,sp,60
  80ff34:	e13ff315 	stw	r4,-52(fp)
  80ff38:	e17ff215 	stw	r5,-56(fp)
  80ff3c:	e1bff115 	stw	r6,-60(fp)
  int rc = -EINVAL;  
  80ff40:	00bffa84 	movi	r2,-22
  80ff44:	e0bfff15 	stw	r2,-4(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  80ff48:	e0bff317 	ldw	r2,-52(fp)
  80ff4c:	10800828 	cmpgeui	r2,r2,32
  80ff50:	1000501e 	bne	r2,zero,810094 <alt_irq_register+0x16c>
  NIOS2_READ_STATUS (context);
  80ff54:	0005303a 	rdctl	r2,status
  80ff58:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ff5c:	e0fffd17 	ldw	r3,-12(fp)
  80ff60:	00bfff84 	movi	r2,-2
  80ff64:	1884703a 	and	r2,r3,r2
  80ff68:	1001703a 	wrctl	status,r2
  return context;
  80ff6c:	e0bffd17 	ldw	r2,-12(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
  80ff70:	e0bffe15 	stw	r2,-8(fp)

    alt_irq[id].handler = handler;
  80ff74:	e0bff317 	ldw	r2,-52(fp)
  80ff78:	100890fa 	slli	r4,r2,3
  80ff7c:	e0fff117 	ldw	r3,-60(fp)
  80ff80:	00802074 	movhi	r2,129
  80ff84:	2085883a 	add	r2,r4,r2
  80ff88:	10d15815 	stw	r3,17760(r2)
    alt_irq[id].context = context;
  80ff8c:	e0bff317 	ldw	r2,-52(fp)
  80ff90:	100890fa 	slli	r4,r2,3
  80ff94:	e0fff217 	ldw	r3,-56(fp)
  80ff98:	00802074 	movhi	r2,129
  80ff9c:	2085883a 	add	r2,r4,r2
  80ffa0:	10d15915 	stw	r3,17764(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
  80ffa4:	e0bff117 	ldw	r2,-60(fp)
  80ffa8:	10001a26 	beq	r2,zero,810014 <alt_irq_register+0xec>
  80ffac:	e0bff317 	ldw	r2,-52(fp)
  80ffb0:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_READ_STATUS (context);
  80ffb4:	0005303a 	rdctl	r2,status
  80ffb8:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ffbc:	e0fffb17 	ldw	r3,-20(fp)
  80ffc0:	00bfff84 	movi	r2,-2
  80ffc4:	1884703a 	and	r2,r3,r2
  80ffc8:	1001703a 	wrctl	status,r2
  return context;
  80ffcc:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80ffd0:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active |= (1 << id);
  80ffd4:	00c00044 	movi	r3,1
  80ffd8:	e0bffc17 	ldw	r2,-16(fp)
  80ffdc:	1884983a 	sll	r2,r3,r2
  80ffe0:	1007883a 	mov	r3,r2
  80ffe4:	d0a72017 	ldw	r2,-25472(gp)
  80ffe8:	1884b03a 	or	r2,r3,r2
  80ffec:	d0a72015 	stw	r2,-25472(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80fff0:	d0a72017 	ldw	r2,-25472(gp)
  80fff4:	100170fa 	wrctl	ienable,r2
  80fff8:	e0bffa17 	ldw	r2,-24(fp)
  80fffc:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context);
  810000:	e0bff917 	ldw	r2,-28(fp)
  810004:	1001703a 	wrctl	status,r2
}
  810008:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
  81000c:	0005883a 	mov	r2,zero
  810010:	00001a06 	br	81007c <alt_irq_register+0x154>
  810014:	e0bff317 	ldw	r2,-52(fp)
  810018:	e0bff815 	stw	r2,-32(fp)
  NIOS2_READ_STATUS (context);
  81001c:	0005303a 	rdctl	r2,status
  810020:	e0bff715 	stw	r2,-36(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810024:	e0fff717 	ldw	r3,-36(fp)
  810028:	00bfff84 	movi	r2,-2
  81002c:	1884703a 	and	r2,r3,r2
  810030:	1001703a 	wrctl	status,r2
  return context;
  810034:	e0bff717 	ldw	r2,-36(fp)
  status = alt_irq_disable_all ();
  810038:	e0bff615 	stw	r2,-40(fp)
  alt_irq_active &= ~(1 << id);
  81003c:	00c00044 	movi	r3,1
  810040:	e0bff817 	ldw	r2,-32(fp)
  810044:	1884983a 	sll	r2,r3,r2
  810048:	0084303a 	nor	r2,zero,r2
  81004c:	1007883a 	mov	r3,r2
  810050:	d0a72017 	ldw	r2,-25472(gp)
  810054:	1884703a 	and	r2,r3,r2
  810058:	d0a72015 	stw	r2,-25472(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  81005c:	d0a72017 	ldw	r2,-25472(gp)
  810060:	100170fa 	wrctl	ienable,r2
  810064:	e0bff617 	ldw	r2,-40(fp)
  810068:	e0bff515 	stw	r2,-44(fp)
  NIOS2_WRITE_STATUS (context);
  81006c:	e0bff517 	ldw	r2,-44(fp)
  810070:	1001703a 	wrctl	status,r2
}
  810074:	0001883a 	nop
  return 0;
  810078:	0005883a 	mov	r2,zero
  81007c:	e0bfff15 	stw	r2,-4(fp)
  810080:	e0bffe17 	ldw	r2,-8(fp)
  810084:	e0bff415 	stw	r2,-48(fp)
  NIOS2_WRITE_STATUS (context);
  810088:	e0bff417 	ldw	r2,-48(fp)
  81008c:	1001703a 	wrctl	status,r2
}
  810090:	0001883a 	nop

    alt_irq_enable_all(status);
  }
  return rc; 
  810094:	e0bfff17 	ldw	r2,-4(fp)
}
  810098:	e037883a 	mov	sp,fp
  81009c:	df000017 	ldw	fp,0(sp)
  8100a0:	dec00104 	addi	sp,sp,4
  8100a4:	f800283a 	ret

008100a8 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  8100a8:	defffa04 	addi	sp,sp,-24
  8100ac:	df000515 	stw	fp,20(sp)
  8100b0:	df000504 	addi	fp,sp,20
  8100b4:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
  8100b8:	0005303a 	rdctl	r2,status
  8100bc:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8100c0:	e0fffc17 	ldw	r3,-16(fp)
  8100c4:	00bfff84 	movi	r2,-2
  8100c8:	1884703a 	and	r2,r3,r2
  8100cc:	1001703a 	wrctl	status,r2
  return context;
  8100d0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  8100d4:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
  8100d8:	e0bffb17 	ldw	r2,-20(fp)
  8100dc:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  8100e0:	e0bffd17 	ldw	r2,-12(fp)
  8100e4:	10800017 	ldw	r2,0(r2)
  8100e8:	e0fffd17 	ldw	r3,-12(fp)
  8100ec:	18c00117 	ldw	r3,4(r3)
  8100f0:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  8100f4:	e0bffd17 	ldw	r2,-12(fp)
  8100f8:	10800117 	ldw	r2,4(r2)
  8100fc:	e0fffd17 	ldw	r3,-12(fp)
  810100:	18c00017 	ldw	r3,0(r3)
  810104:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  810108:	e0bffd17 	ldw	r2,-12(fp)
  81010c:	e0fffd17 	ldw	r3,-12(fp)
  810110:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  810114:	e0bffd17 	ldw	r2,-12(fp)
  810118:	e0fffd17 	ldw	r3,-12(fp)
  81011c:	10c00015 	stw	r3,0(r2)
} 
  810120:	0001883a 	nop
  810124:	e0bfff17 	ldw	r2,-4(fp)
  810128:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
  81012c:	e0bffe17 	ldw	r2,-8(fp)
  810130:	1001703a 	wrctl	status,r2
}
  810134:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
  810138:	0001883a 	nop
  81013c:	e037883a 	mov	sp,fp
  810140:	df000017 	ldw	fp,0(sp)
  810144:	dec00104 	addi	sp,sp,4
  810148:	f800283a 	ret

0081014c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  81014c:	defffb04 	addi	sp,sp,-20
  810150:	dfc00415 	stw	ra,16(sp)
  810154:	df000315 	stw	fp,12(sp)
  810158:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  81015c:	d0a00d17 	ldw	r2,-32716(gp)
  810160:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  810164:	d0a72217 	ldw	r2,-25464(gp)
  810168:	10800044 	addi	r2,r2,1
  81016c:	d0a72215 	stw	r2,-25464(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  810170:	00002e06 	br	81022c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  810174:	e0bfff17 	ldw	r2,-4(fp)
  810178:	10800017 	ldw	r2,0(r2)
  81017c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  810180:	e0bfff17 	ldw	r2,-4(fp)
  810184:	10800403 	ldbu	r2,16(r2)
  810188:	10803fcc 	andi	r2,r2,255
  81018c:	10000426 	beq	r2,zero,8101a0 <alt_tick+0x54>
  810190:	d0a72217 	ldw	r2,-25464(gp)
  810194:	1000021e 	bne	r2,zero,8101a0 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  810198:	e0bfff17 	ldw	r2,-4(fp)
  81019c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  8101a0:	e0bfff17 	ldw	r2,-4(fp)
  8101a4:	10800217 	ldw	r2,8(r2)
  8101a8:	d0e72217 	ldw	r3,-25464(gp)
  8101ac:	18801d36 	bltu	r3,r2,810224 <alt_tick+0xd8>
  8101b0:	e0bfff17 	ldw	r2,-4(fp)
  8101b4:	10800403 	ldbu	r2,16(r2)
  8101b8:	10803fcc 	andi	r2,r2,255
  8101bc:	1000191e 	bne	r2,zero,810224 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  8101c0:	e0bfff17 	ldw	r2,-4(fp)
  8101c4:	10800317 	ldw	r2,12(r2)
  8101c8:	e0ffff17 	ldw	r3,-4(fp)
  8101cc:	18c00517 	ldw	r3,20(r3)
  8101d0:	1809883a 	mov	r4,r3
  8101d4:	103ee83a 	callr	r2
  8101d8:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  8101dc:	e0bffd17 	ldw	r2,-12(fp)
  8101e0:	1000031e 	bne	r2,zero,8101f0 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  8101e4:	e13fff17 	ldw	r4,-4(fp)
  8101e8:	08100a80 	call	8100a8 <alt_alarm_stop>
  8101ec:	00000d06 	br	810224 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  8101f0:	e0bfff17 	ldw	r2,-4(fp)
  8101f4:	10c00217 	ldw	r3,8(r2)
  8101f8:	e0bffd17 	ldw	r2,-12(fp)
  8101fc:	1887883a 	add	r3,r3,r2
  810200:	e0bfff17 	ldw	r2,-4(fp)
  810204:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  810208:	e0bfff17 	ldw	r2,-4(fp)
  81020c:	10c00217 	ldw	r3,8(r2)
  810210:	d0a72217 	ldw	r2,-25464(gp)
  810214:	1880032e 	bgeu	r3,r2,810224 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  810218:	e0bfff17 	ldw	r2,-4(fp)
  81021c:	00c00044 	movi	r3,1
  810220:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  810224:	e0bffe17 	ldw	r2,-8(fp)
  810228:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
  81022c:	e0ffff17 	ldw	r3,-4(fp)
  810230:	d0a00d04 	addi	r2,gp,-32716
  810234:	18bfcf1e 	bne	r3,r2,810174 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  810238:	0001883a 	nop
}
  81023c:	0001883a 	nop
  810240:	e037883a 	mov	sp,fp
  810244:	dfc00117 	ldw	ra,4(sp)
  810248:	df000017 	ldw	fp,0(sp)
  81024c:	dec00204 	addi	sp,sp,8
  810250:	f800283a 	ret

00810254 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  810254:	deffff04 	addi	sp,sp,-4
  810258:	df000015 	stw	fp,0(sp)
  81025c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  810260:	000170fa 	wrctl	ienable,zero
}
  810264:	0001883a 	nop
  810268:	e037883a 	mov	sp,fp
  81026c:	df000017 	ldw	fp,0(sp)
  810270:	dec00104 	addi	sp,sp,4
  810274:	f800283a 	ret

00810278 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  810278:	defffb04 	addi	sp,sp,-20
  81027c:	df000415 	stw	fp,16(sp)
  810280:	df000404 	addi	fp,sp,16
  810284:	e13ffd15 	stw	r4,-12(fp)
  810288:	e17ffc15 	stw	r5,-16(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  81028c:	e0bffc17 	ldw	r2,-16(fp)
  810290:	10840070 	cmpltui	r2,r2,4097
  810294:	1000021e 	bne	r2,zero,8102a0 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  810298:	00840004 	movi	r2,4096
  81029c:	e0bffc15 	stw	r2,-16(fp)
  }

  end = ((char*) start) + len;
  8102a0:	e0fffd17 	ldw	r3,-12(fp)
  8102a4:	e0bffc17 	ldw	r2,-16(fp)
  8102a8:	1885883a 	add	r2,r3,r2
  8102ac:	e0bffe15 	stw	r2,-8(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  8102b0:	e0bffd17 	ldw	r2,-12(fp)
  8102b4:	e0bfff15 	stw	r2,-4(fp)
  8102b8:	00000506 	br	8102d0 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  8102bc:	e0bfff17 	ldw	r2,-4(fp)
  8102c0:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  8102c4:	e0bfff17 	ldw	r2,-4(fp)
  8102c8:	10800804 	addi	r2,r2,32
  8102cc:	e0bfff15 	stw	r2,-4(fp)
  8102d0:	e0ffff17 	ldw	r3,-4(fp)
  8102d4:	e0bffe17 	ldw	r2,-8(fp)
  8102d8:	18bff836 	bltu	r3,r2,8102bc <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  8102dc:	e0bffd17 	ldw	r2,-12(fp)
  8102e0:	108007cc 	andi	r2,r2,31
  8102e4:	10000226 	beq	r2,zero,8102f0 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  8102e8:	e0bfff17 	ldw	r2,-4(fp)
  8102ec:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  8102f0:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  8102f4:	0001883a 	nop
  8102f8:	e037883a 	mov	sp,fp
  8102fc:	df000017 	ldw	fp,0(sp)
  810300:	dec00104 	addi	sp,sp,4
  810304:	f800283a 	ret

00810308 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  810308:	defffe04 	addi	sp,sp,-8
  81030c:	df000115 	stw	fp,4(sp)
  810310:	df000104 	addi	fp,sp,4
  810314:	e13fff15 	stw	r4,-4(fp)
  810318:	e0bfff17 	ldw	r2,-4(fp)
  81031c:	10bffe84 	addi	r2,r2,-6
  810320:	10c00428 	cmpgeui	r3,r2,16
  810324:	1800191e 	bne	r3,zero,81038c <alt_exception_cause_generated_bad_addr+0x84>
  810328:	100690ba 	slli	r3,r2,2
  81032c:	00802074 	movhi	r2,129
  810330:	1885883a 	add	r2,r3,r2
  810334:	1080cf17 	ldw	r2,828(r2)
  810338:	1000683a 	jmp	r2
  81033c:	0081037c 	xorhi	r2,zero,1037
  810340:	0081037c 	xorhi	r2,zero,1037
  810344:	0081038c 	andi	r2,zero,1038
  810348:	0081038c 	andi	r2,zero,1038
  81034c:	0081038c 	andi	r2,zero,1038
  810350:	0081037c 	xorhi	r2,zero,1037
  810354:	00810384 	movi	r2,1038
  810358:	0081038c 	andi	r2,zero,1038
  81035c:	0081037c 	xorhi	r2,zero,1037
  810360:	0081037c 	xorhi	r2,zero,1037
  810364:	0081038c 	andi	r2,zero,1038
  810368:	0081037c 	xorhi	r2,zero,1037
  81036c:	00810384 	movi	r2,1038
  810370:	0081038c 	andi	r2,zero,1038
  810374:	0081038c 	andi	r2,zero,1038
  810378:	0081037c 	xorhi	r2,zero,1037
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  81037c:	00800044 	movi	r2,1
  810380:	00000306 	br	810390 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  810384:	0005883a 	mov	r2,zero
  810388:	00000106 	br	810390 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
  81038c:	0005883a 	mov	r2,zero
  }
}
  810390:	e037883a 	mov	sp,fp
  810394:	df000017 	ldw	fp,0(sp)
  810398:	dec00104 	addi	sp,sp,4
  81039c:	f800283a 	ret

008103a0 <atexit>:
  8103a0:	200b883a 	mov	r5,r4
  8103a4:	000f883a 	mov	r7,zero
  8103a8:	000d883a 	mov	r6,zero
  8103ac:	0009883a 	mov	r4,zero
  8103b0:	08104601 	jmpi	810460 <__register_exitproc>

008103b4 <exit>:
  8103b4:	defffe04 	addi	sp,sp,-8
  8103b8:	000b883a 	mov	r5,zero
  8103bc:	dc000015 	stw	r16,0(sp)
  8103c0:	dfc00115 	stw	ra,4(sp)
  8103c4:	2021883a 	mov	r16,r4
  8103c8:	08104f00 	call	8104f0 <__call_exitprocs>
  8103cc:	00802074 	movhi	r2,129
  8103d0:	110a2b17 	ldw	r4,10412(r2)
  8103d4:	20800f17 	ldw	r2,60(r4)
  8103d8:	10000126 	beq	r2,zero,8103e0 <exit+0x2c>
  8103dc:	103ee83a 	callr	r2
  8103e0:	8009883a 	mov	r4,r16
  8103e4:	080d9f80 	call	80d9f8 <_exit>

008103e8 <memcmp>:
  8103e8:	30800130 	cmpltui	r2,r6,4
  8103ec:	10000b1e 	bne	r2,zero,81041c <memcmp+0x34>
  8103f0:	2144b03a 	or	r2,r4,r5
  8103f4:	108000cc 	andi	r2,r2,3
  8103f8:	1000171e 	bne	r2,zero,810458 <memcmp+0x70>
  8103fc:	20c00017 	ldw	r3,0(r4)
  810400:	28800017 	ldw	r2,0(r5)
  810404:	1880141e 	bne	r3,r2,810458 <memcmp+0x70>
  810408:	31bfff04 	addi	r6,r6,-4
  81040c:	30800128 	cmpgeui	r2,r6,4
  810410:	21000104 	addi	r4,r4,4
  810414:	29400104 	addi	r5,r5,4
  810418:	103ff81e 	bne	r2,zero,8103fc <memcmp+0x14>
  81041c:	30bfffc4 	addi	r2,r6,-1
  810420:	30000b26 	beq	r6,zero,810450 <memcmp+0x68>
  810424:	11800044 	addi	r6,r2,1
  810428:	218d883a 	add	r6,r4,r6
  81042c:	00000106 	br	810434 <memcmp+0x4c>
  810430:	21800726 	beq	r4,r6,810450 <memcmp+0x68>
  810434:	20800003 	ldbu	r2,0(r4)
  810438:	28c00003 	ldbu	r3,0(r5)
  81043c:	21000044 	addi	r4,r4,1
  810440:	29400044 	addi	r5,r5,1
  810444:	10fffa26 	beq	r2,r3,810430 <memcmp+0x48>
  810448:	10c5c83a 	sub	r2,r2,r3
  81044c:	f800283a 	ret
  810450:	0005883a 	mov	r2,zero
  810454:	f800283a 	ret
  810458:	30bfffc4 	addi	r2,r6,-1
  81045c:	003ff106 	br	810424 <memcmp+0x3c>

00810460 <__register_exitproc>:
  810460:	00802074 	movhi	r2,129
  810464:	10ca2b17 	ldw	r3,10412(r2)
  810468:	18805217 	ldw	r2,328(r3)
  81046c:	10001726 	beq	r2,zero,8104cc <__register_exitproc+0x6c>
  810470:	10c00117 	ldw	r3,4(r2)
  810474:	1a000808 	cmpgei	r8,r3,32
  810478:	40001b1e 	bne	r8,zero,8104e8 <__register_exitproc+0x88>
  81047c:	20000b26 	beq	r4,zero,8104ac <__register_exitproc+0x4c>
  810480:	181090ba 	slli	r8,r3,2
  810484:	02400044 	movi	r9,1
  810488:	48d2983a 	sll	r9,r9,r3
  81048c:	1211883a 	add	r8,r2,r8
  810490:	41802215 	stw	r6,136(r8)
  810494:	11806217 	ldw	r6,392(r2)
  810498:	21000098 	cmpnei	r4,r4,2
  81049c:	324cb03a 	or	r6,r6,r9
  8104a0:	11806215 	stw	r6,392(r2)
  8104a4:	41c04215 	stw	r7,264(r8)
  8104a8:	20000b26 	beq	r4,zero,8104d8 <__register_exitproc+0x78>
  8104ac:	19000084 	addi	r4,r3,2
  8104b0:	200890ba 	slli	r4,r4,2
  8104b4:	18c00044 	addi	r3,r3,1
  8104b8:	10c00115 	stw	r3,4(r2)
  8104bc:	1105883a 	add	r2,r2,r4
  8104c0:	11400015 	stw	r5,0(r2)
  8104c4:	0005883a 	mov	r2,zero
  8104c8:	f800283a 	ret
  8104cc:	18805304 	addi	r2,r3,332
  8104d0:	18805215 	stw	r2,328(r3)
  8104d4:	003fe606 	br	810470 <__register_exitproc+0x10>
  8104d8:	11006317 	ldw	r4,396(r2)
  8104dc:	2252b03a 	or	r9,r4,r9
  8104e0:	12406315 	stw	r9,396(r2)
  8104e4:	003ff106 	br	8104ac <__register_exitproc+0x4c>
  8104e8:	00bfffc4 	movi	r2,-1
  8104ec:	f800283a 	ret

008104f0 <__call_exitprocs>:
  8104f0:	defff704 	addi	sp,sp,-36
  8104f4:	00802074 	movhi	r2,129
  8104f8:	dcc00315 	stw	r19,12(sp)
  8104fc:	14ca2b17 	ldw	r19,10412(r2)
  810500:	dc800215 	stw	r18,8(sp)
  810504:	dfc00815 	stw	ra,32(sp)
  810508:	9c805217 	ldw	r18,328(r19)
  81050c:	ddc00715 	stw	r23,28(sp)
  810510:	dd800615 	stw	r22,24(sp)
  810514:	dd400515 	stw	r21,20(sp)
  810518:	dd000415 	stw	r20,16(sp)
  81051c:	dc400115 	stw	r17,4(sp)
  810520:	dc000015 	stw	r16,0(sp)
  810524:	90001026 	beq	r18,zero,810568 <__call_exitprocs+0x78>
  810528:	202b883a 	mov	r21,r4
  81052c:	282d883a 	mov	r22,r5
  810530:	05000044 	movi	r20,1
  810534:	94000117 	ldw	r16,4(r18)
  810538:	847fffc4 	addi	r17,r16,-1
  81053c:	88000a16 	blt	r17,zero,810568 <__call_exitprocs+0x78>
  810540:	84000044 	addi	r16,r16,1
  810544:	802090ba 	slli	r16,r16,2
  810548:	9421883a 	add	r16,r18,r16
  81054c:	b0001126 	beq	r22,zero,810594 <__call_exitprocs+0xa4>
  810550:	80804017 	ldw	r2,256(r16)
  810554:	15800f26 	beq	r2,r22,810594 <__call_exitprocs+0xa4>
  810558:	8c7fffc4 	addi	r17,r17,-1
  81055c:	88bfffd8 	cmpnei	r2,r17,-1
  810560:	843fff04 	addi	r16,r16,-4
  810564:	103ff91e 	bne	r2,zero,81054c <__call_exitprocs+0x5c>
  810568:	dfc00817 	ldw	ra,32(sp)
  81056c:	ddc00717 	ldw	r23,28(sp)
  810570:	dd800617 	ldw	r22,24(sp)
  810574:	dd400517 	ldw	r21,20(sp)
  810578:	dd000417 	ldw	r20,16(sp)
  81057c:	dcc00317 	ldw	r19,12(sp)
  810580:	dc800217 	ldw	r18,8(sp)
  810584:	dc400117 	ldw	r17,4(sp)
  810588:	dc000017 	ldw	r16,0(sp)
  81058c:	dec00904 	addi	sp,sp,36
  810590:	f800283a 	ret
  810594:	90800117 	ldw	r2,4(r18)
  810598:	81800017 	ldw	r6,0(r16)
  81059c:	10bfffc4 	addi	r2,r2,-1
  8105a0:	14401726 	beq	r2,r17,810600 <__call_exitprocs+0x110>
  8105a4:	80000015 	stw	zero,0(r16)
  8105a8:	303feb26 	beq	r6,zero,810558 <__call_exitprocs+0x68>
  8105ac:	a446983a 	sll	r3,r20,r17
  8105b0:	90806217 	ldw	r2,392(r18)
  8105b4:	95c00117 	ldw	r23,4(r18)
  8105b8:	1884703a 	and	r2,r3,r2
  8105bc:	1000081e 	bne	r2,zero,8105e0 <__call_exitprocs+0xf0>
  8105c0:	303ee83a 	callr	r6
  8105c4:	90c00117 	ldw	r3,4(r18)
  8105c8:	98805217 	ldw	r2,328(r19)
  8105cc:	1dc0011e 	bne	r3,r23,8105d4 <__call_exitprocs+0xe4>
  8105d0:	90bfe126 	beq	r18,r2,810558 <__call_exitprocs+0x68>
  8105d4:	103fe426 	beq	r2,zero,810568 <__call_exitprocs+0x78>
  8105d8:	1025883a 	mov	r18,r2
  8105dc:	003fd506 	br	810534 <__call_exitprocs+0x44>
  8105e0:	90806317 	ldw	r2,396(r18)
  8105e4:	81002017 	ldw	r4,128(r16)
  8105e8:	1886703a 	and	r3,r3,r2
  8105ec:	1800061e 	bne	r3,zero,810608 <__call_exitprocs+0x118>
  8105f0:	200b883a 	mov	r5,r4
  8105f4:	a809883a 	mov	r4,r21
  8105f8:	303ee83a 	callr	r6
  8105fc:	003ff106 	br	8105c4 <__call_exitprocs+0xd4>
  810600:	94400115 	stw	r17,4(r18)
  810604:	003fe806 	br	8105a8 <__call_exitprocs+0xb8>
  810608:	303ee83a 	callr	r6
  81060c:	003fed06 	br	8105c4 <__call_exitprocs+0xd4>
